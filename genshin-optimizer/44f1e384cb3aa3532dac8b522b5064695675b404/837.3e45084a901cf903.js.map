{"version":3,"file":"837.3e45084a901cf903.js","mappings":"wFAEIA,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,iEACD,aACJN,EAAQ,EAAUG,C,qBCVdJ,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,6MACD,gBACJN,EAAQ,EAAUG,C,sBCVdJ,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,oLACD,eACJN,EAAQ,EAAUG,C,sBCVdJ,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,wKACD,cACJN,EAAQ,EAAUG,C,2DCVlB,SAAe,QAA4B,SAAK,OAAQ,CACtDG,EAAG,uIACD,W,4DCFJ,SAAe,QAA4B,SAAK,OAAQ,CACtDA,EAAG,+FACD,uB,2ICFJ,SAAe,EAAAC,EAAA,IAA4B,SAAK,OAAQ,CACtDD,EAAG,0EACD,gBCFJ,GAAe,EAAAC,EAAA,IAA4B,SAAK,OAAQ,CACtDD,EAAG,+CACD,U,eCFJ,SAAe,EAAAC,EAAA,IAA4B,SAAK,OAAQ,CACtDD,EAAG,kFACD,U,sICFJ,SAAe,EAAAC,EAAA,IAA4B,SAAK,OAAQ,CACtDD,EAAG,mJACD,Y,0ICSJ,MAAME,GAAaC,EAAAA,EAAAA,IAAO,QAAPA,CAAgB,CACjCC,QAAS,SAGI,SAASC,GAAW,MAAEC,EAAK,UAAEC,IAAuD,IAAAC,EACjG,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAC3BC,EAAWH,EAAUH,IACrB,EAAEO,IAAMC,EAAAA,EAAAA,IAAe,aACtBC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAiBC,IAAsBN,EAAAA,EAAAA,WAAS,IAChDO,EAAYC,IAAiBR,EAAAA,EAAAA,WAAS,IACvC,aAAES,EAAY,iBAAEC,GA6BkC,OA7BhBnB,GAAGoB,EAAAA,EAAAA,UAAQ,KACjD,IAAKb,EAAM,OACX,IAAIc,EACJ,IAEE,GADAA,EAASC,KAAKC,MAAMhB,GACE,iBAAXc,EAET,YADAR,EAAY,6BAGhB,CAAE,MAAOW,GAEP,YADAX,EAAY,6BAEd,CAEA,GAAsB,SAAlBQ,EAAOI,OAAmB,CAE5B,MAAMC,EAAc,IAAIC,EAAAA,EACxBD,EAAYE,SAASxB,EAASyB,SAC9B,MAAMV,EAAmB,IAAIW,EAAAA,EAAiBhC,EAAQ,EAAqB4B,GACrER,EAAeC,EAAiBY,WAAWV,EAAQP,EAAiBE,GAC1E,OAAKE,EAKE,CAAEA,eAAcC,yBAJrBN,EAAY,6BAKhB,CACAA,EAAY,2BACN,GACL,CAACN,EAAMH,EAAUU,EAAiBE,EAAYlB,KAAOE,EAAI,CAAC,EAc7D,OAAOgC,EAAAA,EAAAA,IAACC,EAAAA,EAAS,CAAAC,SAAA,EACfC,EAAAA,EAAAA,IAACC,EAAAA,EAAW,CAACC,GAAI,CAAEC,GAAI,GAAIJ,UAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,iCACjDR,EAAAA,EAAAA,IAACI,EAAAA,EAAW,CAAAF,SAAA,EACVF,EAAAA,EAAAA,IAACS,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGN,GAAI,CAAEO,GAAI,GAAIV,SAAA,EACxCC,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAACI,MAAI,EAAAX,UACRF,EAAAA,EAAAA,IAAA,SAAOc,QAAQ,mBAAkBZ,SAAA,EAC/BC,EAAAA,EAAAA,IAACzC,EAAU,CAACqD,OAAO,QAAQC,GAAG,mBAAmBC,KAAK,OAAOC,SAdtDC,UACf,MAAMC,EAAO5B,EAAE6B,OAAOC,MAAM,GAC5B9B,EAAE6B,OAAOE,MAAQ,KACbH,GAAMzC,EAAYyC,EAAKI,MAC3B,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,IAAMnD,EAAQiD,EAAOG,QACrCH,EAAOI,WAAWT,EAAK,KASfjB,EAAAA,EAAAA,IAAC2B,EAAAA,EAAM,CAACC,UAAU,OAAOC,MAAM,OAAOC,WAAW9B,EAAAA,EAAAA,IAAC+B,EAAQ,IAAIhC,SAAE7B,EAAC8D,IAAAA,EAAAC,CAAC,oCAGtEjC,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAACI,MAAI,EAACwB,SAAU,EAAEnC,UACrBC,EAAAA,EAAAA,IAACmC,EAAAA,EAAQ,CAACjC,GAAI,CAAEkC,GAAI,EAAGjC,GAAI,GAAIJ,UAC7BC,EAAAA,EAAAA,IAACqC,EAAAA,EAAU,CAAAtC,SAAExB,GAAWsB,EAAAA,EAAAA,IAAA,QAAAE,SAAA,EAAMC,EAAAA,EAAAA,IAACsC,EAAAA,EAAeC,OAAAC,OAAA,GAAKC,EAAAA,IAAmB,IAAElE,MAAmBsB,EAAAA,EAAAA,IAAA,QAAAE,SAAA,EAAMC,EAAAA,EAAAA,IAAC0C,EAAAA,EAAaH,OAAAC,OAAA,GAAKC,EAAAA,IAAmB,KAACzC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,0CAInKR,EAAAA,EAAAA,IAAC8C,EAAAA,EAAG,CAACzC,GAAI,CAAEzC,QAAS,OAAQmF,IAAK,EAAGC,SAAU,QAAS9C,SAAA,EACrDC,EAAAA,EAAAA,IAAC8C,EAAAA,EAAO,CAACC,OAAO/C,EAAAA,EAAAA,IAACqC,EAAAA,EAAU,CAAAtC,SACX7B,EAAbW,EAAcmE,IAAAA,EAAAf,CAAC,gCAAiCgB,IAAAA,EAAAhB,CAAC,mCACrCiB,UAAU,MAAMC,OAAK,EAAApD,UAClCC,EAAAA,EAAAA,IAAC2C,EAAAA,EAAG,CAACzC,GAAI,CAAEgC,SAAU,EAAGkB,UAAW,QAASrD,UAACC,EAAAA,EAAAA,IAAC2B,EAAAA,EAAM,CAAC0B,WAAS,EAACC,UAAWlF,EAAMyD,MAAOhD,EAAa,UAAY,UAAW0E,QAASA,IAAMzE,GAAeD,GAAaiD,UAAWjD,GAAamB,EAAAA,EAAAA,IAACwD,EAAAA,EAAoB,KAAMxD,EAAAA,EAAAA,IAACyD,EAAAA,EAAQ,IAAI1D,SACnO7B,EAACwF,IAAAA,EAAAzB,CAAC,yCAGPjC,EAAAA,EAAAA,IAAC8C,EAAAA,EAAO,CAACC,OAAO/C,EAAAA,EAAAA,IAACqC,EAAAA,EAAU,CAAAtC,SACN7B,EAAlBS,EAAmBgF,IAAAA,EAAA1B,CAAC,sCAAuC2B,IAAAA,EAAA3B,CAAC,wCAChDiB,UAAU,MAAMC,OAAK,EAAApD,UAClCC,EAAAA,EAAAA,IAAC2C,EAAAA,EAAG,CAACzC,GAAI,CAAEgC,SAAU,EAAGkB,UAAW,QAASrD,UAACC,EAAAA,EAAAA,IAAC2B,EAAAA,EAAM,CAAC0B,WAAS,EAACC,UAAWlF,EAAMyD,MAAOlD,EAAkB,UAAY,UAAW4E,QAASA,IAAM3E,GAAoBD,GAAkBmD,UAAWnD,GAAkBqB,EAAAA,EAAAA,IAACwD,EAAAA,EAAoB,KAAMxD,EAAAA,EAAAA,IAACyD,EAAAA,EAAQ,IAAI1D,SACvP7B,EAAC2F,IAAAA,EAAA5B,CAAC,gDAITjC,EAAAA,EAAAA,IAACqC,EAAAA,EAAU,CAACyB,cAAY,EAACC,QAAQ,UAAShE,UAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,qCAChEL,EAAAA,EAAAA,IAAC2C,EAAAA,EAAG,CAACf,UAAU,WAAW1B,GAAI,CAAE8D,MAAO,OAAQC,WAAY,YAAaC,UAAW,OAAQzD,GAAI,EAAG0D,OAAQ,YAAc/C,MAAOhD,EAAM2C,SAAU1B,GAAKhB,EAAQgB,EAAE6B,OAAOE,SACnKrC,GAAgBC,GAAoBgB,EAAAA,EAAAA,IAACoE,EAAc,CAACrF,aAAcA,EAAcC,iBAAkBA,IAAuBd,EAAEO,OAE/HuB,EAAAA,EAAAA,IAACqE,EAAc,CAAC1G,MAAOA,EAAOqB,iBAAkBA,EAAkBsF,MAjDtDA,KACZjG,EAAQ,IACRG,EAAY,IACZZ,GAAW,MAgDf,CAEA,SAASwG,GAAiBrF,cAAc,OAAEwF,EAAM,UAAEC,EAAS,WAAEC,EAAU,QAAEC,GAAS,iBAAE1F,IAClF,MAAM,EAAEd,IAAMC,EAAAA,EAAAA,IAAe,YAC7B,OAAO0B,EAAAA,EAAAA,IAACsC,EAAAA,EAAQ,CAAApC,SAAA,EACdC,EAAAA,EAAAA,IAACC,EAAAA,EAAW,CAACC,GAAI,CAAEC,GAAI,GAAIJ,UACzBF,EAAAA,EAAAA,IAACwC,EAAAA,EAAU,CAAAtC,SAAA,EACTC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,yBAAwBR,EAAAA,EAAAA,IAAA,UAAAE,SAAA,CAAQ,IAAEwE,WAG3DvE,EAAAA,EAAAA,IAAC2E,EAAAA,EAAO,KACR3E,EAAAA,EAAAA,IAACC,EAAAA,EAAW,CAAAF,UACVF,EAAAA,EAAAA,IAACS,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAET,SAAA,EACzBC,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAACI,MAAI,EAACwB,SAAU,EAAEnC,UACrBC,EAAAA,EAAAA,IAAC4E,EAAW,CAACnD,OAAQ+C,EAAWK,QAAS7F,EAAiB8F,KAAKC,OAAOC,OAAQlE,KAAK,YAErFd,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAACI,MAAI,EAACwB,SAAU,EAAEnC,UACrBC,EAAAA,EAAAA,IAAC4E,EAAW,CAACnD,OAAQiD,EAASG,QAAS7F,EAAiB0F,QAAQK,OAAOC,OAAQlE,KAAK,eAEtFd,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAACI,MAAI,EAACwB,SAAU,EAAEnC,UACrBC,EAAAA,EAAAA,IAAC4E,EAAW,CAACnD,OAAQgD,EAAYI,QAAS7F,EAAiBiG,MAAMF,OAAOC,OAAQlE,KAAK,mBAK/F,CACA,SAAS8D,GAAY,OAAEnD,EAAM,QAAEoD,EAAO,KAAE/D,IAA6E,IAAAoE,EACnH,MAAM,EAAEhH,IAAMC,EAAAA,EAAAA,IAAe,YACvBgH,EAAQ1D,EAAO2D,OACrB,OAAOvF,EAAAA,EAAAA,IAACC,EAAAA,EAAS,CAAAC,SAAA,EACfC,EAAAA,EAAAA,IAACC,EAAAA,EAAW,CAACC,GAAI,CAAEC,GAAI,GAAIJ,UACzBF,EAAAA,EAAAA,IAACwC,EAAAA,EAAU,CAAAtC,SAAA,EACTC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAU,SAAQS,MAAU,IAAEqE,QAG/CnF,EAAAA,EAAAA,IAAC2E,EAAAA,EAAO,KACR9E,EAAAA,EAAAA,IAACI,EAAAA,EAAW,CAAAF,SAAA,EACVF,EAAAA,EAAAA,IAACwC,EAAAA,EAAU,CAAAtC,SAAA,EAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,cAAc,KAACL,EAAAA,EAAAA,IAAA,UAAAD,SAAS0B,EAAO4D,IAAIL,SAAgB,MAAIG,MACxFtF,EAAAA,EAAAA,IAACwC,EAAAA,EAAU,CAAAtC,SAAA,EAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,oBAAoB,KAACL,EAAAA,EAAAA,IAAA,UAAAD,SAAS0B,EAAO6D,UAAUN,SAAgB,MAAIG,MACpGtF,EAAAA,EAAAA,IAACwC,EAAAA,EAAU,CAAAtC,SAAA,EAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,mBAAmB,KAACL,EAAAA,EAAAA,IAAA,UAAAD,SAAS0B,EAAO8D,SAASP,SAAgB,MAAIG,OAE/F1D,EAAO+D,OAAOR,SAAUnF,EAAAA,EAAAA,IAACwC,EAAAA,EAAU,CAACR,MAAM,eAAc9B,SAAA,EAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,kBAAkB,KAACL,EAAAA,EAAAA,IAAA,UAAAD,SAAS0B,EAAO+D,OAAOR,cACxHvD,EAAOgE,cAAe5F,EAAAA,EAAAA,IAACwC,EAAAA,EAAU,CAAAtC,SAAA,EAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,sBAAsB,KAACL,EAAAA,EAAAA,IAAA,UAAAD,SAAS0B,EAAOgE,kBACjG5F,EAAAA,EAAAA,IAACwC,EAAAA,EAAU,CAAAtC,SAAA,EAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,kBAAkB,KAACL,EAAAA,EAAAA,IAAA,UAAAD,SAAS0B,EAAOiE,cAAqB,QAAO1F,EAAAA,EAAAA,IAAA,UAAAD,SAAS8E,SACxF,OAAfK,EAACzD,EAAOkE,WAAPT,EAAgBF,UAAUnF,EAAAA,EAAAA,IAAA,OAAAE,SAAA,EAC3BF,EAAAA,EAAAA,IAACwC,EAAAA,EAAU,CAACR,MAAM,aAAY9B,SAAA,EAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,kBAAkB,KAACL,EAAAA,EAAAA,IAAA,UAAAD,SAAS0B,EAAOkE,QAAQX,SAAgB,MAAIG,MACnHnF,EAAAA,EAAAA,IAAC2C,EAAAA,EAAG,CAACf,UAAU,WAAW1B,GAAI,CAAE8D,MAAO,OAAQC,WAAY,YAAaC,UAAW,OAAQC,OAAQ,YAAc/C,MAAOjC,KAAKyG,UAAUnE,EAAOkE,aAASE,EAAW,GAAIvC,UAAQ,YAItL,CAEA,SAASe,GAAe,MAAE1G,EAAK,iBAAEqB,EAAgB,MAAEsF,IACjD,MAAM,UAAExG,EAAS,YAAEgI,IAAgB/H,EAAAA,EAAAA,YAAWC,EAAAA,GACxCC,EAAWH,EAAUH,IACrB,EAAEO,IAAMC,EAAAA,EAAAA,IAAe,YACvB4H,GAAYC,EAAAA,EAAAA,cAAY,KACvBhH,IACLA,EAAiBiH,YAAYhI,GAC7B6H,EAAYnI,EAAOqB,GACnBA,EAAiBkH,iBACjB5B,IAAO,GACN,CAACrG,EAAUN,EAAOqB,EAAkBsF,EAAOwB,IAG9C,OAAOjG,EAAAA,EAAAA,IAAAsG,EAAAA,GAAA,CAAApG,SAAA,EAAEC,EAAAA,EAAAA,IAAC2E,EAAAA,EAAO,KAAG3E,EAAAA,EAAAA,IAACC,EAAAA,EAAW,CAACC,GAAI,CAAEC,GAAI,GAAIJ,UAC7CC,EAAAA,EAAAA,IAAC2B,EAAAA,EAAM,CAACE,MAAO7C,EAAmB,UAAY,QAASsE,UAAWtE,EAAkBuE,QAASwC,EAAWjE,WAAW9B,EAAAA,EAAAA,IAACoG,EAAAA,EAAc,IAAIrG,UAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,8CAEhK,C,8BClKe,SAASgG,KACtB,MAAM,IAAQlI,EAAAA,EAAAA,IAAe,CAAC,aAC9B,OAAO0B,EAAAA,EAAAA,IAACC,EAAAA,EAAS,CAAAC,SAAA,EACfC,EAAAA,EAAAA,IAACC,EAAAA,EAAW,CAACC,GAAI,CAAEC,GAAI,GAAIJ,UACzBC,EAAAA,EAAAA,IAACqC,EAAAA,EAAU,CAAC0B,QAAQ,YAAWhE,SAC5B7B,EAAC8D,IAAAA,EAAAC,EAAC,4BAGPjC,EAAAA,EAAAA,IAAC2E,EAAAA,EAAO,KACR3E,EAAAA,EAAAA,IAACC,EAAAA,EAAW,CAACC,GAAI,CAAEzC,QAAS,OAAQ6I,cAAe,SAAU1D,IAAK,GAAI7C,UACpEC,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG+F,QAAS,CAAEC,GAAI,EAAGC,GAAI,GAAK1G,UACpD2G,EAAAA,EAAAA,IAAM,EAAG,GAAGC,KAAIC,IAAK5G,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAASI,MAAI,EAAC8F,GAAI,EAAEzG,UAC7CC,EAAAA,EAAAA,IAAC6G,GAAQ,CAAClJ,MAAOiJ,KADcA,WAMzC,CAEA,SAASC,IAAS,MAAElJ,IAClB,MAAM,UAAEG,EAAWG,SAAU6I,EAAM,YAAEhB,IAAgB/H,EAAAA,EAAAA,YAAWC,EAAAA,GAC1DC,EAAWH,EAAUH,KACpB,KAAE0D,EAAI,SAAE0F,GAAYC,IAAa1I,EAAAA,EAAAA,UAASL,EAASgJ,OAAOC,QACjEC,EAAAA,EAAAA,YAAU,IAAMlJ,EAASgJ,OAAOG,QAAO,CAACC,EAAGJ,IAAWD,EAAUC,MAAU,CAAChJ,KAE3EkJ,EAAAA,EAAAA,YAAU,IAAMH,EAAU/I,EAASgJ,OAAOC,QAAQ,CAACjJ,IAEnD,MAAMqJ,EAAUR,IAAW7I,GACpBsJ,EAAYC,EAAQC,IAAWC,EAAAA,EAAAA,MAChC,EAAExJ,IAAMC,EAAAA,EAAAA,IAAe,CAAC,aACxBwJ,EAAU1J,EAASgH,MAAM2C,KAAK5C,OAC9B6C,EAAS5J,EAAS6G,KAAKC,OAAOC,OAC9B8C,EAAY7J,EAASyG,QAAQK,OAAOC,OACpC+C,EAAUC,QAAQL,GAAWE,GAAUC,GACvCG,GAAkBjC,EAAAA,EAAAA,cACtB,IAAMkC,UAAUC,UAAUC,UAAUjJ,KAAKyG,UAAU3H,EAASoK,eACzDC,MAAK,IAAMC,MAAM,mCACjBC,MAAMC,QAAQC,QACjB,CAACzK,IAGG0K,GAAW3C,EAAAA,EAAAA,cAAY,KACtB4C,OAAOC,QAAS,oCAAmCxH,SACxDpD,EAAS6K,QACT7K,EAASiI,iBAAgB,GACxB,CAACjI,EAAUoD,IAER0H,GAAW/C,EAAAA,EAAAA,cAAY,KAC3B,MACMgD,GADO,IAAIC,MACIC,cAAcC,MAAM,KAAK,GAAGC,QAAQ,IAAK,KAAKC,WAAW,IAAK,KAC7EC,EAAUnK,KAAKyG,UAAU3H,EAASoK,cAClC9J,EAAY,GAAE8C,EAAKkI,OAAOF,WAAW,IAAK,QAAQL,SAElDQ,EAAIC,SAASC,cAAc,KACjCF,EAAET,SAAWxK,EACbiL,EAAEG,KAAQ,uCAAsBC,mBAAmBN,KACnDE,EAAEtI,OAAS,SACXuI,SAASI,KAAKC,YAAYN,GAC1BA,EAAEO,QACFN,SAASI,KAAKG,YAAYR,EAAE,GAC3B,CAACvL,EAAUoD,IAER4I,GAASjE,EAAAA,EAAAA,cAAY,KACrBsB,IACJR,EAAOZ,iBACPjI,EAASgI,YAAYa,GACrBhB,EAAYnI,EAAOM,GAAS,GAC3B,CAACN,EAAOmI,EAAagB,EAAQQ,EAASrJ,KAElCiM,EAAUC,IAAe7L,EAAAA,EAAAA,UAAS+C,IACzC8F,EAAAA,EAAAA,YAAU,IAAMgD,EAAY9I,IAAO,CAACA,IAEpC,MAAM+I,GAASpE,EAAAA,EAAAA,cAAY,KACzB/H,EAASgJ,OAAOoD,IAAI,CAAEhJ,KAAM6I,IAC5BjM,EAASiI,gBAAgB,GACxB,CAACgE,EAAUjM,IACRqM,GAAYtE,EAAAA,EAAAA,cAAY3G,GAAe,UAAVA,EAAEkL,KAAmBH,KAAU,CAACA,IAEnE,OAAOvK,EAAAA,EAAAA,IAACsC,EAAAA,EAAQ,CAACjC,GAAI,CAAEsK,OAAQ,OAAQC,UAAWnD,EAAU,mCAAgCzB,GAAY9F,SAAA,EACtGF,EAAAA,EAAAA,IAACI,EAAAA,EAAW,CAACC,GAAI,CAAEzC,QAAS,OAAQmF,IAAK,EAAG8H,eAAgB,iBAAkB3K,SAAA,EAC5EC,EAAAA,EAAAA,IAAE2K,EAAAA,GAAe,CAACvJ,MAAO8I,EAAUhK,GAAI,CAAE0K,aAAc,EAAGxI,GAAI,EAAGF,SAAU,GAAKnB,SAAW1B,GAAM8K,EAAY9K,EAAE6B,OAAOE,OAAQgJ,OAAQA,EAAQS,UAAWP,KACvJhD,IAAWtH,EAAAA,EAAAA,IAAC2B,EAAAA,EAAM,CAACG,WAAW9B,EAAAA,EAAAA,IAAC8K,EAAY,IAAKvH,QAAS0G,EAAQpI,MAAM,UAAS9B,SAAE7B,EAAC8E,IAAAA,EAAAf,EAAC,gCACtFjC,EAAAA,EAAAA,IAAC+K,EAAAA,EAAI,CAAClJ,MAAOyF,EAAU,UAAY,YAAa0D,MAAO1D,EAAUpJ,EAAC+E,IAAAA,EAAAhB,EAAC,2BAA2B,GAAE/D,EAACwF,KAAAA,GAAAzB,EAAC,0BAAuBhE,EAASgN,gBAEpIjL,EAAAA,EAAAA,IAAC2E,EAAAA,EAAO,KACR3E,EAAAA,EAAAA,IAACC,EAAAA,EAAW,CAAAF,UACVF,EAAAA,EAAAA,IAAC8C,EAAAA,EAAG,CAAClF,QAAQ,OAAOmF,IAAK,EAAE7C,SAAA,EACzBF,EAAAA,EAAAA,IAAC8C,EAAAA,EAAG,CAACT,SAAU,EAAEnC,SAAA,EACfF,EAAAA,EAAAA,IAACwC,EAAAA,EAAU,CAAC6I,QAAM,EAAAnL,SAAA,EAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,gBAAgB,KAACL,EAAAA,EAAAA,IAAA,UAAAD,SAAS4H,QAClE9H,EAAAA,EAAAA,IAACwC,EAAAA,EAAU,CAAC6I,QAAM,EAAAnL,SAAA,EAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,eAAe,KAACL,EAAAA,EAAAA,IAAA,UAAAD,SAAS8H,QACjEhI,EAAAA,EAAAA,IAACwC,EAAAA,EAAU,CAAC6I,QAAM,EAAAnL,SAAA,EAACC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,kBAAkB,KAACL,EAAAA,EAAAA,IAAA,UAAAD,SAAS+H,SACjEf,IAAY/G,EAAAA,EAAAA,IAACqC,EAAAA,EAAU,CAAC6I,QAAM,EAAAnL,UAACC,EAAAA,EAAAA,IAAA,UAAAD,SAAU,IAAIkJ,KAAKlC,GAAUoE,yBAEjEnL,EAAAA,EAAAA,IAAC2C,EAAAA,EAAG,CAAA5C,UACFF,EAAAA,EAAAA,IAACS,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG+F,QAAS,CAAEC,GAAI,GAAIzG,SAAA,EAC7CC,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAACI,MAAI,EAAC8F,GAAI,EAAEzG,UACfC,EAAAA,EAAAA,IAAC2B,EAAAA,EAAM,CAAC0B,WAAS,EAACC,UAAWyE,EAASlG,MAAM,OAAO0B,QAAS0E,EAAiBnG,WAAW9B,EAAAA,EAAAA,IAACoL,EAAAA,EAAgB,IAAIrL,UAC3GC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAGA,EAAGmC,QAAQ,kCAGzBR,EAAAA,EAAAA,IAACS,EAAAA,GAAI,CAACI,MAAI,EAAC8F,GAAI,EAAEzG,SAAA,EACfC,EAAAA,EAAAA,IAACqL,EAAAA,EAAY,CAACC,KAAM/D,EAAYE,QAASA,EAAQ1H,UAC/CC,EAAAA,EAAAA,IAACtC,EAAU,CAACC,MAAOA,EAAOC,UAAW6J,OAEvCzH,EAAAA,EAAAA,IAAC2B,EAAAA,EAAM,CAAC0B,WAAS,EAACzB,UAAU,OAAOC,MAAM,OAAOC,WAAW9B,EAAAA,EAAAA,IAACuL,EAAM,IAAKhI,QAASiE,EAAOzH,SACpF7B,EAACyF,KAAAA,GAAA1B,EAAC,qCAGPjC,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAACI,MAAI,EAAC8F,GAAI,EAAEzG,UACfC,EAAAA,EAAAA,IAAC2B,EAAAA,EAAM,CAAC0B,WAAS,EAACC,UAAWyE,EAASxE,QAASwF,EAAUjH,WAAW9B,EAAAA,EAAAA,IAACwL,EAAAA,EAAQ,IAAIzL,SAC9E7B,EAAC0F,KAAAA,GAAA3B,EAAC,sCAGPjC,EAAAA,EAAAA,IAACM,EAAAA,GAAI,CAACI,MAAI,EAAC8F,GAAI,EAAEzG,UACfC,EAAAA,EAAAA,IAAC2B,EAAAA,EAAM,CAAC0B,WAAS,EAACC,UAAWyE,EAASlG,MAAM,QAAQ0B,QAASoF,EAAU7G,WAAW9B,EAAAA,EAAAA,IAACyL,EAAM,IAAI1L,SAC1F7B,EAAC2F,KAAAA,GAAA5B,EAAC,+CAQnB,C,oDClIe,SAASyJ,KACtB,MAAM,IAAQvN,EAAAA,EAAAA,MACd,OAAO0B,EAAAA,EAAAA,IAACC,EAAAA,EAAS,CAAAC,SAAA,EACfF,EAAAA,EAAAA,IAACI,EAAAA,EAAW,CAACC,GAAI,CAAEC,GAAI,GAAIJ,SAAA,CACxB7B,EAAE,wCAAwC,KAAC8B,EAAAA,EAAAA,IAAC2L,GAAAA,EAAO,CAAC9J,MAAM,UAAS9B,SAAE7B,EAAE,8BAE1E8B,EAAAA,EAAAA,IAAC2E,EAAAA,EAAO,KACR3E,EAAAA,EAAAA,IAACC,EAAAA,EAAW,CAAAF,UACVC,EAAAA,EAAAA,IAAC4L,GAAgB,QAGvB,CAEA,MAAMC,GAAkB,CACtB,IAAO,2BACP,IAAO,2BACP,GAAM,UACN,GAAM,UACN,GAAM,aACN,GAAM,cACN,GAAM,mBACN,GAAM,WACN,GAAM,qBACN,GAAM,qBACN,GAAM,eACN,GAAM,sEACN,GAAM,6CACN,GAAM,eACN,GAAM,wBAED,SAASD,KACd,MAAM,EAAG,KAAEE,IAAS3N,EAAAA,EAAAA,IAAe,CAAC,KAAM,aACpC4N,EAAiBC,GAAS,IAAMF,EAAKG,eAAeD,GACpDE,EAAcJ,EAAKK,UAAU,GACnC,OAAOnM,EAAAA,EAAAA,IAACoM,GAAAA,EAAc,CAAC/I,WAAS,EAACN,MAAO7E,EAAE,uCAAwC,CAAEmO,SAAUnO,EAAG,aAAYgO,OAAkBnM,SAC5HuM,GAAAA,EAAAA,KAAsBN,IAASnM,EAAAA,EAAAA,IAAC0M,GAAAA,EAAQ,CAAYC,SAAUN,IAAgBF,EAAM1I,SAAU4I,IAAgBF,EAAMzI,QAASwI,EAAcC,GAAMjM,SAAA,EAChJC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAACC,QAAU,aAAY2L,MAC5BA,IAASE,EAAe,KAAIL,GAAgBG,MAAW,KAFXA,MAKnD,CCvCe,SAASS,KACtB,MAAM,IAAQtO,EAAAA,EAAAA,IAAe,CAAC,aAG9B,OAFAuO,EAAAA,GAAAA,KAAa,CAAEC,QAAS,WAAYC,KAAM,cAEnC/M,EAAAA,EAAAA,IAACsC,EAAAA,EAAQ,CAACjC,GAAI,CAAE2M,GAAI,GAAI9M,SAAA,EAC7BC,EAAAA,EAAAA,IAACC,EAAAA,EAAW,CAACC,GAAI,CAAEC,GAAI,GAAIJ,UACzBC,EAAAA,EAAAA,IAACqC,EAAAA,EAAU,CAAC0B,QAAQ,YAAWhE,UAC7BC,EAAAA,EAAAA,IAACI,EAAAA,GAAK,CAAClC,EAAMmC,QAAQ,eAGzBL,EAAAA,EAAAA,IAAC2E,EAAAA,EAAO,KACR9E,EAAAA,EAAAA,IAACI,EAAAA,EAAW,CAACC,GAAI,CAAEzC,QAAS,OAAQ6I,cAAe,SAAU1D,IAAK,GAAI7C,SAAA,EACpEC,EAAAA,EAAAA,IAAC0L,GAAY,KACb1L,EAAAA,EAAAA,IAACqG,GAAY,SAGnB,C","sources":["webpack:///../../node_modules/@mui/icons-material/ArrowBack.js","webpack:///../../node_modules/@mui/icons-material/ContentPaste.js","webpack:///../../node_modules/@mui/icons-material/TextSnippet.js","webpack:///../../node_modules/@mui/icons-material/UploadFile.js","webpack:///../../node_modules/@mui/icons-material/esm/CheckBox.js","webpack:///../../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","webpack:///../../node_modules/@mui/icons-material/esm/ImportExport.js","webpack:///../../node_modules/@mui/icons-material/esm/Upload.js","webpack:///../../node_modules/@mui/icons-material/esm/Delete.js","webpack:///../../node_modules/@mui/icons-material/esm/FileOpen.js","webpack:///./src/app/PageSettings/UploadCard.tsx","webpack:///./src/app/PageSettings/DatabaseCard.tsx","webpack:///./src/app/PageSettings/LanguageCard.tsx","webpack:///./src/app/PageSettings/index.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z\"\n}), 'ContentPaste');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m20.41 8.41-4.83-4.83c-.37-.37-.88-.58-1.41-.58H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V9.83c0-.53-.21-1.04-.59-1.42zM7 7h7v2H7V7zm10 10H7v-2h10v2zm0-4H7v-2h10v2z\"\n}), 'TextSnippet');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm4 18H6V4h7v5h5v11zM8 15.01l1.41 1.41L11 14.84V19h2v-4.16l1.59 1.59L16 15.01 12.01 11z\"\n}), 'UploadFile');\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 3 5 6.99h3V14h2V6.99h3L9 3zm7 14.01V10h-2v7.01h-3L15 21l4-3.99h-3z\"\n}), 'ImportExport');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 20h14v-2H5v2zm0-10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Upload');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M14 2H6c-1.1 0-2 .9-2 2v16c0 1.1.89 2 1.99 2H15v-8h5V8l-6-6zm-1 7V3.5L18.5 9H13zm4 12.66V16h5.66v2h-2.24l2.95 2.95-1.41 1.41L19 19.41v2.24h-2z\"\n}), 'FileOpen');","import { CheckBox, CheckBoxOutlineBlank, FileOpen } from '@mui/icons-material'\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\r\nimport TextSnippetIcon from '@mui/icons-material/TextSnippet'\r\nimport UploadFileIcon from '@mui/icons-material/UploadFile'\r\nimport { Box, Button, CardContent, Divider, Grid, styled, Tooltip, Typography } from '@mui/material'\r\nimport { useCallback, useContext, useMemo, useState } from \"react\"\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport CardDark from '../Components/Card/CardDark'\r\nimport CardLight from '../Components/Card/CardLight'\r\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\"\r\nimport { SandboxStorage } from '../Database/DBStorage'\r\nimport { ImportResult, ImportResultCounter } from '../Database/exim'\r\nimport { iconInlineProps } from '../SVGIcons'\r\nconst InvisInput = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nexport default function UploadCard({ index, onReplace }: { index: number, onReplace: () => void }) {\r\n  const { databases } = useContext(DatabaseContext)\r\n  const database = databases[index]\r\n  const { t } = useTranslation(\"settings\");\r\n  const [data, setdata] = useState(\"\")\r\n  const [filename, setfilename] = useState(\"\")\r\n  const [errorMsg, setErrorMsg] = useState(\"\") // TODO localize error msg\r\n  const [keepNotInImport, setKeepNotInImport] = useState(false)\r\n  const [ignoreDups, setIgnoreDups] = useState(false)\r\n  const { importResult, importedDatabase } = useMemo(() => {\r\n    if (!data) return\r\n    let parsed: any\r\n    try {\r\n      parsed = JSON.parse(data)\r\n      if (typeof parsed !== \"object\") {\r\n        setErrorMsg(\"uploadCard.error.jsonParse\")\r\n        return\r\n      }\r\n    } catch (e) {\r\n      setErrorMsg(\"uploadCard.error.jsonParse\")\r\n      return\r\n    }\r\n    // Figure out the file format\r\n    if (parsed.format === \"GOOD\") {\r\n      // Parse as GOOD format\r\n      const copyStorage = new SandboxStorage()\r\n      copyStorage.copyFrom(database.storage)\r\n      const importedDatabase = new ArtCharDatabase((index + 1) as 1 | 2 | 3 | 4, copyStorage)\r\n      const importResult = importedDatabase.importGOOD(parsed, keepNotInImport, ignoreDups)\r\n      if (!importResult) {\r\n        setErrorMsg(\"uploadCard.error.goInvalid\")\r\n        return\r\n      }\r\n\r\n      return { importResult, importedDatabase }\r\n    }\r\n    setErrorMsg(\"uploadCard.error.unknown\")\r\n    return\r\n  }, [data, database, keepNotInImport, ignoreDups, index]) ?? {}\r\n  const reset = () => {\r\n    setdata(\"\")\r\n    setfilename(\"\")\r\n    onReplace()\r\n  }\r\n  const onUpload = async e => {\r\n    const file = e.target.files[0]\r\n    e.target.value = null // reset the value so the same file can be uploaded again...\r\n    if (file) setfilename(file.name)\r\n    const reader = new FileReader()\r\n    reader.onload = () => setdata(reader.result as string)\r\n    reader.readAsText(file)\r\n  }\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}><Trans t={t} i18nKey=\"settings:uploadCard.title\" /></CardContent>\r\n    <CardContent>\r\n      <Grid container spacing={2} sx={{ mb: 1 }}>\r\n        <Grid item>\r\n          <label htmlFor=\"icon-button-file\">\r\n            <InvisInput accept=\".json\" id=\"icon-button-file\" type=\"file\" onChange={onUpload} />\r\n            <Button component=\"span\" color=\"info\" startIcon={<FileOpen />}>{t`uploadCard.buttons.open`}</Button>\r\n          </label>\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <CardDark sx={{ px: 2, py: 1 }}>\r\n            <Typography>{filename ? <span><TextSnippetIcon {...iconInlineProps} /> {filename}</span> : <span><ArrowBackIcon {...iconInlineProps} /> <Trans t={t} i18nKey=\"settings:uploadCard.hint\" /></span>}</Typography>\r\n          </CardDark>\r\n        </Grid>\r\n      </Grid>\r\n      <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\" }}>\r\n        <Tooltip title={<Typography>\r\n          {ignoreDups ? t`uploadCard.tooltip.ignoreDup` : t`uploadCard.tooltip.detectdup`}\r\n        </Typography>} placement='top' arrow >\r\n          <Box sx={{ flexGrow: 1, flexBasis: \"10em\" }}><Button fullWidth disabled={!data} color={ignoreDups ? \"primary\" : \"success\"} onClick={() => setIgnoreDups(!ignoreDups)} startIcon={ignoreDups ? <CheckBoxOutlineBlank /> : <CheckBox />}>\r\n            {t`uploadCard.buttons.detectDups`}\r\n          </Button></Box>\r\n        </Tooltip>\r\n        <Tooltip title={<Typography>\r\n          {keepNotInImport ? t`uploadCard.tooltip.keepNotInImport` : t`uploadCard.tooltip.delNotInImport`}\r\n        </Typography>} placement='top' arrow >\r\n          <Box sx={{ flexGrow: 1, flexBasis: \"10em\" }}><Button fullWidth disabled={!data} color={keepNotInImport ? \"primary\" : \"success\"} onClick={() => setKeepNotInImport(!keepNotInImport)} startIcon={keepNotInImport ? <CheckBoxOutlineBlank /> : <CheckBox />} >\r\n            {t`uploadCard.buttons.delNotInImport`}\r\n          </Button></Box>\r\n        </Tooltip>\r\n      </Box>\r\n      <Typography gutterBottom variant=\"caption\"><Trans t={t} i18nKey=\"settings:uploadCard.hintPaste\" /></Typography>\r\n      <Box component=\"textarea\" sx={{ width: \"100%\", fontFamily: \"monospace\", minHeight: \"10em\", mb: 2, resize: \"vertical\" }} value={data} onChange={e => setdata(e.target.value)} />\r\n      {(importResult && importedDatabase) ? <GOODUploadInfo importResult={importResult} importedDatabase={importedDatabase} /> : t(errorMsg)}\r\n    </CardContent>\r\n    <GOUploadAction index={index} importedDatabase={importedDatabase} reset={reset} />\r\n  </CardLight>\r\n}\r\n\r\nfunction GOODUploadInfo({ importResult: { source, artifacts, characters, weapons }, importedDatabase }: { importResult: ImportResult, importedDatabase: ArtCharDatabase }) {\r\n  const { t } = useTranslation(\"settings\")\r\n  return <CardDark>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Typography>\r\n        <Trans t={t} i18nKey=\"uploadCard.dbSource\" /><strong> {source}</strong>\r\n      </Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent >\r\n      <Grid container spacing={2}>\r\n        <Grid item flexGrow={1}>\r\n          <MergeResult result={artifacts} dbTotal={importedDatabase.arts.values.length} type=\"arts\" />\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <MergeResult result={weapons} dbTotal={importedDatabase.weapons.values.length} type=\"weapons\" />\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <MergeResult result={characters} dbTotal={importedDatabase.chars.values.length} type=\"chars\" />\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\nfunction MergeResult({ result, dbTotal, type }: { result: ImportResultCounter<any>, dbTotal: number, type: string }) {\r\n  const { t } = useTranslation(\"settings\")\r\n  const total = result.import\r\n  return <CardLight >\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Typography>\r\n        <Trans t={t} i18nKey={`count.${type}`} /> {total}\r\n      </Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <Typography><Trans t={t} i18nKey=\"count.new\" /> <strong>{result.new.length}</strong> / {total}</Typography>\r\n      <Typography><Trans t={t} i18nKey=\"count.unchanged\" /> <strong>{result.unchanged.length}</strong> / {total}</Typography>\r\n      <Typography><Trans t={t} i18nKey=\"count.upgraded\" /> <strong>{result.upgraded.length}</strong> / {total}</Typography>\r\n      {/* <Typography><Trans t={t} i18nKey=\"count.updated\" /> <strong>{result.update.length}</strong></Typography> */}\r\n      {!!result.remove.length && <Typography color=\"warning.main\"><Trans t={t} i18nKey=\"count.removed\" /> <strong>{result.remove.length}</strong></Typography>}\r\n      {!!result.notInImport && <Typography><Trans t={t} i18nKey=\"count.notInImport\" /> <strong>{result.notInImport}</strong></Typography>}\r\n      <Typography><Trans t={t} i18nKey=\"count.dbTotal\" /> <strong>{result.beforeMerge}</strong> -&gt; <strong>{dbTotal}</strong></Typography>\r\n      {!!result.invalid?.length && <div>\r\n        <Typography color=\"error.main\"><Trans t={t} i18nKey=\"count.invalid\" /> <strong>{result.invalid.length}</strong> / {total}</Typography>\r\n        <Box component=\"textarea\" sx={{ width: \"100%\", fontFamily: \"monospace\", minHeight: \"10em\", resize: \"vertical\" }} value={JSON.stringify(result.invalid, undefined, 2)} disabled />\r\n      </div>}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\nfunction GOUploadAction({ index, importedDatabase, reset }: { index: number, importedDatabase?: ArtCharDatabase, reset: () => void }) {\r\n  const { databases, setDatabase } = useContext(DatabaseContext)\r\n  const database = databases[index]\r\n  const { t } = useTranslation(\"settings\")\r\n  const replaceDB = useCallback(() => {\r\n    if (!importedDatabase) return\r\n    importedDatabase.swapStorage(database)\r\n    setDatabase(index, importedDatabase)\r\n    importedDatabase.toExtraLocalDB()\r\n    reset()\r\n  }, [database, index, importedDatabase, reset, setDatabase])\r\n\r\n\r\n  return <><Divider /><CardContent sx={{ py: 1 }}>\r\n    <Button color={importedDatabase ? \"success\" : \"error\"} disabled={!importedDatabase} onClick={replaceDB} startIcon={<UploadFileIcon />}><Trans t={t} i18nKey=\"settings:uploadCard.replaceDatabase\" /></Button>\r\n  </CardContent></>\r\n}\r\n","import { Delete, Download, ImportExport, Upload } from '@mui/icons-material'\nimport ContentPasteIcon from '@mui/icons-material/ContentPaste'\nimport { Box, Button, CardContent, Chip, Divider, Grid, Typography } from '@mui/material'\nimport { useCallback, useContext, useEffect, useState } from \"react\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport CardDark from '../Components/Card/CardDark'\nimport CardLight from '../Components/Card/CardLight'\nimport { StyledInputBase } from '../Components/CustomNumberInput'\nimport ModalWrapper from '../Components/ModalWrapper'\nimport { DatabaseContext } from \"../Database/Database\"\nimport useBoolState from '../ReactHooks/useBoolState'\nimport { range } from '../Util/Util'\nimport UploadCard from './UploadCard'\nexport default function DatabaseCard() {\n  const { t } = useTranslation([\"settings\"]);\n  return <CardLight>\n    <CardContent sx={{ py: 1 }}>\n      <Typography variant=\"subtitle1\">\n        {t`DatabaseCard.title`}\n      </Typography>\n    </CardContent>\n    <Divider />\n    <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n      <Grid container spacing={2} columns={{ xs: 1, md: 2, }}>\n        {range(0, 3).map(i => <Grid key={i} item xs={1}>\n          <DataCard index={i} />\n        </Grid>)}\n      </Grid>\n    </CardContent >\n  </CardLight >\n}\n\nfunction DataCard({ index }: { index: number }) {\n  const { databases, database: mainDB, setDatabase } = useContext(DatabaseContext)\n  const database = databases[index]\n  const [{ name, lastEdit }, setDBMeta] = useState(database.dbMeta.get())\n  useEffect(() => database.dbMeta.follow((r, dbMeta) => setDBMeta(dbMeta)), [database])\n  // Need to update the dbMeta when database changes\n  useEffect(() => setDBMeta(database.dbMeta.get()), [database])\n\n  const current = mainDB === database\n  const [uploadOpen, onOpen, onClose] = useBoolState()\n  const { t } = useTranslation([\"settings\"]);\n  const numChar = database.chars.keys.length\n  const numArt = database.arts.values.length\n  const numWeapon = database.weapons.values.length\n  const hasData = Boolean(numChar || numArt || numWeapon)\n  const copyToClipboard = useCallback(\n    () => navigator.clipboard.writeText(JSON.stringify(database.exportGOOD()))\n      .then(() => alert(\"Copied database to clipboard.\"))\n      .catch(console.error),\n    [database],\n  )\n\n  const onDelete = useCallback(() => {\n    if (!window.confirm(`Are you sure you want to delete \"${name}\"?`)) return\n    database.clear()\n    database.toExtraLocalDB()\n  }, [database, name])\n\n  const download = useCallback(() => {\n    const date = new Date()\n    const dateStr = date.toISOString().split(\".\")[0].replace(\"T\", \"_\").replaceAll(\":\", \"-\")\n    const JSONStr = JSON.stringify(database.exportGOOD())\n    const filename = `${name.trim().replaceAll(\" \", \"_\")}_${dateStr}.json`\n    const contentType = \"application/json;charset=utf-8\"\n    const a = document.createElement('a');\n    a.download = filename\n    a.href = `data:${contentType},${encodeURIComponent(JSONStr)}`\n    a.target = \"_blank\"\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n  }, [database, name])\n\n  const onSwap = useCallback(() => {\n    if (current) return\n    mainDB.toExtraLocalDB()\n    database.swapStorage(mainDB)\n    setDatabase(index, database)\n  }, [index, setDatabase, mainDB, current, database])\n\n  const [tempName, setTempName] = useState(name)\n  useEffect(() => setTempName(name), [name])\n\n  const onBlur = useCallback(() => {\n    database.dbMeta.set({ name: tempName })\n    database.toExtraLocalDB()\n  }, [tempName, database])\n  const onKeyDOwn = useCallback(e => e.key === \"Enter\" && onBlur(), [onBlur],)\n\n  return <CardDark sx={{ height: \"100%\", boxShadow: current ? \"0px 0px 0px 2px green inset\" : undefined }}>\n    <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n      < StyledInputBase value={tempName} sx={{ borderRadius: 1, px: 1, flexGrow: 1 }} onChange={(e) => setTempName(e.target.value)} onBlur={onBlur} onKeyDown={onKeyDOwn} />\n      {!current && <Button startIcon={<ImportExport />} onClick={onSwap} color=\"warning\">{t`DatabaseCard.button.swap`}</Button>}\n      <Chip color={current ? \"success\" : \"secondary\"} label={current ? t`DatabaseCard.currentDB` : `${t`DatabaseCard.title`} ${database.dbIndex}`} />\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Box display=\"flex\" gap={2}>\n        <Box flexGrow={1}>\n          <Typography noWrap><Trans t={t} i18nKey=\"count.chars\" /> <strong>{numChar}</strong></Typography>\n          <Typography noWrap><Trans t={t} i18nKey=\"count.arts\" /> <strong>{numArt}</strong></Typography>\n          <Typography noWrap><Trans t={t} i18nKey=\"count.weapons\" /> <strong>{numWeapon}</strong></Typography>\n          {!!lastEdit && <Typography noWrap><strong>{(new Date(lastEdit).toLocaleString())}</strong></Typography>}\n        </Box>\n        <Box>\n          <Grid container spacing={1} columns={{ xs: 2 }} >\n            <Grid item xs={1}>\n              <Button fullWidth disabled={!hasData} color=\"info\" onClick={copyToClipboard} startIcon={<ContentPasteIcon />}>\n                <Trans t={t} i18nKey=\"DatabaseCard.button.copy\" />\n              </Button>\n            </Grid>\n            <Grid item xs={1}>\n              <ModalWrapper open={uploadOpen} onClose={onClose} >\n                <UploadCard index={index} onReplace={onClose} />\n              </ModalWrapper>\n              <Button fullWidth component=\"span\" color=\"info\" startIcon={<Upload />} onClick={onOpen}>\n                {t`DatabaseCard.button.upload`}\n              </Button>\n            </Grid>\n            <Grid item xs={1}>\n              <Button fullWidth disabled={!hasData} onClick={download} startIcon={<Download />}>\n                {t`DatabaseCard.button.download`}\n              </Button>\n            </Grid>\n            <Grid item xs={1}>\n              <Button fullWidth disabled={!hasData} color=\"error\" onClick={onDelete} startIcon={<Delete />}>\n                {t`DatabaseCard.button.delete`}\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </CardContent>\n  </CardDark>\n}\n","import { CardContent, Divider, MenuItem } from '@mui/material'\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport CardLight from '../Components/Card/CardLight'\r\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton'\r\nimport SqBadge from '../Components/SqBadge'\r\nimport { languageCodeList } from \"../i18n\"\r\nexport default function LanguageCard() {\r\n  const { t } = useTranslation();\r\n  return <CardLight>\r\n    <CardContent sx={{ py: 1 }}>\r\n      {t(\"settings:languageCard.selectLanguage\")} <SqBadge color=\"warning\">{t(\"ui:underConstruction\")}</SqBadge>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <LanguageDropdown />\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\nconst nativeLanguages = {\r\n  \"chs\": \"简体中文\",\r\n  \"cht\": \"繁體中文\",\r\n  \"de\": \"Deutsch\",\r\n  \"en\": \"English\",\r\n  \"es\": \"Español\",\r\n  \"fr\": \"Français\",\r\n  \"id\": \"Bahasa Indonesia\",\r\n  \"it\": \"Italiano\",\r\n  \"ja\": \"日本語\",\r\n  \"ko\": \"한국어\",\r\n  \"pt\": \"Português\",\r\n  \"ru\": \"Русский язык\",\r\n  \"th\": \"ภาษาไทย\",\r\n  \"tr\": \"Türkçe\",\r\n  \"vi\": \"Tiếng Việt\"\r\n}\r\nexport function LanguageDropdown() {\r\n  const { t, i18n } = useTranslation([\"ui\", \"settings\"]);\r\n  const onSetLanguage = (lang) => () => i18n.changeLanguage(lang);\r\n  const currentLang = i18n.languages[0];\r\n  return <DropdownButton fullWidth title={t('settings:languageCard.languageFormat', { language: t(`languages:${currentLang}`) })}>\r\n    {languageCodeList.map((lang) => <MenuItem key={lang} selected={currentLang === lang} disabled={currentLang === lang} onClick={onSetLanguage(lang)}>\r\n      <Trans i18nKey={`languages:${lang}`} />\r\n      {lang !== currentLang ? ` (${nativeLanguages[lang]})` : \"\"}\r\n    </MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { CardContent, Divider, Typography } from '@mui/material'\r\nimport ReactGA from 'react-ga4'\r\nimport { Trans, useTranslation } from \"react-i18next\"\r\nimport CardDark from '../Components/Card/CardDark'\r\nimport DatabaseCard from './DatabaseCard'\r\nimport LanguageCard from './LanguageCard'\r\n\r\nexport default function PageSettings() {\r\n  const { t } = useTranslation([\"settings\"]);\r\n  ReactGA.send({ hitType: \"pageview\", page: '/setting' })\r\n\r\n  return <CardDark sx={{ my: 1 }}>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Typography variant=\"subtitle1\">\r\n        <Trans t={t} i18nKey=\"title\" />\r\n      </Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n      <LanguageCard />\r\n      <DatabaseCard />\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","InvisInput","styled","display","UploadCard","index","onReplace","_useMemo","databases","useContext","DatabaseContext","database","t","useTranslation","data","setdata","useState","filename","setfilename","errorMsg","setErrorMsg","keepNotInImport","setKeepNotInImport","ignoreDups","setIgnoreDups","importResult","importedDatabase","useMemo","parsed","JSON","parse","e","format","copyStorage","SandboxStorage","copyFrom","storage","ArtCharDatabase","importGOOD","_jsxs","CardLight","children","_jsx","CardContent","sx","py","Trans","i18nKey","Grid","container","spacing","mb","item","htmlFor","accept","id","type","onChange","async","file","target","files","value","name","reader","FileReader","onload","result","readAsText","Button","component","color","startIcon","FileOpen","_t","_","flexGrow","CardDark","px","Typography","TextSnippetIcon","Object","assign","iconInlineProps","ArrowBackIcon","Box","gap","flexWrap","Tooltip","title","_t2","_t3","placement","arrow","flexBasis","fullWidth","disabled","onClick","CheckBoxOutlineBlank","CheckBox","_t4","_t5","_t6","_t7","gutterBottom","variant","width","fontFamily","minHeight","resize","GOODUploadInfo","GOUploadAction","reset","source","artifacts","characters","weapons","Divider","MergeResult","dbTotal","arts","values","length","chars","_result$invalid","total","import","new","unchanged","upgraded","remove","notInImport","beforeMerge","invalid","stringify","undefined","setDatabase","replaceDB","useCallback","swapStorage","toExtraLocalDB","_Fragment","UploadFileIcon","DatabaseCard","flexDirection","columns","xs","md","range","map","i","DataCard","mainDB","lastEdit","setDBMeta","dbMeta","get","useEffect","follow","r","current","uploadOpen","onOpen","onClose","useBoolState","numChar","keys","numArt","numWeapon","hasData","Boolean","copyToClipboard","navigator","clipboard","writeText","exportGOOD","then","alert","catch","console","error","onDelete","window","confirm","clear","download","dateStr","Date","toISOString","split","replace","replaceAll","JSONStr","trim","a","document","createElement","href","encodeURIComponent","body","appendChild","click","removeChild","onSwap","tempName","setTempName","onBlur","set","onKeyDOwn","key","height","boxShadow","justifyContent","StyledInputBase","borderRadius","onKeyDown","ImportExport","Chip","label","dbIndex","noWrap","toLocaleString","ContentPasteIcon","ModalWrapper","open","Upload","Download","Delete","LanguageCard","SqBadge","LanguageDropdown","nativeLanguages","i18n","onSetLanguage","lang","changeLanguage","currentLang","languages","DropdownButton","language","languageCodeList","MenuItem","selected","PageSettings","ReactGA","hitType","page","my"],"sourceRoot":""}