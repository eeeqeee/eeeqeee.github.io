{"version":3,"file":"169.a0a49bbea37f59ba.js","mappings":"mPAEO,SAASA,EAAoBC,GAClC,OAAO,EAAAC,EAAA,GAAqB,UAAWD,EACzC,CACA,MACA,GADoB,EAAAE,EAAA,GAAuB,UAAW,CAAC,OAAQ,gBAAiB,iBAAkB,kBAAmB,SAAU,iB,yBCJxH,MAAMC,EAAuB,CAClCC,QAAS,eACTC,YAAa,eACbC,UAAW,iBACXC,cAAe,iBACfC,MAAO,cAiBT,EAZ0B,EACxBC,QACAC,iBAEA,MAAMC,EAP0BC,IACzBT,EAAqBS,IAAUA,EAMbC,CAA0BH,EAAWE,OACxDA,GAAQ,QAAQH,EAAO,WAAWE,KAAoB,IAAUD,EAAWE,MAC3EE,GAAe,QAAQL,EAAO,WAAWE,YAC/C,MAAI,SAAUF,GAASK,EACd,QAAQA,YAEV,QAAMF,EAAO,GAAI,E,eCnB1B,MAAMG,EAAY,CAAC,YAAa,QAAS,YAAa,SAAU,UAAW,oBAAqB,YAAa,UAAW,MA2BlHC,GAAW,EAAAC,EAAA,IAAOC,EAAA,EAAY,CAClCC,KAAM,UACNnB,KAAM,OACNoB,kBAAmB,CAACC,EAAOC,KACzB,MAAM,WACJZ,GACEW,EACJ,MAAO,CAACC,EAAOC,KAAMD,EAAO,aAAY,EAAAE,EAAA,GAAWd,EAAWe,cAAwC,WAAzBf,EAAWgB,WAA0BJ,EAAOK,OAAO,GAPnH,EASd,EACDlB,QACAC,iBAEO,OAAS,CAAC,EAA4B,SAAzBA,EAAWe,WAAwB,CACrDG,eAAgB,QACU,UAAzBlB,EAAWe,WAAyB,CACrCG,eAAgB,OAChB,UAAW,CACTA,eAAgB,cAEQ,WAAzBlB,EAAWe,YAA0B,OAAS,CAC/CG,eAAgB,aACM,YAArBlB,EAAWE,OAAuB,CACnCiB,oBAAqB,EAAkB,CACrCpB,QACAC,gBAED,CACD,UAAW,CACTmB,oBAAqB,aAEI,WAAzBnB,EAAWgB,WAA0B,CACvCI,SAAU,WACVC,wBAAyB,cACzBC,gBAAiB,cAGjBC,QAAS,EACTC,OAAQ,EACRC,OAAQ,EAERC,aAAc,EACdC,QAAS,EAETC,OAAQ,UACRC,WAAY,OACZC,cAAe,SACfC,cAAe,OAEfC,iBAAkB,OAElB,sBAAuB,CACrBC,YAAa,QAGf,CAAC,KAAK,kBAA6B,CACjCV,QAAS,YA4Hf,EAxH0B,cAAiB,SAAcW,EAASC,GAChE,MAAMxB,GAAQ,EAAAyB,EAAA,GAAc,CAC1BzB,MAAOuB,EACPzB,KAAM,aAEF,UACF4B,EAAS,MACTnC,EAAQ,UAAS,UACjBc,EAAY,IAAG,OACfsB,EAAM,QACNC,EAAO,kBACPC,EAAiB,UACjBzB,EAAY,SAAQ,QACpB0B,EAAU,UAAS,GACnBC,GACE/B,EACJgC,GAAQ,OAA8BhC,EAAON,IACzC,kBACJuC,EACAN,OAAQO,EACRN,QAASO,EACTX,IAAKY,IACH,EAAAC,EAAA,MACGC,EAAcC,GAAmB,YAAe,GACjDC,GAAa,EAAAC,EAAA,GAAWjB,EAAKY,GAmB7B/C,GAAa,OAAS,CAAC,EAAGW,EAAO,CACrCT,QACAc,YACAiC,eACAlC,YACA0B,YAEIY,EA1HkBrD,KACxB,MAAM,QACJqD,EAAO,UACPrC,EAAS,aACTiC,EAAY,UACZlC,GACEf,EACEsD,EAAQ,CACZzC,KAAM,CAAC,OAAQ,aAAY,EAAAC,EAAA,GAAWC,KAA4B,WAAdC,GAA0B,SAAUiC,GAAgB,iBAE1G,OAAO,EAAAM,EAAA,GAAeD,EAAOjE,EAAqBgE,EAAQ,EAgH1CG,CAAkBxD,GAClC,OAAoB,SAAKM,GAAU,OAAS,CAC1CJ,MAAOA,EACPmC,WAAW,OAAKgB,EAAQxC,KAAMwB,GAC9BgB,QAASb,EACTxB,UAAWA,EACXsB,OA/BiBmB,IACjBZ,EAAkBY,IACgB,IAA9Bb,EAAkBc,SACpBR,GAAgB,GAEdZ,GACFA,EAAOmB,EACT,EAyBAlB,QAvBkBkB,IAClBX,EAAmBW,IACe,IAA9Bb,EAAkBc,SACpBR,GAAgB,GAEdX,GACFA,EAAQkB,EACV,EAiBAtB,IAAKgB,EACLnD,WAAYA,EACZyC,QAASA,EACTC,GAAI,IAAMiB,OAAOC,KAAKnE,GAAsBoE,SAAS3D,GAEhD,GAFyD,CAAC,CAC7DA,aACY4D,MAAMC,QAAQrB,GAAMA,EAAK,CAACA,KACvCC,GACL,G,oFCxJA,SAAe,EAAAqB,EAAA,IAA4B,SAAK,OAAQ,CACtDC,EAAG,yCACD,iB,8MCFJ,E,q5+LCce,SAASC,IAAoB,IAAAC,EAE1CC,EAAAA,GAAAA,KAAa,CAAEC,QAAS,WAAYC,KAAM,SAE1C,MAAQC,QAAQ,WAAEC,IAA6C,OAA/BL,GAAGM,EAAAA,EAAAA,IAAS,qBAAmBN,EAAI,CAAEI,OAAQ,CAAEC,WAAY,KAE3F,OAAOE,EAAAA,EAAAA,IAACC,EAAAA,EAAQ,CAACjC,GAAI,CAAEkC,GAAI,GAAIC,SAAA,EAC7BH,EAAAA,EAAAA,IAACI,EAAAA,GAAI,CAACC,WAAS,EAACrC,GAAI,CAAEsC,GAAI,EAAGC,GAAI,GAAIJ,SAAA,EACnCK,EAAAA,EAAAA,IAACJ,EAAAA,GAAI,CAACK,MAAI,EAACC,SAAU,EAAEP,UACrBK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACiC,QAAQ,KAAIoC,SAAC,qBAI3BK,EAAAA,EAAAA,IAACJ,EAAAA,GAAI,CAACK,MAAI,EAAAN,UACRK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACiC,QAAQ,KAAIoC,UACtBK,EAAAA,EAAAA,IAACG,EAAAA,EAAO,CAACnF,MAAM,OAAM2E,SAAC,uBAI5BK,EAAAA,EAAAA,IAACI,EAAAA,EAAO,KACRJ,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVH,EAAAA,EAAAA,IAACI,EAAAA,GAAI,CAACC,WAAS,EAACS,QAAS,EAAEX,SAAA,EACzBK,EAAAA,EAAAA,IAACJ,EAAAA,GAAI,CAACK,MAAI,EAACM,GAAI,GAAIC,GAAI,EAAEb,UACvBK,EAAAA,EAAAA,IAACS,EAAAA,EAAS,CAACjD,GAAI,CAAEkD,OAAQ,QAASf,UAChCH,EAAAA,EAAAA,IAACmB,EAAAA,EAAI,CACHC,YAAY,WACZC,MAAOvB,EACP,aAAW,2BACX9B,GAAI,CAAEsD,YAAa,EAAGC,YAAa,WAAYpB,SAAA,EAE/CK,EAAAA,EAAAA,IAACgB,EAAAA,EAAG,CAACC,MAAM,WAAWJ,MAAM,GAAG/E,UAAWoF,EAAAA,GAAMC,GAAG,MACnDnB,EAAAA,EAAAA,IAACgB,EAAAA,EAAG,CAACC,MAAO,wBAAyBJ,MAAM,YAAY/E,UAAWoF,EAAAA,GAAMC,GAAG,eAC3EnB,EAAAA,EAAAA,IAACgB,EAAAA,EAAG,CAACC,OAAOjB,EAAAA,EAAAA,IAAA,QAAAL,SAAM,YAAgBkB,MAAM,UAAU/E,UAAWoF,EAAAA,GAAMC,GAAG,aACtEnB,EAAAA,EAAAA,IAACgB,EAAAA,EAAG,CAACC,OAAOjB,EAAAA,EAAAA,IAAA,QAAAL,SAAM,mBAAuBkB,MAAM,iBAAiB/E,UAAWoF,EAAAA,GAAMC,GAAG,oBACpFnB,EAAAA,EAAAA,IAACgB,EAAAA,EAAG,CAACC,OAAOjB,EAAAA,EAAAA,IAAA,QAAAL,SAAM,iBAAqBkB,MAAM,eAAe/E,UAAWoF,EAAAA,GAAMC,GAAG,kBAChFnB,EAAAA,EAAAA,IAACgB,EAAAA,EAAG,CAACC,OAAOjB,EAAAA,EAAAA,IAAA,QAAAL,SAAM,cAAkBkB,MAAM,YAAY/E,UAAWoF,EAAAA,GAAMC,GAAG,eAC1EnB,EAAAA,EAAAA,IAACgB,EAAAA,EAAG,CAACC,OAAOjB,EAAAA,EAAAA,IAAA,QAAAL,SAAM,gBAAoBkB,MAAM,cAAc/E,UAAWoF,EAAAA,GAAMC,GAAG,iBAC9EnB,EAAAA,EAAAA,IAACgB,EAAAA,EAAG,CAACC,MAAO,kBAAmBJ,MAAM,iBAAiB/E,UAAWoF,EAAAA,GAAMC,GAAG,2BAIhFnB,EAAAA,EAAAA,IAACJ,EAAAA,GAAI,CAACK,MAAI,EAACM,GAAI,GAAIC,GAAI,GAAGb,UACxBK,EAAAA,EAAAA,IAACS,EAAAA,EAAS,CAACjD,GAAI,CAAEkD,OAAQ,QAASf,UAChCK,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVK,EAAAA,EAAAA,IAACoB,EAAAA,SAAQ,CAACC,UAAUrB,EAAAA,EAAAA,IAACsB,EAAAA,EAAQ,CAAC/D,QAAQ,cAAcgE,MAAM,OAAOb,OAAQ,MAAQf,UAC/EH,EAAAA,EAAAA,IAACgC,EAAAA,GAAM,CAAA7B,SAAA,EACLK,EAAAA,EAAAA,IAACyB,EAAAA,GAAK,CAACC,OAAK,EAACC,SAAS3B,EAAAA,EAAAA,IAAC4B,EAAQ,OAC/B5B,EAAAA,EAAAA,IAACyB,EAAAA,GAAK,CAACI,KAAK,kBAAkBF,SAAS3B,EAAAA,EAAAA,IAAC8B,EAAkB,OAC1D9B,EAAAA,EAAAA,IAACyB,EAAAA,GAAK,CAACI,KAAK,eAAeF,SAAS3B,EAAAA,EAAAA,IAAC+B,EAAe,OACpD/B,EAAAA,EAAAA,IAACyB,EAAAA,GAAK,CAACI,KAAK,kBAAkBF,SAAS3B,EAAAA,EAAAA,IAACgC,EAAkB,OAC1DhC,EAAAA,EAAAA,IAACyB,EAAAA,GAAK,CAACI,KAAK,aAAaF,SAAS3B,EAAAA,EAAAA,IAACiC,EAAa,OAChDjC,EAAAA,EAAAA,IAACyB,EAAAA,GAAK,CAACI,KAAK,gBAAgBF,SAAS3B,EAAAA,EAAAA,IAACkC,EAAgB,OACtDlC,EAAAA,EAAAA,IAACyB,EAAAA,GAAK,CAACI,KAAK,WAAWF,SAAS3B,EAAAA,EAAAA,IAACmC,EAAW,OAC5CnC,EAAAA,EAAAA,IAACyB,EAAAA,GAAK,CAACI,KAAK,aAAaF,SAAS3B,EAAAA,EAAAA,IAACoC,EAAa,wBASlE,CAEA,MAAMC,EAAY,gVAYZC,EAAgB,qfAkBhBC,EAAc,qUAQdC,EAAiB,8VAYvB,SAASZ,IACP,OAAOpC,EAAAA,EAAAA,IAAAiD,EAAAA,GAAA,CAAA9C,SAAA,EACLK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACoH,cAAY,EAACnF,QAAQ,KAAIoC,SAAC,4CACtCH,EAAAA,EAAAA,IAAClE,EAAAA,EAAU,CAACoH,cAAY,EAAA/C,SAAA,EAACK,EAAAA,EAAAA,IAAA,UAAAL,SAAQ,SAAa,uNAC9CK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACoH,cAAY,EAAA/C,SAAC,uFACzBK,EAAAA,EAAAA,IAACP,EAAAA,EAAQ,CAAAE,UACPK,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVK,EAAAA,EAAAA,IAAC2C,EAAS,CAACC,KAAMP,SAGrBrC,EAAAA,EAAAA,IAAA,UACAA,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACoH,cAAY,EAACnF,QAAQ,KAAIoC,SAAC,kCACtCK,EAAAA,EAAAA,IAACP,EAAAA,EAAQ,CAAAE,UACPK,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVK,EAAAA,EAAAA,IAAC2C,EAAS,CAACC,KAAMN,SAGrBtC,EAAAA,EAAAA,IAAA,UACAA,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACoH,cAAY,EAACnF,QAAQ,KAAIoC,SAAC,gCACtCK,EAAAA,EAAAA,IAACP,EAAAA,EAAQ,CAAAE,UACPK,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVK,EAAAA,EAAAA,IAAC2C,EAAS,CAACC,KAAML,SAGrBvC,EAAAA,EAAAA,IAAA,UACAA,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACoH,cAAY,EAACnF,QAAQ,KAAIoC,SAAC,mCACtCK,EAAAA,EAAAA,IAACP,EAAAA,EAAQ,CAAAE,UACPK,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVK,EAAAA,EAAAA,IAAC2C,EAAS,CAACC,KAAMJ,UAIzB,CACA,SAASJ,IACP,OAAO5C,EAAAA,EAAAA,IAACC,EAAAA,EAAQ,CAAAE,SAAA,EACZK,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAAAqE,SAAC,6BAEdK,EAAAA,EAAAA,IAACI,EAAAA,EAAO,KACRZ,EAAAA,EAAAA,IAACa,EAAAA,EAAW,CAAAV,SAAA,EACVH,EAAAA,EAAAA,IAAClE,EAAAA,EAAU,CAACoH,cAAY,EAAA/C,SAAA,CAAC,6FAAyFK,EAAAA,EAAAA,IAAA,UAAAL,SAAQ,eAAmB,wOAC7IK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACoH,cAAY,EAAA/C,SAAC,gHACzBH,EAAAA,EAAAA,IAAClE,EAAAA,EAAU,CAAAqE,SAAA,EAACK,EAAAA,EAAAA,IAAA,QAAAL,SAAM,uBAAyB,KAACK,EAAAA,EAAAA,IAAC6C,EAAa,CAACrF,GAAI,CAAEZ,cAAe,YAAc,KAACoD,EAAAA,EAAAA,IAAA,QAAAL,SAAM,yBACrGH,EAAAA,EAAAA,IAAClE,EAAAA,EAAU,CAAAqE,SAAA,EAACK,EAAAA,EAAAA,IAAA,QAAAL,SAAM,4BAA8B,KAACK,EAAAA,EAAAA,IAAC6C,EAAa,CAACrF,GAAI,CAAEZ,cAAe,YAAc,KAACoD,EAAAA,EAAAA,IAAA,QAAAL,SAAM,6BAC1GH,EAAAA,EAAAA,IAAClE,EAAAA,EAAU,CAAAqE,SAAA,EAACK,EAAAA,EAAAA,IAAA,QAAAL,SAAM,gBAAkB,KAACK,EAAAA,EAAAA,IAAC6C,EAAa,CAACrF,GAAI,CAAEZ,cAAe,YAAc,KAACoD,EAAAA,EAAAA,IAAA,QAAAL,SAAM,qBAGtG,CAEA,SAASwC,IAEP,MACMW,EAAgB,qBADL,CAAC,KAAM,MAAO,MAAO,OAAQ,MAAO,OAAQ,SAAU,YAAa,QAAS,YAAa,WAAY,gBAAiB,aAAc,WAAY,eAAgB,aAAc,YAAa,YAAa,eACtKC,KAAIC,GAAM,IAAGA,QAAQC,EAAAA,GAAAA,UAAiBD,OAAME,KAAM,YACrG,OAAO1D,EAAAA,EAAAA,IAAAiD,EAAAA,GAAA,CAAA9C,SAAA,EACLK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACoH,cAAY,EAACnF,QAAQ,KAAIoC,SAAC,aACtCK,EAAAA,EAAAA,IAACP,EAAAA,EAAQ,CAAAE,UACPK,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVK,EAAAA,EAAAA,IAAC2C,EAAS,CAACC,KAAME,UAIzB,CACA,SAASd,IACP,MAAM,EAAEmB,IAAMC,EAAAA,EAAAA,IAAe,qBACvBC,EAAkB,4BAA2B,IAAI,IAAIC,IAAIC,EAAAA,KAAkBC,OAAOT,KAAIC,GAAM,IAAGA,QAAQG,EAAG,qBAAoBH,SAAQE,KAAM,YAClJ,OAAO1D,EAAAA,EAAAA,IAAAiD,EAAAA,GAAA,CAAA9C,SAAA,EACLK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACoH,cAAY,EAACnF,QAAQ,KAAIoC,SAAC,oBACtCK,EAAAA,EAAAA,IAACP,EAAAA,EAAQ,CAAAE,UACPK,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVK,EAAAA,EAAAA,IAAC2C,EAAS,CAACC,KAAMS,UAIzB,CACA,SAASnB,IACP,MAAM,EAAEiB,IAAMC,EAAAA,EAAAA,IAAe,kBACvB,SAAEK,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,IAC1B,OAAEC,IAAWC,EAAAA,EAAAA,KACbC,EAAgB,0BAAyB,IAAI,IAAIR,IAAIS,EAAAA,KAAwBP,OAAOT,KAAIC,GAAM,IAAGA,QAAQG,EAAG,kBAAgBa,EAAAA,EAAAA,IAAkBP,EAASQ,MAAMC,uBAAuBlB,GAAIY,UAAcV,KAAM,YAClN,OAAO1D,EAAAA,EAAAA,IAAAiD,EAAAA,GAAA,CAAA9C,SAAA,EACLK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACoH,cAAY,EAACnF,QAAQ,KAAIoC,SAAC,kBACtCK,EAAAA,EAAAA,IAACP,EAAAA,EAAQ,CAAAE,UACPK,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVK,EAAAA,EAAAA,IAAC2C,EAAS,CAACC,KAAMkB,UAIzB,CACA,SAAS7B,IACP,MAAM,EAAEkB,IAAMC,EAAAA,EAAAA,IAAe,mBACvBe,EAAkB,uBAAsB,IAAI,IAAIb,IAAIc,EAAAA,KAAgBZ,OAAOT,KAAIC,GAAM,IAAGA,QAAQG,EAAG,mBAAkBH,SAAQE,KAAM,YACzI,OAAO1D,EAAAA,EAAAA,IAAAiD,EAAAA,GAAA,CAAA9C,SAAA,EACLK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACoH,cAAY,EAACnF,QAAQ,KAAIoC,SAAC,eACtCK,EAAAA,EAAAA,IAACP,EAAAA,EAAQ,CAAAE,UACPK,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVK,EAAAA,EAAAA,IAAC2C,EAAS,CAACC,KAAMuB,UAIzB,CACA,SAASpC,IACP,MAAM,EAAEoB,IAAMC,EAAAA,EAAAA,IAAe,gBACvBe,EAAkB,yBAAwB1F,OAAOC,KAAK2F,GAAiBb,OAAOT,KAAIC,GAAM,IAAGA,QAAQG,EAAG,GAAEH,cAAaE,KAAM,YACjI,OAAO1D,EAAAA,EAAAA,IAAAiD,EAAAA,GAAA,CAAA9C,SAAA,EACLK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACoH,cAAY,EAACnF,QAAQ,KAAIoC,SAAC,iBACtCK,EAAAA,EAAAA,IAACP,EAAAA,EAAQ,CAAAE,UACPH,EAAAA,EAAAA,IAACa,EAAAA,EAAW,CAAAV,SAAA,EACVH,EAAAA,EAAAA,IAAClE,EAAAA,EAAU,CAACoH,cAAY,EAAA/C,SAAA,CAAC,mFAA+EK,EAAAA,EAAAA,IAACsE,EAAAA,EAAO,CAACxI,UAAWoF,EAAAA,GAAMC,GAAG,YAAWxB,UAACK,EAAAA,EAAAA,IAAA,QAAAL,SAAM,iBAA2B,QAClLK,EAAAA,EAAAA,IAAC2C,EAAS,CAACC,KAAMuB,WAIzB,CAEA,SAASrC,IACP,OAAOtC,EAAAA,EAAAA,IAAC+E,EAAAA,EAAG,CAACC,QAAQ,OAAOC,cAAc,SAASC,IAAK,EAAE/E,SAAA,EACvDK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAACoH,cAAY,EAACnF,QAAQ,KAAIoC,SAAC,qBACtCH,EAAAA,EAAAA,IAACC,EAAAA,EAAQ,CAAAE,SAAA,EACPK,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAAAqE,SAAC,iBAIdK,EAAAA,EAAAA,IAACI,EAAAA,EAAO,KACRJ,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVH,EAAAA,EAAAA,IAAClE,EAAAA,EAAU,CAAAqE,SAAA,CAAC,oBAAgBK,EAAAA,EAAAA,IAAA,QAAAL,SAAM,UAAY,4DAGlDH,EAAAA,EAAAA,IAACC,EAAAA,EAAQ,CAAAE,SAAA,EACPK,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVK,EAAAA,EAAAA,IAAC1E,EAAAA,EAAU,CAAAqE,SAAC,iBAIdK,EAAAA,EAAAA,IAACI,EAAAA,EAAO,KACRJ,EAAAA,EAAAA,IAACK,EAAAA,EAAW,CAAAV,UACVH,EAAAA,EAAAA,IAAClE,EAAAA,EAAU,CAAAqE,SAAA,CAAC,SAAKK,EAAAA,EAAAA,IAAA,QAAAL,SAAM,cAAgB,cAAUK,EAAAA,EAAAA,IAAA,QAAAL,SAAM,UAAY,oFAI3E,CAKA,MAAMgF,GAAatJ,EAAAA,EAAAA,IAAO,WAAPA,EAAoC,EAAGR,QAAO+J,OAAAA,EAAS,MAAQ,CAChFrD,MAAQ,GAAEqD,MAAYC,SAAU,SAAUlI,WAAY,OAAQ3B,MAAOH,EAAMiK,QAAQlC,KAAKlI,UAAWqK,OAAQ,OAAQzI,OAAQ,OAAQ0I,WAAY,MAAOC,WAAY,YAAaC,WAAY,EAC3L,aAAc,CACZ9I,gBAAiB,mBAIf+I,GAAW9J,EAAAA,EAAAA,IAAO,WAAPA,EAAmB,EAAGR,YAAY,CACjD,aAAc,CACZuB,gBAAiB,eAEnB8I,WAAY,EACZ3D,MAAO,OACP6D,UAAW,OACXC,UAAW,OACXJ,WAAY,YACZ3I,OAAQ,OAER0I,WAAY,MACZ5I,gBAAiB,cACjB2I,OAAQ,OACR/J,MAAOH,EAAMiK,QAAQQ,KAAKC,UAE5B,SAAS5C,GAAU,KAAEC,IACnB,MAAM4C,EAAQ5C,EAAK6C,MAAM,cAAcC,OAAS,EAC1CC,EAAW/G,MAAMgH,KAAKhH,MAAM4G,GAAO9G,QAAQqE,KAAI8C,GAAKA,EAAI,IAAG3C,KAAK,MAEtE,OAAO1D,EAAAA,EAAAA,IAAC+E,EAAAA,EAAG,CAACC,QAAQ,OAAOC,cAAc,MAAK9E,SAAA,EAC5CK,EAAAA,EAAAA,IAAC2E,EAAU,CAACmB,UAAU,EAAMC,WAAW,QAAQ,aAAW,cAAcvI,GAAI,CAAEkD,OAAS,GAAE8E,EAAQ,OAAS3E,MAAO8E,EAAUK,aAAa,KAAKpB,OAAQY,EAAMS,WAAWP,UACtK1F,EAAAA,EAAAA,IAACmF,EAAQ,CAAC3H,GAAI,CAAE0C,SAAU,EAAGQ,OAAS,GAAE8E,EAAQ,OAASM,UAAU,EAAMC,WAAW,QAAQ,aAAW,cAAclF,MAAO+B,MAEhI,C","sources":["webpack:///../../node_modules/@mui/material/Link/linkClasses.js","webpack:///../../node_modules/@mui/material/Link/getTextDecoration.js","webpack:///../../node_modules/@mui/material/Link/Link.js","webpack:///../../node_modules/@mui/icons-material/esm/ArrowRightAlt.js","webpack:///./src/app/Data/Materials/Material.ts","webpack:///./src/app/PageDocumentation/index.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');","import material_gen from './material_gen.json'\r\nconst material = material_gen\r\nexport default material","import { allArtifactSets, allWeaponKeys } from \"@genshin-optimizer/consts\";\r\nimport { ArrowRightAlt } from \"@mui/icons-material\";\r\nimport { Box, CardContent, Divider, Grid, Link as MuiLink, Skeleton, styled, Tab, Tabs, Typography } from \"@mui/material\";\r\nimport { Suspense, useContext } from \"react\";\r\nimport ReactGA from 'react-ga4';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link, Route, Routes, useMatch } from \"react-router-dom\";\r\nimport CardDark from \"../Components/Card/CardDark\";\r\nimport CardLight from \"../Components/Card/CardLight\";\r\nimport SqBadge from \"../Components/SqBadge\";\r\nimport material from \"../Data/Materials/Material\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport KeyMap from \"../KeyMap\";\r\nimport useDBMeta from \"../ReactHooks/useDBMeta\";\r\nimport { charKeyToCharName, locationCharacterKeys } from \"../Types/consts\";\r\n\r\nexport default function PageDocumentation() {\r\n  // const { t } = useTranslation(\"documentation\")\r\n  ReactGA.send({ hitType: \"pageview\", page: '/doc' })\r\n\r\n  const { params: { currentTab } } = useMatch(\"/doc/:currentTab\") ?? { params: { currentTab: \"\" } }\r\n\r\n  return <CardDark sx={{ my: 1 }}>\r\n    <Grid container sx={{ px: 2, py: 1 }}>\r\n      <Grid item flexGrow={1}>\r\n        <Typography variant=\"h6\">\r\n          Documentation\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">\r\n          <SqBadge color=\"info\">Version. 2</SqBadge>\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} md={2}>\r\n          <CardLight sx={{ height: \"100%\" }}>\r\n            <Tabs\r\n              orientation=\"vertical\"\r\n              value={currentTab}\r\n              aria-label=\"Documentation Navigation\"\r\n              sx={{ borderRight: 1, borderColor: 'divider' }}\r\n            >\r\n              <Tab label=\"Overview\" value=\"\" component={Link} to=\"\" />\r\n              <Tab label={\"Key naming convention\"} value=\"KeyNaming\" component={Link} to=\"KeyNaming\" />\r\n              <Tab label={<code>StatKey</code>} value=\"StatKey\" component={Link} to=\"StatKey\" />\r\n              <Tab label={<code>ArtifactSetKey</code>} value=\"ArtifactSetKey\" component={Link} to=\"ArtifactSetKey\" />\r\n              <Tab label={<code>CharacterKey</code>} value=\"CharacterKey\" component={Link} to=\"CharacterKey\" />\r\n              <Tab label={<code>WeaponKey</code>} value=\"WeaponKey\" component={Link} to=\"WeaponKey\" />\r\n              <Tab label={<code>MaterialKey</code>} value=\"MaterialKey\" component={Link} to=\"MaterialKey\" />\r\n              <Tab label={\"Version History\"} value=\"VersionHistory\" component={Link} to=\"VersionHistory\" />\r\n            </Tabs>\r\n          </CardLight>\r\n        </Grid>\r\n        <Grid item xs={12} md={10}>\r\n          <CardLight sx={{ height: \"100%\" }}>\r\n            <CardContent>\r\n              <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n                <Routes>\r\n                  <Route index element={<Overview />} />\r\n                  <Route path=\"/VersionHistory\" element={<VersionHistoryPane />} />\r\n                  <Route path=\"/MaterialKey\" element={<MaterialKeyPane />} />\r\n                  <Route path=\"/ArtifactSetKey\" element={<ArtifactSetKeyPane />} />\r\n                  <Route path=\"/WeaponKey\" element={<WeaponKeyPane />} />\r\n                  <Route path=\"/CharacterKey\" element={<CharacterKeyPane />} />\r\n                  <Route path=\"/StatKey\" element={<StatKeyPane />} />\r\n                  <Route path=\"/KeyNaming\" element={<KeyNamingPane />} />\r\n                </Routes>\r\n              </Suspense>\r\n            </CardContent>\r\n          </CardLight>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </CardDark>\r\n}\r\n\r\nconst goodCode = `interface IGOOD {\r\n  format: \"GOOD\" // A way for people to recognize this format.\r\n  version: number // GOOD API version.\r\n  source: string // The app that generates this data.\r\n  characters?: ICharacter[]\r\n  artifacts?: IArtifact[]\r\n  weapons?: IWeapon[]\r\n  materials?: { // Added in version 2\r\n    [key:MaterialKey]: number\r\n  }\r\n}`\r\n\r\nconst artifactCode = `interface IArtifact {\r\n  setKey: SetKey //e.g. \"GladiatorsFinale\"\r\n  slotKey: SlotKey //e.g. \"plume\"\r\n  level: number //0-20 inclusive\r\n  rarity: number //1-5 inclusive\r\n  mainStatKey: StatKey\r\n  location: CharacterKey|\"\" //where \"\" means not equipped.\r\n  lock: boolean //Whether the artifact is locked in game.\r\n  substats: ISubstat[]\r\n}\r\n\r\ninterface ISubstat {\r\n  key: StatKey //e.g. \"critDMG_\"\r\n  value: number //e.g. 19.4\r\n}\r\n\r\ntype SlotKey = \"flower\" | \"plume\" | \"sands\" | \"goblet\" | \"circlet\"`\r\n\r\nconst weaponCode = `interface IWeapon {\r\n  key: WeaponKey //\"CrescentPike\"\r\n  level: number //1-90 inclusive\r\n  ascension: number //0-6 inclusive. need to disambiguate 80/90 or 80/80\r\n  refinement: number //1-5 inclusive\r\n  location: CharacterKey | \"\" //where \"\" means not equipped.\r\n  lock: boolean //Whether the weapon is locked in game.\r\n}`\r\nconst characterCode = `interface ICharacter {\r\n  key: CharacterKey //e.g. \"Rosaria\"\r\n  level: number //1-90 inclusive\r\n  constellation: number //0-6 inclusive\r\n  ascension: number //0-6 inclusive. need to disambiguate 80/90 or 80/80\r\n  talent: { //does not include boost from constellations. 1-15 inclusive\r\n    auto: number\r\n    skill: number\r\n    burst: number\r\n  }\r\n}`\r\n\r\nfunction Overview() {\r\n  return <>\r\n    <Typography gutterBottom variant=\"h4\">Genshin Open Object Description (GOOD)</Typography>\r\n    <Typography gutterBottom><strong>GOOD</strong> is a data format description to map Genshin Data into a parsable JSON. This is intended to be a standardized format to allow Genshin developers/programmers to transfer data without needing manual conversion.</Typography>\r\n    <Typography gutterBottom>As of version 6.0.0, Genshin Optimizer's database export conforms to this format.</Typography>\r\n    <CardDark>\r\n      <CardContent>\r\n        <CodeBlock text={goodCode} />\r\n      </CardContent>\r\n    </CardDark>\r\n    <br />\r\n    <Typography gutterBottom variant=\"h4\">Artifact data representation</Typography>\r\n    <CardDark>\r\n      <CardContent>\r\n        <CodeBlock text={artifactCode} />\r\n      </CardContent>\r\n    </CardDark>\r\n    <br />\r\n    <Typography gutterBottom variant=\"h4\">Weapon data representation</Typography>\r\n    <CardDark>\r\n      <CardContent>\r\n        <CodeBlock text={weaponCode} />\r\n      </CardContent>\r\n    </CardDark>\r\n    <br />\r\n    <Typography gutterBottom variant=\"h4\">Character data representation</Typography>\r\n    <CardDark>\r\n      <CardContent>\r\n        <CodeBlock text={characterCode} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </>\r\n}\r\nfunction KeyNamingPane() {\r\n  return <CardDark>\r\n      <CardContent>\r\n        <Typography>Key Naming Convention</Typography>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <Typography gutterBottom>The keys in the GOOD format, like Artifact sets, weapon keys, character keys, are all in <strong>PascalCase</strong>. This makes the name easy to derive from the in-game text, assuming no renames occur. If a rename is needed, then the standard will have to increment versions. (Last change was in 1.2 when the Prototype weapons were renamed)</Typography>\r\n        <Typography gutterBottom> To derive the PascalKey from a specific name, remove all symbols from the name, and Capitalize each word:</Typography>\r\n        <Typography><code>Gladiator's Finale</code> <ArrowRightAlt sx={{ verticalAlign: \"bottom\" }} /> <code>GladiatorsFinale</code></Typography>\r\n        <Typography><code>Spirit Locket of Boreas</code> <ArrowRightAlt sx={{ verticalAlign: \"bottom\" }} /> <code>SpiritLocketOfBoreas</code></Typography>\r\n        <Typography><code>\"The Catch\"</code> <ArrowRightAlt sx={{ verticalAlign: \"bottom\" }} /> <code>TheCatch</code></Typography>\r\n      </CardContent>\r\n    </CardDark>\r\n}\r\n\r\nfunction StatKeyPane() {\r\n  // const { t } = useTranslation()\r\n  const statKeys = [\"hp\", \"hp_\", \"atk\", \"atk_\", \"def\", \"def_\", \"eleMas\", \"enerRech_\", \"heal_\", \"critRate_\", \"critDMG_\", \"physical_dmg_\", \"anemo_dmg_\", \"geo_dmg_\", \"electro_dmg_\", \"hydro_dmg_\", \"pyro_dmg_\", \"cryo_dmg_\", \"dendro_dmg_\"] as const\r\n  const statKeysCode = `type StatKey\\n  = ${statKeys.map(k => `\"${k}\" //${KeyMap.getArtStr(k)}`).join(`\\n  | `)}`\r\n  return <>\r\n    <Typography gutterBottom variant=\"h4\">StatKey</Typography>\r\n    <CardDark>\r\n      <CardContent>\r\n        <CodeBlock text={statKeysCode} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </>\r\n}\r\nfunction ArtifactSetKeyPane() {\r\n  const { t } = useTranslation(\"artifactNames_gen\")\r\n  const artSetKeysCode = `type ArtifactSetKey\\n  = ${[...new Set(allArtifactSets)].sort().map(k => `\"${k}\" //${t(`artifactNames_gen:${k}`)}`).join(`\\n  | `)}`\r\n  return <>\r\n    <Typography gutterBottom variant=\"h4\">ArtifactSetKey</Typography>\r\n    <CardDark>\r\n      <CardContent>\r\n        <CodeBlock text={artSetKeysCode} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </>\r\n}\r\nfunction CharacterKeyPane() {\r\n  const { t } = useTranslation(\"charNames_gen\")\r\n  const { database } = useContext(DatabaseContext)\r\n  const { gender } = useDBMeta()\r\n  const charKeysCode = `type CharacterKey\\n  = ${[...new Set(locationCharacterKeys)].sort().map(k => `\"${k}\" //${t(`charNames_gen:${charKeyToCharName(database.chars.LocationToCharacterKey(k), gender)}`)}`).join(`\\n  | `)}`\r\n  return <>\r\n    <Typography gutterBottom variant=\"h4\">CharacterKey</Typography>\r\n    <CardDark>\r\n      <CardContent>\r\n        <CodeBlock text={charKeysCode} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </>\r\n}\r\nfunction WeaponKeyPane() {\r\n  const { t } = useTranslation(\"weaponNames_gen\")\r\n  const weaponKeysCode = `type WeaponKey\\n  = ${[...new Set(allWeaponKeys)].sort().map(k => `\"${k}\" //${t(`weaponNames_gen:${k}`)}`).join(`\\n  | `)}`\r\n  return <>\r\n    <Typography gutterBottom variant=\"h4\">WeaponKey</Typography>\r\n    <CardDark>\r\n      <CardContent>\r\n        <CodeBlock text={weaponKeysCode} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </>\r\n}\r\nfunction MaterialKeyPane() {\r\n  const { t } = useTranslation(\"material_gen\")\r\n  const weaponKeysCode = `type MaterialKey\\n  = ${Object.keys(material as any).sort().map(k => `\"${k}\" //${t(`${k}.name`)}`).join(`\\n  | `)}`\r\n  return <>\r\n    <Typography gutterBottom variant=\"h4\">MaterialKey</Typography>\r\n    <CardDark>\r\n      <CardContent>\r\n        <Typography gutterBottom>The item names are taken from the english translation, and then converted into <MuiLink component={Link} to=\"KeyNaming\"><code>PascalCase</code></MuiLink>.</Typography>\r\n        <CodeBlock text={weaponKeysCode} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </>\r\n}\r\n\r\nfunction VersionHistoryPane() {\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={2}>\r\n    <Typography gutterBottom variant=\"h4\">Version History</Typography>\r\n    <CardDark>\r\n      <CardContent>\r\n        <Typography>\r\n          Version 1\r\n        </Typography>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <Typography>Created general <code>IGOOD</code> format with character, weapon, artifact fields.</Typography>\r\n      </CardContent>\r\n    </CardDark>\r\n    <CardDark>\r\n      <CardContent>\r\n        <Typography>\r\n          Version 2\r\n        </Typography>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <Typography>Adds <code>materials</code> field to <code>IGOOD</code>. All other fields remain the same. V2 is backwards compatible with V1.</Typography>\r\n      </CardContent>\r\n    </CardDark>\r\n  </Box>\r\n}\r\n\r\ntype LineNumberProps = {\r\n  digits?: number;\r\n}\r\nconst LineNumber = styled(\"textarea\")<LineNumberProps>(({ theme, digits = 2 }) => ({\r\n  width: `${digits}em`, overflow: \"hidden\", userSelect: \"none\", color: theme.palette.text.secondary, resize: \"none\", border: \"none\", whiteSpace: \"pre\", fontFamily: \"monospace\", lineHeight: 1,\r\n  \"&:disabled\": {\r\n    backgroundColor: \"transparent\"\r\n  }\r\n}))\r\n\r\nconst CodeArea = styled(\"textarea\")(({ theme }) => ({\r\n  \"&:disabled\": {\r\n    backgroundColor: \"transparent\"\r\n  },\r\n  lineHeight: 1,\r\n  width: \"100%\",\r\n  overflowY: \"auto\",\r\n  overflowX: \"auto\",\r\n  fontFamily: \"monospace\",\r\n  border: \"none\",\r\n  // padding: 1em;\r\n  whiteSpace: \"pre\",\r\n  backgroundColor: \"transparent\",\r\n  resize: \"none\",\r\n  color: theme.palette.info.light\r\n}))\r\nfunction CodeBlock({ text }) {\r\n  const lines = text.split(/\\r\\n|\\r|\\n/).length + 1\r\n  const lineNums = Array.from(Array(lines).keys()).map(i => i + 1).join('\\n')\r\n\r\n  return <Box display=\"flex\" flexDirection=\"row\">\r\n    <LineNumber disabled={true} spellCheck=\"false\" aria-label='Code Sample' sx={{ height: `${lines + 1}em` }} value={lineNums} unselectable=\"on\" digits={lines.toString().length} />\r\n    <CodeArea sx={{ flexGrow: 1, height: `${lines + 1}em` }} disabled={true} spellCheck=\"false\" aria-label='Code Sample' value={text} />\r\n  </Box>\r\n}\r\n"],"names":["getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","theme","ownerState","transformedColor","color","transformDeprecatedColors","channelColor","_excluded","LinkRoot","styled","Typography","name","overridesResolver","props","styles","root","capitalize","underline","component","button","textDecoration","textDecorationColor","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","variant","sx","other","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","event","current","Object","keys","includes","Array","isArray","createSvgIcon","d","PageDocumentation","_useMatch","ReactGA","hitType","page","params","currentTab","useMatch","_jsxs","CardDark","my","children","Grid","container","px","py","_jsx","item","flexGrow","SqBadge","Divider","CardContent","spacing","xs","md","CardLight","height","Tabs","orientation","value","borderRight","borderColor","Tab","label","Link","to","Suspense","fallback","Skeleton","width","Routes","Route","index","element","Overview","path","VersionHistoryPane","MaterialKeyPane","ArtifactSetKeyPane","WeaponKeyPane","CharacterKeyPane","StatKeyPane","KeyNamingPane","goodCode","artifactCode","weaponCode","characterCode","_Fragment","gutterBottom","CodeBlock","text","ArrowRightAlt","statKeysCode","map","k","KeyMap","join","t","useTranslation","artSetKeysCode","Set","allArtifactSets","sort","database","useContext","DatabaseContext","gender","useDBMeta","charKeysCode","locationCharacterKeys","charKeyToCharName","chars","LocationToCharacterKey","weaponKeysCode","allWeaponKeys","material","MuiLink","Box","display","flexDirection","gap","LineNumber","digits","overflow","palette","resize","whiteSpace","fontFamily","lineHeight","CodeArea","overflowY","overflowX","info","light","lines","split","length","lineNums","from","i","disabled","spellCheck","unselectable","toString"],"sourceRoot":""}