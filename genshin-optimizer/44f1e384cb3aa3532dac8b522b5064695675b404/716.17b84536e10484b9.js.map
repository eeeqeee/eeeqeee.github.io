{"version":3,"file":"716.17b84536e10484b9.js","mappings":"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","sources":["webpack:///../../node_modules/@mui/icons-material/Edit.js","webpack:///../../node_modules/@mui/icons-material/esm/BusinessCenter.js","webpack:///../../node_modules/@mui/icons-material/esm/Lock.js","webpack:///../../node_modules/@mui/icons-material/esm/LockOpen.js","webpack:///../../node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","webpack:///../../node_modules/@mui/material/ListSubheader/ListSubheader.js","webpack:///../../node_modules/@mui/material/internal/svg-icons/Close.js","webpack:///../../node_modules/@mui/utils/esm/usePreviousProps.js","webpack:///./src/app/Components/Character/LocationAutocomplete.tsx","webpack:///./src/app/Components/Character/LocationIcon.tsx","webpack:///./src/app/Components/Character/LocationName.tsx","webpack:///./src/app/Components/Character/ThumbSide.tsx","webpack:///../../node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js","webpack:///../../node_modules/@mui/material/Autocomplete/autocompleteClasses.js","webpack:///../../node_modules/@mui/material/Autocomplete/Autocomplete.js","webpack:///./src/app/Components/GeneralAutocomplete.tsx","webpack:///./src/app/Components/Image/CharIconSide.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 16v-1H3.01L3 19c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2v-4h-7v1h-4zm10-9h-4.01V5l-2-2h-4l-2 2v2H4c-1.1 0-2 .9-2 2v3c0 1.11.89 2 2 2h6v-2h4v2h6c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm-6 0h-4V5h4v2z\"\n}), 'BusinessCenter');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\n}), 'Lock');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z\"\n}), 'LockOpen');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: (theme.vars || theme).palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === 'primary' && {\n  color: (theme.vars || theme).palette.primary.main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: (theme.vars || theme).palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n  const {\n      className,\n      color = 'default',\n      component = 'li',\n      disableGutters = false,\n      disableSticky = false,\n      inset = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListSubheader;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","import { characterAsset } from \"@genshin-optimizer/g-assets\"\r\nimport { BusinessCenter } from \"@mui/icons-material\"\r\nimport { AutocompleteProps, Skeleton } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { getCharSheet } from \"../../Data/Characters\"\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\"\r\nimport { DatabaseContext } from \"../../Database/Database\"\r\nimport useDBMeta from \"../../ReactHooks/useDBMeta\"\r\nimport { charKeyToCharName, charKeyToLocCharKey, LocationCharacterKey, LocationKey, travelerKeys } from \"../../Types/consts\"\r\nimport { GeneralAutocomplete, GeneralAutocompleteOption } from \"../GeneralAutocomplete\"\r\nimport ThumbSide from \"./ThumbSide\"\r\ntype LocationAutocompleteProps = {\r\n  location: LocationKey,\r\n  setLocation: (v: LocationKey) => void,\r\n  filter?: (v: CharacterSheet) => void,\r\n  autoCompleteProps?: Omit<AutocompleteProps<GeneralAutocompleteOption<LocationKey>, false, false, false>, \"renderInput\" | \"onChange\" | \"options\">\r\n}\r\nexport function LocationAutocomplete({ location, setLocation, filter = () => true, autoCompleteProps = {} }: LocationAutocompleteProps) {\r\n  const { t } = useTranslation([\"ui\", \"artifact\", \"charNames_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const { gender } = useDBMeta()\r\n  const toText = useCallback((key: LocationCharacterKey): string => t(`charNames_gen:${charKeyToCharName(database.chars.LocationToCharacterKey(key), gender)}`), [database, gender, t])\r\n  const toImg = useCallback((key: LocationKey) => key === \"\" ? <BusinessCenter /> :\r\n    <ThumbSide src={characterAsset(database.chars.LocationToCharacterKey(key), \"iconSide\", gender)} sx={{ pr: 1 }} />,\r\n    [database, gender])\r\n  const isFavorite = useCallback((key: LocationCharacterKey) => key === \"Traveler\" ?\r\n    travelerKeys.some(key => database.charMeta.get(key).favorite) :\r\n    key ? database.charMeta.get(key).favorite : false, [database])\r\n\r\n  const values: GeneralAutocompleteOption<LocationKey>[] = useMemo(() => [{\r\n    key: \"\",\r\n    label: t`artifact:filterLocation.inventory`,\r\n  },\r\n  ...Array.from(new Set(database.chars.keys.filter(k => getCharSheet(k, gender) ? filter(getCharSheet(k, gender)) : true).map(k => charKeyToLocCharKey(k))))\r\n    .map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\r\n    .sort((a, b) => {\r\n      if (a.favorite && !b.favorite) return -1\r\n      if (!a.favorite && b.favorite) return 1\r\n      return a.label.localeCompare(b.label)\r\n    })\r\n  ], [t, toText, isFavorite, database, filter, gender])\r\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n    <GeneralAutocomplete size=\"small\" options={values} valueKey={location} onChange={(k => setLocation(k ?? \"\"))} toImg={toImg} {...autoCompleteProps} />\r\n  </Suspense>\r\n}\r\n","import { CharacterKey } from \"@genshin-optimizer/consts\"\r\nimport { characterAsset } from \"@genshin-optimizer/g-assets\"\r\nimport { Typography } from \"@mui/material\"\r\nimport { getCharSheet } from \"../../Data/Characters\"\r\nimport useDBMeta from \"../../ReactHooks/useDBMeta\"\r\nimport BootstrapTooltip from \"../BootstrapTooltip\"\r\nimport CharIconSide from \"../Image/CharIconSide\"\r\n\r\nexport default function LocationIcon({ characterKey }: { characterKey: CharacterKey }) {\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = getCharSheet(characterKey, gender)\r\n  if (!characterSheet) return null\r\n  return <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}>\r\n    <CharIconSide src={characterAsset(characterKey, \"iconSide\", gender)} size={3} />\r\n  </BootstrapTooltip>\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getCharSheet } from \"../../Data/Characters\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\r\nimport { LocationKey } from \"../../Types/consts\";\r\nimport LocationIcon from \"./LocationIcon\";\r\n\r\nexport default function LocationName({ location }: { location: LocationKey }) {\r\n  const { t } = useTranslation(\"ui\");\r\n  const { database } = useContext(DatabaseContext)\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = useMemo(() => location ? getCharSheet(database.chars.LocationToCharacterKey(location), gender) : undefined, [location, gender, database])\r\n  return <Typography component=\"span\">\r\n    {(location && characterSheet?.name) ?\r\n      <Box><LocationIcon characterKey={database.chars.LocationToCharacterKey(location)} />{characterSheet.name}</Box> :\r\n      <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t(\"inventory\")}</span>}\r\n  </Typography>\r\n\r\n}\r\n","import { styled } from \"@mui/material\";\n\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\n  display: \"inline-block\",\n  width: \"auto\",\n  height: `2.3em`,\n  lineHeight: 1,\n  verticalAlign: \"text-bottom\",\n  marginTop: theme.spacing(-3),\n  marginLeft: theme.spacing(-1.25),\n  marginRight: theme.spacing(-1),\n  marginBottom: theme.spacing(-1),\n}))\n\nexport default ThumbSide\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId, usePreviousProps } from '@mui/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = !input ? options : options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n}\n\n// To replace with .findIndex() once we stop IE11 support.\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when `Page Up` and `Page Down` keys are used.\nconst pageSize = 5;\nconst defaultIsActiveElementInListbox = listboxRef => {\n  var _listboxRef$current$p;\n  return listboxRef.current !== null && ((_listboxRef$current$p = listboxRef.current.parentElement) == null ? void 0 : _listboxRef$current$p.contains(document.activeElement));\n};\nexport default function useAutocomplete(props) {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_classNamePrefix = 'Mui',\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const previousProps = usePreviousProps({\n    filteredOptions,\n    value\n  });\n  React.useEffect(() => {\n    const valueChange = value !== previousProps.value;\n    if (focused && !valueChange) {\n      return;\n    }\n\n    // Only reset the input's value when freeSolo if the component's value changes.\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, previousProps.value, freeSolo]);\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index;\n\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector(`[role=\"option\"].${unstable_classNamePrefix}-focused`);\n    if (prev) {\n      prev.classList.remove(`${unstable_classNamePrefix}-focused`);\n      prev.classList.remove(`${unstable_classNamePrefix}-focusVisible`);\n    }\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.classList.add(`${unstable_classNamePrefix}-focused`);\n    if (reason === 'keyboard') {\n      option.classList.add(`${unstable_classNamePrefix}-focusVisible`);\n    }\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/content-assets/wai-aria-practices/patterns/combobox/examples/js/select-only.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    });\n\n    // Sync the content of the input with the highlighted option.\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const checkHighlightedOptionExists = () => {\n    const isSameValue = (value1, value2) => {\n      const label1 = value1 ? getOptionLabel(value1) : '';\n      const label2 = value2 ? getOptionLabel(value2) : '';\n      return label1 === label2;\n    };\n    if (highlightedIndexRef.current !== -1 && previousProps.filteredOptions && previousProps.filteredOptions.length !== filteredOptions.length && (multiple ? value.length === previousProps.value.length && previousProps.value.every((val, i) => getOptionLabel(value[i]) === getOptionLabel(val)) : isSameValue(previousProps.value, value))) {\n      const previousHighlightedOption = previousProps.filteredOptions[highlightedIndexRef.current];\n      if (previousHighlightedOption) {\n        const previousHighlightedOptionExists = filteredOptions.some(option => {\n          return getOptionLabel(option) === getOptionLabel(previousHighlightedOption);\n        });\n        if (previousHighlightedOptionExists) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    // Check if the previously highlighted option still exists in the updated filtered options list and if the value hasn't changed\n    // If it exists and the value hasn't changed, return, otherwise continue execution\n    if (checkHighlightedOptionExists()) {\n      return;\n    }\n    const valueItem = multiple ? value[0] : value;\n\n    // The popup is empty, reset\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n\n    // Synchronize the value with the highlighted index\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current];\n\n      // Keep the current highlighted index if possible\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    }\n\n    // Prevent the highlighted index to leak outside the boundaries.\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    }\n\n    // Restore the focus to the previous index.\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    });\n    // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    // Wait until IME is settled.\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            // Avoid early form validation, let the end-users continue filling the form.\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption');\n\n            // Move the selection to the end.\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        case 'Delete':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0 && focusedTag !== -1) {\n            const index = focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (unstable_isActiveElementInListbox(listboxRef)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  // Prevent input blur when interacting with the combobox\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  };\n\n  // Focus the input when interacting with the combobox\n  const handleClick = () => {\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox',\n      disabled: disabledProp\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => _extends({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _ClearIcon, _ArrowDropDownIcon;\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n});\n\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n      autoComplete = false,\n      autoHighlight = false,\n      autoSelect = false,\n      blurOnSelect = false,\n      ChipProps,\n      className,\n      clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n        fontSize: \"small\"\n      })),\n      clearOnBlur = !props.freeSolo,\n      clearOnEscape = false,\n      clearText = 'Clear',\n      closeText = 'Close',\n      componentsProps = {},\n      defaultValue = props.multiple ? [] : null,\n      disableClearable = false,\n      disableCloseOnSelect = false,\n      disabled = false,\n      disabledItemsFocusable = false,\n      disableListWrap = false,\n      disablePortal = false,\n      filterSelectedOptions = false,\n      forcePopupIcon = 'auto',\n      freeSolo = false,\n      fullWidth = false,\n      getLimitTagsText = more => `+${more}`,\n      getOptionLabel = option => {\n        var _option$label;\n        return (_option$label = option.label) != null ? _option$label : option;\n      },\n      groupBy,\n      handleHomeEndKeys = !props.freeSolo,\n      includeInputInList = false,\n      limitTags = -1,\n      ListboxComponent = 'ul',\n      ListboxProps,\n      loading = false,\n      loadingText = 'Loading…',\n      multiple = false,\n      noOptionsText = 'No options',\n      openOnFocus = false,\n      openText = 'Open',\n      PaperComponent = Paper,\n      PopperComponent = Popper,\n      popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n      readOnly = false,\n      renderGroup: renderGroupProp,\n      renderInput,\n      renderOption: renderOptionProp,\n      renderTags,\n      selectOnFocus = !props.freeSolo,\n      size = 'medium',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    });\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, popperSlotProps, {\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, paperSlotProps, {\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","import { Favorite } from \"@mui/icons-material\"\r\nimport { Autocomplete, AutocompleteProps, Chip, ChipProps, ListItemIcon, ListItemText, MenuItem, Skeleton, TextField, useTheme } from \"@mui/material\"\r\nimport { Suspense, useMemo } from \"react\"\r\nimport { Variant } from \"../Formula/type\"\r\nimport ColorText from \"./ColoredText\"\r\n/**\r\n * NOTE: the rationale behind toImg/toExlabel/toExItemLabel, is because `options` needs to be serializable, and having JSX in there will disrupt seralizability.\r\n */\r\nexport type GeneralAutocompleteOption<T extends string> = { key: T, label: string, grouper?: string | number, variant?: Variant, favorite?: boolean }\r\ntype GeneralAutocompletePropsBase<T extends string> = {\r\n  label?: string,\r\n  toImg: (v: T) => JSX.Element | undefined,\r\n  toExItemLabel?: (v: T) => Displayable | undefined,\r\n  toExLabel?: (v: T) => Displayable | undefined,\r\n  chipProps?: Partial<ChipProps>\r\n}\r\nexport type GeneralAutocompleteProps<T extends string> = GeneralAutocompletePropsBase<T> & { valueKey: T | null, onChange: (v: T | null) => void, } &\r\n  Omit<AutocompleteProps<GeneralAutocompleteOption<T>, false, false, false>, \"renderInput\" | \"isOptionEqualToValue\" | \"renderOption\" | \"onChange\" | \"value\">\r\nexport function GeneralAutocomplete<T extends string>({ options, valueKey: key, label, onChange, toImg, toExItemLabel, toExLabel, ...acProps }: GeneralAutocompleteProps<T>) {\r\n  const value = options.find(o => o.key === key) ?? null\r\n  const theme = useTheme()\r\n  return <Autocomplete\r\n    autoHighlight\r\n    options={options}\r\n    value={value}\r\n    onChange={(event, newValue, reason) => onChange(newValue?.key ?? null)}\r\n    isOptionEqualToValue={(option, value) => option.key === value?.key}\r\n    renderInput={(params) => {\r\n      const variant = value?.variant\r\n      const color = variant ? theme.palette[variant]?.main : undefined\r\n      const valueKey = value?.key\r\n      return <TextField\r\n        {...params}\r\n        label={label}\r\n        InputProps={{\r\n          ...params.InputProps,\r\n          startAdornment: valueKey ? toImg(valueKey) : undefined,\r\n        }}\r\n        inputProps={{\r\n          ...params.inputProps,\r\n          autoComplete: 'new-password', // disable autocomplete and autofill\r\n          style: { color }\r\n        }}\r\n        color={key ? \"success\" : \"primary\"}\r\n      />\r\n    }}\r\n    renderOption={(props, option) => <MenuItem value={option.key} {...props}>\r\n      <ListItemIcon>{toImg(option.key)}</ListItemIcon>\r\n      <ListItemText color={option.variant}>\r\n        <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n          <ColorText color={option.variant} sx={{ display: \"flex\", gap: 1 }}>\r\n            {option.key === value?.key ? <strong>{option.label}</strong> : <span>{option.label}</span>}\r\n            {toExItemLabel?.(option.key)}\r\n          </ColorText>\r\n        </Suspense>\r\n      </ListItemText>\r\n      {!!option.favorite && <Favorite />}\r\n    </MenuItem>}\r\n    {...acProps}\r\n  />\r\n}\r\nexport type GeneralAutocompleteMultiProps<T extends string> = GeneralAutocompletePropsBase<T> & { valueKeys: T[], onChange: (v: T[]) => void, } &\r\n  Omit<AutocompleteProps<GeneralAutocompleteOption<T>, true, true, false>, \"renderInput\" | \"isOptionEqualToValue\" | \"renderOption\" | \"onChange\" | \"value\">\r\nexport function GeneralAutocompleteMulti<T extends string>({ options, valueKeys: keys, label, onChange, toImg, toExItemLabel, toExLabel, chipProps, ...acProps }: GeneralAutocompleteMultiProps<T>) {\r\n  const value = useMemo(() => keys.map(k => options.find(o => o.key === k)).filter(o => o) as unknown as GeneralAutocompleteOption<T>[], [options, keys])\r\n  return <Autocomplete\r\n    autoHighlight\r\n    options={options}\r\n    multiple\r\n    disableCloseOnSelect\r\n    value={value}\r\n    onChange={(event, newValue, reason) => {\r\n      if (reason === \"clear\") return onChange([])\r\n      return newValue !== null && onChange(newValue.map(v => v.key))\r\n    }}\r\n    isOptionEqualToValue={(option, value) => option.key === value.key}\r\n    renderInput={params => <TextField\r\n      {...params}\r\n      label={label}\r\n      inputProps={{\r\n        ...params.inputProps,\r\n        autoComplete: 'new-password', // disable autocomplete and autofill\r\n      }}\r\n      color={keys.length ? \"success\" : \"primary\"}\r\n    />}\r\n    renderOption={(props, option) => <MenuItem value={option.key} {...props}>\r\n      <ListItemIcon>{toImg(option.key)}</ListItemIcon>\r\n      <ListItemText >\r\n        <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n          <ColorText color={option.variant} sx={{ display: \"flex\", gap: 1 }}>\r\n            {keys.includes(option.key) ? <strong>{option.label}</strong> : <span>{option.label}</span>}\r\n            {toExItemLabel?.(option.key)}\r\n          </ColorText>\r\n        </Suspense>\r\n      </ListItemText>\r\n      {!!option.favorite && <Favorite />}\r\n    </MenuItem>}\r\n    renderTags={(selected, getTagProps) => selected.map(({ key, label, variant }, index) =>\r\n      <Chip {...chipProps} {...getTagProps({ index })} key={`${index}${key}${label}`} icon={toImg(key)} label={toExLabel ? <span>{label} {toExLabel(key)}</span> : label} color={variant} />\r\n    )}\r\n    {...acProps}\r\n  />\r\n}\r\n","import { styled } from \"@mui/material\"\ninterface ImgIconProps {\n  size?: number;\n  sideMargin?: boolean;\n}\nconst CharIconSide = styled(\"img\", {\n  name: 'ImgIcon',\n  slot: 'Root',\n  shouldForwardProp: (pn) => ![\"size\", \"sideMargin\"].includes(pn as \"size\" | \"sideMargin\")\n})<ImgIconProps>(({ size = 2, sideMargin = false }) => ({\n  display: \"inline-block\",\n  width: `${size}em`,\n  height: `${size}em`,\n  marginTop: `${0.85 * (1 - size)}em`,\n  marginBottom: `${0.15 * (1 - size)}em`,\n  marginLeft: sideMargin ? `${0.5 * (1 - size)}em` : undefined,\n  marginRight: sideMargin ? `${0.5 * (1 - size)}em` : undefined,\n  verticalAlign: \"text-bottom\"\n}))\n\nexport default CharIconSide\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getListSubheaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListSubheaderRoot","styled","name","overridesResolver","props","styles","ownerState","root","color","capitalize","disableGutters","gutters","inset","disableSticky","sticky","theme","boxSizing","lineHeight","listStyle","vars","palette","text","secondary","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","primary","main","paddingLeft","paddingRight","position","top","zIndex","backgroundColor","background","paper","inProps","ref","useThemeProps","className","component","other","classes","slots","composeClasses","useUtilityClasses","as","value","current","LocationAutocomplete","location","setLocation","filter","autoCompleteProps","t","useTranslation","database","useContext","DatabaseContext","gender","useDBMeta","toText","useCallback","key","charKeyToCharName","chars","LocationToCharacterKey","toImg","_jsx","BusinessCenter","ThumbSide","src","characterAsset","sx","pr","isFavorite","travelerKeys","charMeta","get","favorite","values","useMemo","label","_t","_","Array","from","Set","keys","k","getCharSheet","map","charKeyToLocCharKey","v","sort","a","b","localeCompare","Suspense","fallback","Skeleton","variant","width","children","GeneralAutocomplete","Object","assign","size","options","valueKey","onChange","LocationIcon","characterKey","characterSheet","BootstrapTooltip","placement","title","Typography","CharIconSide","LocationName","undefined","_jsxs","Box","verticalAlign","display","height","marginTop","spacing","marginLeft","marginRight","marginBottom","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","option","candidate","indexOf","slice","createFilterOptions","pageSize","defaultIsActiveElementInListbox","listboxRef","_listboxRef$current$p","parentElement","contains","document","activeElement","useAutocomplete","unstable_isActiveElementInListbox","unstable_classNamePrefix","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabled","disabledProp","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","groupBy","handleHomeEndKeys","id","idProp","includeInputInList","inputValueProp","isOptionEqualToValue","onClose","onHighlightChange","onInputChange","onOpen","open","openProp","openOnFocus","readOnly","selectOnFocus","valueProp","useId","optionLabel","String","ignoreFocus","firstFocus","inputRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setValueState","useControlled","controlled","setInputValueState","state","focused","setFocused","resetInputValue","event","newValue","newInputValue","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","previousProps","usePreviousProps","valueChange","listboxAvailable","focusTag","useEventCallback","tagToFocus","focus","querySelector","setHighlightedIndex","index","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","scrollTop","add","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","every","val","value1","previousHighlightedOption","checkHighlightedOptionExists","valueItem","currentOption","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","isArray","push","splice","ctrlKey","metaKey","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","onKeyDown","defaultMuiPrevented","which","preventDefault","stopPropagation","handleFocus","handleBlur","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","role","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","AutocompleteRoot","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","tag","inputRoot","visibility","margin","maxWidth","flexWrap","minWidth","inputClasses","paddingBottom","padding","inputBaseClasses","outlinedInputClasses","right","paddingTop","filledInputClasses","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","endAdornment","AutocompleteClearIndicator","IconButton","clearIndicator","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","modal","AutocompletePaper","Paper","body1","overflow","AutocompleteLoading","loading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","maxHeight","minHeight","justifyContent","alignItems","cursor","outline","WebkitTapHighlightColor","breakpoints","up","action","hover","disabledOpacity","pointerEvents","mainChannel","selectedOpacity","hoverOpacity","focusOpacity","AutocompleteGroupLabel","ListSubheader","groupLabel","AutocompleteGroupUl","groupUl","_slotProps$clearIndic","_slotProps$paper","_slotProps$popper","_slotProps$popupIndic","ChipProps","clearIcon","clearText","closeText","componentsProps","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDown","renderGroup","renderGroupProp","renderInput","renderOption","renderOptionProp","renderTags","slotProps","startAdornment","getCustomizedTagProps","params","Chip","props2","renderListOption","optionProps","clearIndicatorSlotProps","paperSlotProps","popperSlotProps","popupIndicatorSlotProps","InputLabelProps","InputProps","inputProps","style","clientWidth","option2","index2","_ref","_options$find","toExItemLabel","acProps","_objectWithoutPropertiesLoose","find","o","useTheme","Autocomplete","_newValue$key","_theme$palette$varian","TextField","MenuItem","ListItemIcon","ListItemText","ColorText","gap","Favorite","GeneralAutocompleteMulti","_ref2","valueKeys","toExLabel","chipProps","_excluded2","includes","_createElement","icon","shouldForwardProp","pn","sideMargin"],"sourceRoot":""}