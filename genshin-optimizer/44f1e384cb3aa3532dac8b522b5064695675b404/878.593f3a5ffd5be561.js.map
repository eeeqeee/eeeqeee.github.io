{"version":3,"file":"878.593f3a5ffd5be561.js","mappings":"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","sources":["webpack:///../../node_modules/@mui/icons-material/esm/CheckBox.js","webpack:///../../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","webpack:///./src/app/Components/Card/CardHeaderCustom.tsx","webpack:///./src/app/Components/Conditional/ConditionalSelector.tsx","webpack:///./src/app/Components/Conditional/ConditionalDisplay.tsx","webpack:///./src/app/Components/DocumentDisplay.tsx","webpack:///./src/app/Components/LevelSelect.tsx","webpack:///./src/app/Components/RefinementDropdown.tsx","webpack:///./src/app/PageWeapon/WeaponEditor.tsx"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import { Typography, Box } from \"@mui/material\";\n\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\n    {avatar}\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\n    {action && <Typography variant=\"caption\">{action}</Typography>}\n  </Box>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport { DataContext } from '../../Context/DataContext';\r\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\r\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\r\nimport DropdownButton from '../DropdownMenu/DropdownButton';\r\nimport SqBadge from '../SqBadge';\r\nimport { Translate } from '../Translate';\r\n\r\ninterface ConditionalSelectorProps {\r\n  conditional: DocumentConditional,\r\n  disabled?: boolean,\r\n}\r\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\r\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\r\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\r\n  } else if (\"path\" in conditional) {\r\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\r\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\r\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\r\n  }\r\n}\r\n\r\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalExclusive\r\n}\r\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  const conditionalValue = data.get(conditional.value).value\r\n  const [stateKey, st] = Object.entries(conditional.states)[0]\r\n  const badge = getStateBadge(st.name)\r\n  const condName = getCondName(conditional.name)\r\n\r\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n    {condName} {badge}\r\n  </Button>\r\n}\r\n\r\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalExclusive\r\n}\r\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  const conditionalValue = data.get(conditional.value).value\r\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\r\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\r\n  const condName = getCondName(conditional.name)\r\n\r\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\r\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\r\n      <span>Not Active</span>\r\n    </MenuItem>\r\n    <Divider />\r\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\r\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n\r\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalMultiple\r\n}\r\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [character, characterDispatch])\r\n\r\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\r\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\r\n      const conditionalValue = data.get(st.value).value\r\n      const isSelected = conditionalValue === stateKey\r\n      return <Button\r\n        color={isSelected ? \"success\" : \"primary\"}\r\n        disabled={disabled}\r\n        fullWidth\r\n        key={stateKey}\r\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\r\n        size=\"small\"\r\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\r\n        sx={{ borderRadius: 0 }}\r\n      >\r\n        {getCondName(st.name)}\r\n      </Button>\r\n    })}\r\n  </ButtonGroup>\r\n}\r\n\r\nfunction isElement(disp: Displayable): disp is JSX.Element {\r\n  return (typeof disp !== \"string\")\r\n}\r\n\r\n// Use colored badges instead of colored text inside these buttons\r\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\r\n  if (!stateName) return \"\"\r\n\r\n  let badgeColor: ButtonProps['color'] = \"primary\"\r\n  let badgeText = stateName\r\n  if (stateName && isElement(stateName)) {\r\n    if (stateName.props.color) {\r\n      badgeColor = stateName.props.color\r\n      badgeText = <span>{stateName.props.children}</span>\r\n    }\r\n  }\r\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\r\n}\r\n\r\n// Use colored badges instead of colored text inside these buttons\r\nfunction getCondName(condName: Displayable): Displayable {\r\n  if (isElement(condName)) {\r\n    const key = condName.props.key18\r\n    const ns = condName.props.ns\r\n    const values = condName.props.values\r\n    return <Translate ns={ns} key18={key} values={values} useBadge />\r\n  }\r\n  return condName\r\n}\r\n","import { CardContent } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../../Context/DataContext\"\r\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\r\nimport { evalIfFunc } from \"../../Util/Util\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport { HeaderDisplay } from \"../DocumentDisplay\"\r\nimport FieldsDisplay from \"../FieldDisplay\"\r\nimport ConditionalSelector from \"./ConditionalSelector\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: DocumentConditional,\r\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\r\n  hideDesc?: boolean,\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\r\n  const { data } = useContext(DataContext)\r\n  let fields\r\n  if (\"path\" in conditional) {\r\n    const condVal = data.get(conditional.value).value\r\n    fields = condVal && conditional.states[condVal]?.fields\r\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\r\n    fields = Object.values(conditional.states).flatMap(state => {\r\n      const stateVal = data.get(state.value).value\r\n      return stateVal ? state.fields : []\r\n    })\r\n  }\r\n  return <CardDark>\r\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\r\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\r\n      <ConditionalSelector conditional={conditional} />\r\n    </CardContent>\r\n    {fields && <FieldsDisplay fields={fields} />}\r\n  </CardDark>\r\n}\r\n","import { Box, Divider, Typography } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../Context/DataContext\"\r\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\r\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\r\nimport FieldsDisplay from \"./FieldDisplay\"\r\nimport { InfoTooltipInline } from \"./InfoTooltip\"\r\n\r\ntype DocumentDisplayProps = {\r\n  sections: DocumentSection[],\r\n  teamBuffOnly?: boolean,\r\n  hideDesc?: boolean,\r\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\r\n}\r\n\r\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\r\n  const { data } = useContext(DataContext)\r\n  if (!sections.length) return null\r\n  const sectionDisplays = sections.map((s, i) => {\r\n    // If we can't show this section, return null\r\n    if (s.canShow && !data.get(s.canShow).value) return null\r\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\r\n    if (teamBuffOnly && !s.teamBuff) return null\r\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  }).filter(s => s)\r\n  if (!sectionDisplays.length) return null\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\r\n}\r\n\r\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  if (\"fields\" in section) {\r\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  } else if (\"states\" in section) {\r\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  } else /* if (\"text\" in section) */ {\r\n    return <TextSectionDisplay section={section} />\r\n  }\r\n}\r\n\r\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  return <CardDark>\r\n    {!evalIfFunc(hideHeader, section) && section.header &&\r\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\r\n    }\r\n    <FieldsDisplay fields={section.fields} />\r\n  </CardDark>\r\n}\r\n\r\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\r\n  const { data } = useContext(DataContext)\r\n  return <div>\r\n    {evalIfFunc(section.text, data)}\r\n  </div>\r\n}\r\n\r\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  const { data } = useContext(DataContext)\r\n  const { icon: preicon, title, action } = header\r\n  const icon = evalIfFunc(preicon, data)\r\n  const description = !hideDesc && evalIfFunc(header.description, data)\r\n  const displayTitle = hideDesc ? title : <span>{title}<InfoTooltipInline title={<Typography>{description}</Typography>} /></span>\r\n  return <>\r\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\r\n    {!hideDivider && <Divider />}\r\n  </>\r\n}\r\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\r\nimport { useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, ascensionMaxLevelLow, maxLevel, maxLevelLow, milestoneLevels, milestoneLevelsLow } from '../Data/LevelData';\r\nimport { Ascension } from '../Types/consts';\r\nimport { clamp } from '../Util/Util';\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\r\nimport DropdownButton from './DropdownMenu/DropdownButton';\r\n\r\nexport default function LevelSelect({ level, ascension, setBoth, useLow = false }: { level: number, ascension: Ascension, setBoth: (action: { level?: number, ascension?: Ascension }) => void, useLow?: boolean }) {\r\n  const { t } = useTranslation(\"ui\")\r\n  const ascensionMaxLevels = useLow ? ascensionMaxLevelLow : ascensionMaxLevel\r\n  const setLevel = useCallback((level = 1) => {\r\n    level = clamp(level, 1, useLow ? maxLevelLow : maxLevel)\r\n    const ascension = ascensionMaxLevels.findIndex(ascenML => level <= ascenML) as Ascension\r\n    setBoth({ level, ascension })\r\n  }, [setBoth, ascensionMaxLevels, useLow])\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevels.findIndex(ascenML => level !== 90 && level === ascenML) as Ascension\r\n    if (ascension === lowerAscension) setBoth({ ascension: (ascension + 1) as Ascension })\r\n    else setBoth({ ascension: lowerAscension })\r\n  }, [setBoth, ascensionMaxLevels, ascension, level])\r\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\r\n    <CustomNumberInputButtonGroupWrapper >\r\n      <CustomNumberInput onChange={setLevel} value={level}\r\n        startAdornment=\"Lv. \"\r\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\", width: \"3em\" } }}\r\n        sx={{ height: \"100%\", pl: 2 }} />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button sx={{ pl: 1, whiteSpace: 'nowrap' }} disabled={!(useLow ? ambiguousLevelLow : ambiguousLevel)(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n    <DropdownButton title={t(\"selectlevel\")} sx={{ flexGrow: 1 }}>\r\n      {[...(useLow ? milestoneLevelsLow : milestoneLevels)].map(([lv, as]) => {\r\n        const selected = lv === level && as === ascension\r\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => setBoth({ level: lv, ascension: as })}>\r\n          {lv === ascensionMaxLevels[as] ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevels[as]}`}\r\n        </MenuItem>\r\n      })}\r\n    </DropdownButton>\r\n  </ButtonGroup>\r\n}\r\n","import { MenuItem } from \"@mui/material\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { allRefinement, Refinement } from \"../Types/consts\"\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\"\r\n\r\nexport default function RefinementDropdown({ refinement, setRefinement }: { refinement: Refinement, setRefinement: (r: Refinement) => void }) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <DropdownButton title={t(\"refinement\", { value: refinement })}>\r\n    {allRefinement.map(r =>\r\n      <MenuItem key={r} onClick={() => setRefinement(r)} selected={refinement === r} disabled={refinement === r}>\r\n        {t(\"refinement\", { value: r })}\r\n      </MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { weaponAsset } from \"@genshin-optimizer/g-assets\"\r\nimport { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardContent, CardHeader, Divider, Grid, ListItem, Typography } from \"@mui/material\"\r\nimport React, { useCallback, useContext, useEffect, useMemo } from \"react\"\r\nimport CardDark from \"../Components/Card/CardDark\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport { LocationAutocomplete } from \"../Components/Character/LocationAutocomplete\"\r\nimport CloseButton from \"../Components/CloseButton\"\r\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../Components/FieldDisplay\"\r\nimport LevelSelect from \"../Components/LevelSelect\"\r\nimport ModalWrapper from \"../Components/ModalWrapper\"\r\nimport RefinementDropdown from \"../Components/RefinementDropdown\"\r\nimport { StarsDisplay } from \"../Components/StarDisplay\"\r\nimport { DataContext } from \"../Context/DataContext\"\r\nimport { getCharSheet } from \"../Data/Characters\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { milestoneLevelsLow } from \"../Data/LevelData\"\r\nimport { getWeaponSheet } from \"../Data/Weapons\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport useBoolState from \"../ReactHooks/useBoolState\"\r\nimport useDBMeta from \"../ReactHooks/useDBMeta\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { LocationKey } from \"../Types/consts\"\r\nimport { ICachedWeapon } from \"../Types/weapon\"\r\nconst WeaponSelectionModal = React.lazy(() => import('../Components/Weapon/WeaponSelectionModal'))\r\ntype WeaponStatsEditorCardProps = {\r\n  weaponId: string\r\n  footer?: boolean\r\n  onClose?: () => void\r\n  extraButtons?: JSX.Element\r\n}\r\nexport default function WeaponEditor({\r\n  weaponId: propWeaponId,\r\n  footer = false,\r\n  onClose,\r\n  extraButtons\r\n}: WeaponStatsEditorCardProps) {\r\n  const { data } = useContext(DataContext)\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n  const weapon = useWeapon(propWeaponId)\r\n  const { key = \"\", level = 0, refinement = 1, ascension = 0, lock, location = \"\", id } = weapon ?? {}\r\n  const weaponSheet = key ? getWeaponSheet(key) : undefined\r\n\r\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\r\n    database.weapons.set(propWeaponId, newWeapon)\r\n  }, [propWeaponId, database])\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = useMemo(() => location ? getCharSheet(database.chars.LocationToCharacterKey(location), gender) : undefined, [database, gender, location])\r\n\r\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\r\n\r\n  const setLocation = useCallback((k: LocationKey) => id && database.weapons.set(id, { location: k }), [database, id])\r\n  const filter = useCallback((cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType, [weaponSheet])\r\n\r\n  const [showModal, onShowModal, onHideModal] = useBoolState()\r\n  const img = key ? weaponAsset(key, ascension >= 2) : \"\"\r\n\r\n  //check the levels when switching from a 5* to a 1*, for example.\r\n  useEffect(() => {\r\n    if (!weaponSheet || !weaponDispatch || weaponSheet.key !== weapon?.key) return\r\n    if (weaponSheet.rarity <= 2 && (level > 70 || ascension > 4)) {\r\n      const [level, ascension] = milestoneLevelsLow[0]\r\n      weaponDispatch({ level, ascension })\r\n    }\r\n  }, [weaponSheet, weapon, weaponDispatch, level, ascension])\r\n\r\n\r\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  return <ModalWrapper open={!!propWeaponId} onClose={onClose} containerProps={{ maxWidth: \"md\" }}><CardLight>\r\n    <WeaponSelectionModal ascension={ascension} show={showModal} onHide={onHideModal} onSelect={k => weaponDispatch({ key: k })} weaponTypeFilter={initialWeaponFilter} />\r\n    <CardContent >\r\n      {weaponSheet && weaponUIData && <Grid container spacing={1.5}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Grid container spacing={1.5}>\r\n            <Grid item xs={6} sm={12}>\r\n              <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\r\n            </Grid>\r\n            <Grid item xs={6} sm={12}>\r\n              <Typography><small>{weaponSheet.description}</small></Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\r\n            <ButtonGroup>\r\n              <Button color=\"info\" onClick={onShowModal} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\r\n              {weaponSheet?.hasRefinement && <RefinementDropdown refinement={refinement} setRefinement={r => weaponDispatch({ refinement: r })} />}\r\n              {extraButtons}\r\n            </ButtonGroup>\r\n          </Box>\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\r\n            {weaponSheet && <LevelSelect level={level} ascension={ascension} setBoth={weaponDispatch} useLow={!weaponSheet.hasRefinement} />}\r\n            <Button color=\"error\" onClick={() => id && database.weapons.set(id, { lock: !lock })} startIcon={lock ? <Lock /> : <LockOpen />}>\r\n              {lock ? \"Locked\" : \"Unlocked\"}\r\n            </Button>\r\n          </Box>\r\n          <StarsDisplay stars={weaponSheet.rarity} />\r\n          <Typography variant=\"subtitle1\"><strong>{weaponSheet.passiveName}</strong></Typography>\r\n          <Typography gutterBottom>{weaponSheet.passiveName && weaponSheet.passiveDescription(weaponUIData.get(input.weapon.refineIndex).value)}</Typography>\r\n          <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n            <CardDark >\r\n              <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n              <Divider />\r\n              <FieldDisplayList>\r\n                {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map(node => {\r\n                  const n = weaponUIData.get(node)\r\n                  if (n.isEmpty || !n.value) return null\r\n                  return <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} component={ListItem} />\r\n                })}\r\n              </FieldDisplayList>\r\n            </CardDark>\r\n            {data && weaponSheet.document && <DocumentDisplay sections={weaponSheet.document} />}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>}\r\n    </CardContent>\r\n    {footer && id && <CardContent sx={{ py: 1 }}>\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1}>\r\n          <LocationAutocomplete location={location} setLocation={setLocation} filter={filter} autoCompleteProps={{ getOptionDisabled: t => !t.key}} />\r\n        </Grid>\r\n        <Grid item flexGrow={2} />\r\n        {!!onClose && <Grid item><CloseButton sx={{ height: \"100%\" }} large onClick={onClose} /></Grid>}\r\n      </Grid>\r\n    </CardContent>}\r\n  </CardLight ></ModalWrapper>\r\n}\r\n"],"names":["d","CardHeaderCustom","avatar","title","action","_jsxs","Box","display","gap","p","alignItems","children","_jsx","Typography","variant","sx","flexGrow","ConditionalSelector","conditional","disabled","Object","keys","states","length","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","character","characterDispatch","useContext","CharacterContext","data","DataContext","setConditional","useCallback","v","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","value","stateKey","st","entries","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","color","onClick","undefined","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","MenuItem","selected","Divider","map","ButtonGroup","orientation","disableElevation","isSelected","isElement","disp","stateName","badgeColor","badgeText","props","ml","key","key18","ns","values","Translate","useBadge","ConditionalDisplay","hideHeader","hideDesc","fields","_conditional$states$c","condVal","flatMap","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","FieldsDisplay","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","text","icon","preicon","description","displayTitle","InfoTooltipInline","_Fragment","LevelSelect","level","ascension","setBoth","useLow","t","useTranslation","ascensionMaxLevels","ascensionMaxLevelLow","ascensionMaxLevel","setLevel","clamp","maxLevelLow","maxLevel","findIndex","ascenML","setAscension","lowerAscension","bgcolor","palette","contentDark","main","CustomNumberInputButtonGroupWrapper","CustomNumberInput","onChange","startAdornment","inputProps","min","max","textAlign","width","height","pl","whiteSpace","ambiguousLevelLow","ambiguousLevel","milestoneLevelsLow","milestoneLevels","lv","as","RefinementDropdown","refinement","setRefinement","allRefinement","r","WeaponSelectionModal","React","WeaponEditor","weaponId","propWeaponId","footer","onClose","extraButtons","_weaponSheet$name","database","DatabaseContext","weapon","useWeapon","lock","location","id","weaponSheet","getWeaponSheet","weaponDispatch","newWeapon","weapons","set","gender","useDBMeta","characterSheet","useMemo","getCharSheet","chars","LocationToCharacterKey","initialWeaponFilter","weaponTypeKey","setLocation","k","cs","weaponType","showModal","onShowModal","onHideModal","useBoolState","img","weaponAsset","useEffect","rarity","weaponUIData","computeUIData","dataObjForWeapon","ModalWrapper","open","containerProps","maxWidth","CardLight","show","onHide","onSelect","weaponTypeFilter","Grid","container","spacing","item","xs","sm","component","src","className","flexWrap","justifyContent","hasRefinement","Lock","LockOpen","StarsDisplay","stars","passiveName","gutterBottom","passiveDescription","input","CardHeader","titleTypographyProps","FieldDisplayList","node","n","isEmpty","NodeFieldDisplay","ListItem","JSON","stringify","info","document","py","LocationAutocomplete","autoCompleteProps","getOptionDisabled","CloseButton","large"],"sourceRoot":""}