{"version":3,"file":"static/js/857.d8404b3c.chunk.js","mappings":"qeAYe,SAASA,EAAT,GAAwH,IAA3FC,EAA0F,EAA1FA,MAA0F,IAAnFC,MAAAA,OAAmF,MAA3E,GAA2E,EAAvEC,EAAuE,EAAvEA,KAAMC,EAAiE,EAAjEA,MAAOC,EAA0D,EAA1DA,WAAYC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,MACnG,OAAO,UAACC,EAAA,GAAD,gBAAsBP,MAAOA,GAAWM,GAAxC,eACL,SAACE,EAAA,EAAD,UAAeP,KACf,SAACQ,EAAA,EAAD,CAAcC,uBAAwB,CAAEC,MAAO,CAAEC,WAAYR,EAAaD,EAAMU,WAAWC,iBAAmBX,EAAMU,WAAWE,oBAA/H,SACGb,IAEFG,GAAeA,KALIL,EAOvB,C,qbCWD,SAASgB,EAAT,GACyC,IADuDC,EACxD,EADwDA,2BAA4BC,EACpF,EADoFA,qBAAsBC,EAC1G,EAD0GA,gBAAiBC,EAC3H,EAD2HA,QAASC,EACpI,EADoIA,SAAUC,EAC9I,EAD8IA,MAAUhB,GACxJ,YAChCH,GAAQoB,EAAAA,EAAAA,KAKRC,GAAUC,EAAAA,EAAAA,UAAQ,kBAAMR,EAA2BS,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,QAAR,MAAuB,CAAED,IAAAA,EAAKL,MAAOF,EAAQO,GAAMC,QAAAA,EAAnD,GAArC,GAAqG,CAACX,EAA4BG,IAC1J,OAAO,SAACS,EAAA,GAAD,QACLC,eAAa,EACbC,UAAQ,EACRC,sBAAoB,EACpBR,QAASA,EACTxB,MAAOkB,EAAqBQ,KAAI,SAAAC,GAAG,MAAK,CAAEA,IAAKA,EAAKL,MAAOF,EAAQO,GAAhC,IACnCM,SAVmB,SAACC,EAAGlC,GACvBmB,EAAgBnB,EAAM0B,KAAI,SAAAS,GAAC,OAAIA,EAAER,GAAN,IAC5B,EASCS,eAAgB,SAACC,GAAD,OAAYA,EAAOf,KAAnB,EAChBgB,qBAAsB,SAACD,EAAQrC,GAAT,OAAmBqC,EAAOV,MAAQ3B,EAAM2B,GAAxC,EACtBY,YAAa,SAACC,GAAD,OAAY,SAACC,EAAA,GAAD,kBACnBD,GADmB,IAEvBlB,MAAOA,EACPoB,QAAQ,SACRC,gBAAiB,CAAEhC,MAAO,CAAEiC,MAAOzC,EAAM0C,QAAQ3C,KAAK4C,UACtDF,MAAO1B,EAAqB6B,OAAS,UAAY,UACjDC,KAAK,WANM,EAQbC,aAAc,SAAC3C,EAAO+B,GAAR,OACZ,SAACtC,EAAD,CAEEC,MAAOqC,EAAOV,IACd1B,OAAO,SAAC,IAAD,CAAW2C,MAAOM,EAAAA,GAAAA,WAAkBb,EAAOV,KAA3C,SAAkDN,EAASgB,EAAOV,OACzEzB,MAAM,SAAC,IAAD,CAAW0C,MAAOM,EAAAA,GAAAA,WAAkBb,EAAOV,KAA3C,SAAkDU,EAAOf,QAC/DnB,MAAOA,EACPC,WAAYc,EAAqBiC,SAASd,EAAOV,KACjDrB,MAAOA,GANF+B,EAAOV,IAFF,EAWdyB,WAAY,SAACC,EAAUC,GAAX,OAA2BD,EAAS3B,KAAI,SAAC1B,EAAOuD,GAC1D,IAAMC,EAAUC,EAAAA,GAAAA,MAAwB,SAAAC,GAAG,OAAI1D,EAAM2B,MAAN,UAAiB+B,EAAjB,QAAJ,IACrCd,EAAQY,QAAoBG,EAClC,OAAO,mBAACC,EAAA,GAAD,kBAAUN,EAAY,CAAEC,MAAAA,KAAxB,IAAkC5B,IAAK3B,EAAM2B,IAAKkC,KAAMxC,EAASrB,EAAM2B,KAAML,MAAOtB,EAAMsB,MAAOsB,MAAOA,IAChH,GAJW,GAKRtC,GAEP,CAMM,SAASwD,EAAT,GAAmH,IAA3EC,EAA0E,EAA1EA,WAAYC,EAA8D,EAA9DA,cAAkB1D,GAA4C,YACjH2D,GAAiBC,EAAAA,EAAAA,IAAW,kBAAMC,EAAAA,EAAAA,MAAN,GAA4B,IACtDC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,WAAY,sBAAlCD,EACR,IAAKH,EAAgB,OAAO,KAE5B,IAAMK,EAA6BC,OAAOC,QAAQL,EAAAA,EAAAA,kBAAgCF,IAC/EQ,SAAQ,+BAAEC,EAAF,iBAAyBhD,KAAI,SAAAiD,GAAG,MAAK,CAAEhD,IAAKgD,EAAK/C,SAAU8C,EAA3B,GAAhC,IACRE,KAAKC,GAER,OAAO,SAAC7D,GAAD,QACLC,2BAA4BqD,EAC5BpD,qBAAsB6C,EACtB5C,gBAAiB6C,EACjB5C,QAAS,SAACO,GAAD,OAAyByC,EAAE,qBAAD,OAAsBzC,GAAhD,EACTN,SAAU,SAACM,GAAD,OAAyBsC,EAAetC,GAAKmD,OAA7C,EACVxD,MAAO8C,EAAE,oCACTW,QAAS,SAAC1C,GAAD,mCAAYA,EAAOT,eAAnB,aAAY,EAAgBoD,kBAA5B,QAA0C,EAA1C,EACTC,YAAa,SAACzC,GAAD,OAA2CA,EAAO0C,QAAS,UAACC,EAAA,EAAD,CAAyBC,UAAWC,EAAAA,EAApC,WACtE,UAACC,EAAA,EAAD,CAA6CC,GAAI,CAAEC,IAAK,QAAxD,UACGhD,EAAO0C,MADV,KACiB,SAAC,IAAD,CAAcO,OAAQjD,EAAO0C,UAD9C,UAAuB1C,EAAO0C,MAA9B,WAGC1C,EAAOkD,WAJyElD,EAAO0C,MAA7E,GAMT5E,GAEP,CAMM,SAASqF,EAAT,GAAiI,IAApFC,EAAmF,EAAnFA,aAAcC,EAAqE,EAArEA,gBAAoBvF,GAAiD,YAC7H8D,GAAMC,EAAAA,EAAAA,GAAe,YAArBD,EACR,OAAO,SAACpD,GAAD,QACLC,2BAA4B6E,EAAAA,EAAAA,KAAoB,SAAAnE,GAAG,MAAK,CAAEA,IAAAA,EAAP,IACnDT,qBAAsB0E,EACtBzE,gBAAiB0E,EACjBzE,QAAS,SAACO,GAAD,OAAsBuB,EAAAA,GAAAA,UAAiBvB,EAAvC,EACTN,SAAU,SAACM,GAAD,OAAsBoE,EAAAA,EAASpE,EAA/B,EACVL,MAAO8C,EAAE,iCACL9D,GAEP,CAMM,SAAS0F,EAAT,GAA6H,IAAjFC,EAAgF,EAAhFA,YAAaC,EAAmE,EAAnEA,eAAmB5F,GAAgD,YACzH8D,GAAMC,EAAAA,EAAAA,GAAe,YAArBD,EACR,OAAO,SAACpD,GAAD,QACLC,2BAA4BkF,EAAAA,EAAAA,KAAmB,SAAAxE,GAAG,MAAK,CAAEA,IAAAA,EAAP,IAClDT,qBAAsB+E,EACtB9E,gBAAiB+E,EACjB9E,QAAS,SAACO,GAAD,OAAqBuB,EAAAA,GAAAA,UAAiBvB,EAAtC,EACTN,SAAU,SAACM,GAAD,OAAqBoE,EAAAA,EAASpE,EAA9B,EACVL,MAAO8C,EAAE,gCACL9D,GAEP,CAoBD,SAAS8F,EAAT,GAC0C,IADwDnF,EACzD,EADyDA,2BAA4BoF,EACrF,EADqFA,oBAAqBC,EAC1G,EAD0GA,eAAgBlF,EAC1H,EAD0HA,QAASC,EACnI,EADmIA,SAAUC,EAC7I,EAD6IA,MAC7I,IADoJiF,QAAAA,OACpJ,MAD8J,kBAAM,CAAN,EAC9J,MAD2KC,YAAAA,OAC3K,aADgMC,YAAAA,OAChM,MAD8M,GAC9M,EADuOnG,GACvO,EADkNoG,aAClN,aACjCvG,GAAQoB,EAAAA,EAAAA,KAERC,GAAUC,EAAAA,EAAAA,UAAQ,kBACrB+E,EACG,CAAC,CAAE7E,IAAK,GAASL,MAAOmF,IACxB,IACFE,OAAO1F,EAA2BS,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,QAAR,MACtC,CAAED,IAAAA,EAAKL,MAAOF,EAAQO,GAAMC,QAAAA,EADU,IAJlB,GAMjB,CAACX,EAA4BG,EAASqF,EAAaD,IAE1D,OAAO,SAAC3E,EAAA,GAAD,QACLC,eAAa,EACbN,QAASA,EACToF,UAAWP,OAAsB1C,EAAY,GAC7C3D,MAAO,CAAE2B,IAAK0E,EAAqB/E,MAAOF,EAAQiF,IAClDpE,SAAU,SAAC4E,EAAOC,EAAUC,GAAlB,OAA6C,WAAfF,EAAM7D,MAAgC,UAAX+D,IAAuBT,EAAeQ,EAAWA,EAASnF,IAAM,GAAzH,EACVS,eAAgB,SAACC,GAAD,OAAYA,EAAOf,MAAQe,EAAOf,MAAQmF,CAA1C,EAChBnE,qBAAsB,SAACD,EAAQrC,GAAT,OAAmBqC,EAAOV,MAAQ3B,EAAM2B,GAAxC,EACtBqF,kBAAmB,SAAA3E,GAAM,OAAIkE,EAAQlE,EAAOV,IAAnB,EACzBY,YAAa,SAACjC,GAAD,OAAW,SAAC,KAAD,kBAClBA,GADkB,IAEtBgB,MAAOA,EACP2F,eAAgB5F,EAASgF,GACzBa,WAAUb,IAJC,EAMbpD,aAAc,SAAC3C,EAAO+B,GAAR,OACZ,SAACtC,EAAD,CAEEC,MAAOqC,EAAOV,IACd1B,MAAOoB,EAASgB,EAAOV,KACvBzB,KAAMmC,EAAOf,MACbnB,MAAOA,EACPC,WAAYiG,IAAwBhE,EAAOV,IAC3CrB,MAAOA,GANF+B,EAAOV,IAFF,GAWVrB,GAEP,CAWM,SAAS6G,EAAT,GAA+H,IAAtFC,EAAqF,EAArFA,UAAWC,EAA0E,EAA1EA,aAA0E,IAA5D/F,MAAAA,OAA4D,MAApD,GAAoD,EAA7ChB,GAA6C,YAC7H2D,GAAiBC,EAAAA,EAAAA,IAAW,kBAAMC,EAAAA,EAAAA,MAAN,GAA4B,IACtDC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,WAAY,sBAAlCD,EAER,GADA9C,EAAQA,GAAgB8C,EAAE,oCACrBH,EAAgB,OAAO,KAE5B,IAAMK,EAA6BC,OAAOC,QAAQL,EAAAA,EAAAA,kBAAgCF,IAC/EQ,SAAQ,+BAAEC,EAAF,iBAAyBhD,KAAI,SAAAiD,GAAG,MAAK,CAAEhD,IAAKgD,EAAK/C,SAAU8C,EAA3B,GAAhC,IACRE,KAAKC,GAER,OAAO,SAACuB,GAAD,QACLnF,2BAA4BqD,EAC5B+B,oBAAqBe,EACrBd,eAAgBe,EAChBjG,QAAS,SAACO,GAAD,OAA8BA,GAAOyC,EAAE,qBAAD,OAAsBzC,GAA5D,EACTN,SAAU,SAACM,GAAD,OAA8BA,EAAMsC,EAAetC,GAAKmD,SAAU,uBAAlE,EACVxD,MAAOA,EACPyD,QAAS,SAAC1C,GAAD,mCAAYA,EAAOT,eAAnB,aAAY,EAAgBoD,kBAA5B,QAA0C,EAA1C,EACTC,YAAa,SAACzC,GAAD,OAA2CA,EAAO0C,QAAS,UAACC,EAAA,EAAD,CAAyBC,UAAWC,EAAAA,EAApC,WACtE,UAACC,EAAA,EAAD,CAA6CC,GAAI,CAAEC,IAAK,QAAxD,UACGhD,EAAO0C,MADV,KACiB,SAAC,IAAD,CAAcO,OAAQjD,EAAO0C,UAD9C,UAAuB1C,EAAO0C,MAA9B,WAGC1C,EAAOkD,WAJyElD,EAAO0C,MAA7E,GAMT5E,GAEP,CAED,SAASuE,EAAoByC,EAAqDC,GAChF,GAAID,EAAE1F,QAAU2F,EAAE3F,QAChB,OAAQ,EAEV,GAAI0F,EAAE1F,QAAU2F,EAAE3F,QAChB,OAAO,EAGT,IAAM4F,EAAQC,EAAAA,EAAAA,EAAA,4BAA4BH,EAAE3F,MACtC+F,EAAQD,EAAAA,EAAAA,EAAA,4BAA4BF,EAAE5F,MAC5C,OAAI6F,EAAQE,GACF,EAENF,EAAQE,EACH,EAGF,CACR,C,yIC3Pc,SAASC,EAAT,GASX,IAT0CC,EAS3C,EAT2CA,SAAUC,EASrD,EATqDA,UAAWC,EAShE,EATgEA,OAAQC,EASxE,EATwEA,QAASC,EASjF,EATiFA,QASjF,IAT0FC,KAAAA,OAS1F,aATwGC,SAAAA,OASxG,aAT0HC,cAAAA,OAS1H,SACD,GAAkCC,EAAAA,EAAAA,UAASR,GAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KACA,GAAoCF,EAAAA,EAAAA,UAASP,GAA7C,eAAOU,EAAP,KAAmBC,EAAnB,KACMC,GAAYC,EAAAA,EAAAA,cAChB,SAACC,EAAY3I,GACX,GAAoB,iBAATA,EAAmB,MAAM,IAAI4I,UACxC,cAAe5I,EAAf,GAAO6I,EAAP,KAAUC,EAAV,KACAR,EAAaO,GACbL,EAAcM,EACf,GACD,CAACR,EAAcE,IAIjB,OAHAO,EAAAA,EAAAA,YAAU,kBAAMT,EAAaV,EAAnB,GAA8B,CAACU,EAAcV,KAEvDmB,EAAAA,EAAAA,YAAU,kBAAMP,EAAcX,EAApB,GAAgC,CAACW,EAAeX,KACnD,UAAC,IAAD,CAAMtC,GAAI,CAAEyD,MAAO,OAAQC,QAAS,OAAQC,WAAY,SAAUC,QAASlB,EAAO,mBAAqB,qBAAvG,WACL,SAAC,KAAD,CACEjI,MAAOqI,EACPpG,SAAU,SAAAmH,GAAG,OAAItB,GAAOuB,EAAAA,EAAAA,IAAMD,EAAK,EAAGvB,GAAzB,EACbtC,GAAI,CAAE+D,GAAI,EAAGC,GAAIpB,EAAgB,OAAIxE,EAAWqF,MAAOb,EAAgB,IAAM,IAC7EqB,WAAY,CAAEjE,GAAI,CAAEkE,UAAWtB,EAAgB,QAAU,WACzDlB,eAAgBkB,EAAgB,eAAYxE,EAC5CuE,SAAUA,KAEZ,SAAC,KAAD,CAAQ3C,GAAI,CAAEyD,MAAO,IAAKU,SAAU,EAAGC,GAAI,GACzCC,aAAc,iBAAM,qBAAN,EACd5J,MAAO,CAACqI,EAAWE,GACnBtG,SAAUwG,EACVoB,kBAAmB,SAAClB,EAAG3I,GAAJ,OAAcgI,EAAQhI,EAAM,GAAIA,EAAM,GAAtC,EACnB8J,kBAAkB,OAClBC,IAAK,EAAGC,IAAK,GAAIC,KAAM,EAAGC,OAAK,EAC/BhC,SAAUA,KAEZ,SAAC,KAAD,CACElI,MAAOuI,EACPtG,SAAU,SAAAmH,GAAG,OAAIrB,GAAQsB,EAAAA,EAAAA,IAAMD,EAAKxB,EAAU,IAAjC,EACbrC,GAAI,CAAE+D,GAAI,EAAGN,MAAO,IACpBQ,WAAY,CAAEjE,GAAI,CAAEkE,UAAW,WAC/BvB,SAAUA,MAGf,C,6FCpDc,SAASiC,EAAT,GAA0H,IAA9FC,EAA6F,EAA7FA,OAAQC,EAAqF,EAArFA,MAAOC,EAA8E,EAA9EA,OACxD,OAAO,UAAC,IAAD,CAAKrB,QAAQ,OAAOsB,IAAK,EAAGC,EAAG,EAAGtB,WAAW,SAA7C,UACJkB,GACD,SAAC,IAAD,CAAY1H,QAAQ,YAAY6C,GAAI,CAAEmE,SAAU,GAAhD,SAAsDW,IACrDC,IAAU,SAAC,IAAD,CAAY5H,QAAQ,UAApB,SAA+B4H,MAE7C,C,uTCOc,SAASG,EAAT,GAA4F,IAA7DC,EAA4D,EAA5DA,YAA4D,IAA/CxC,SAAAA,OAA+C,SACxG,OAA+C,IAA3C3D,OAAOoG,KAAKD,EAAYE,QAAQ7H,QAAgB,SAAU2H,GACrD,SAACG,EAAD,CAA2BH,YAAaA,EAAaxC,SAAUA,IAC7D,SAAUwC,GACZ,SAACI,EAAD,CAA8BJ,YAAaA,EAAaxC,SAAUA,KAElE,SAAC6C,EAAD,CAA6BL,YAAaA,EAAaxC,SAAUA,GAE3E,CAKD,SAAS2C,EAAT,GAA+F,IAA1DH,EAAyD,EAAzDA,YAAaxC,EAA4C,EAA5CA,SAChD,GAAyC8C,EAAAA,EAAAA,YAAWC,EAAAA,GAA5CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,kBACXC,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFE,GAAiB5C,EAAAA,EAAAA,cAAY,SAACvG,GAClC,IAAMoJ,GAAoBC,EAAAA,EAAAA,IAAUN,EAAUR,aAC1CvI,GACFsJ,EAAAA,EAAAA,IAAkBF,EAAmBb,EAAYgB,KAAMvJ,IAEvDwJ,EAAAA,EAAAA,IAAeJ,EAAmBb,EAAYgB,MAEhDP,EAAkB,CAAET,YAAaa,GAClC,GAAE,CAACb,EAAaQ,EAAWC,IAEtBS,EAAmBR,EAAKS,IAAInB,EAAY1K,OAAOA,MACrD,UAAuBuE,OAAOC,QAAQkG,EAAYE,QAAQ,GAA1D,GAAOkB,EAAP,KACMC,EAAQC,EADd,KAC+BC,MACzBC,EAAWC,EAAYzB,EAAYuB,MAEzC,OAAO,UAACG,EAAA,EAAD,CAAQC,WAAS,EAACC,KAAK,QAAQ/G,GAAI,CAAEgH,aAAc,GAAK3J,MAAOgJ,EAAmB,UAAY,UAAWY,QAAS,kBAAMlB,EAAeM,OAAmBjI,EAAYmI,EAApD,EAA+D5D,SAAUA,EAAUuE,UAAWb,GAAmB,SAACc,EAAA,EAAD,KAAe,SAACC,EAAA,EAAD,IAAlP,UACJT,EADI,IACOH,IAEf,CAKD,SAASjB,EAAT,GAAqG,IAA7DJ,EAA4D,EAA5DA,YAAaxC,EAA+C,EAA/CA,SACnD,GAAyC8C,EAAAA,EAAAA,YAAWC,EAAAA,GAA5CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,kBACXC,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFE,GAAiB5C,EAAAA,EAAAA,cAAY,SAACvG,GAClC,IAAMoJ,GAAoBC,EAAAA,EAAAA,IAAUN,EAAUR,aAC1CvI,GACFsJ,EAAAA,EAAAA,IAAkBF,EAAmBb,EAAYgB,KAAMvJ,IAEvDwJ,EAAAA,EAAAA,IAAeJ,EAAmBb,EAAYgB,MAEhDP,EAAkB,CAAET,YAAaa,GAClC,GAAE,CAACb,EAAaQ,EAAWC,IAEtBS,EAAmBR,EAAKS,IAAInB,EAAY1K,OAAOA,MAC/C4M,EAAQhB,EAAmBlB,EAAYE,OAAOgB,QAAoBjI,EAClEoI,EAAQa,EAAQZ,EAAcY,EAAMX,OAAQ,SAACY,EAAA,EAAD,CAASjK,MAAM,YAAf,wBAC5CsJ,EAAWC,EAAYzB,EAAYuB,MAEzC,OAAO,UAACa,EAAA,EAAD,CAAgBT,WAAS,EAACC,KAAK,QAAQ/G,GAAI,CAAEgH,aAAc,GAAK3J,MAAOgJ,EAAmB,UAAY,UAAWvB,OAAO,4BAAO6B,EAAP,IAAkBH,KAAe7D,SAAUA,EAAnK,WACL,SAAC3H,EAAA,EAAD,CAAUiM,QAAS,kBAAMlB,GAAN,EAAwBjI,UAAWuJ,EAAO1E,UAAW0E,EAAxE,UACE,4CAEF,SAACG,EAAA,EAAD,IACCxI,OAAOC,QAAQkG,EAAYE,QAAQlJ,KAAI,+BAAEoK,EAAF,KAAYkB,EAAZ,YACtC,SAACzM,EAAA,EAAD,CAAyBiM,QAAS,kBAAMlB,EAAeQ,EAArB,EAAgCzI,SAAUuI,IAAqBE,EAAU5D,SAAU0D,IAAqBE,EAA1I,SAAsJkB,EAAGf,MAA1IH,EADuB,MAG3C,CAKD,SAASf,EAAT,GAAmG,IAA5DL,EAA2D,EAA3DA,YAAaxC,EAA8C,EAA9CA,SAClD,GAAyC8C,EAAAA,EAAAA,YAAWC,EAAAA,GAA5CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,kBACXC,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFE,GAAiB5C,EAAAA,EAAAA,cAAY,SAACgD,EAAyBvJ,GAC3D,IAAMoJ,GAAoBC,EAAAA,EAAAA,IAAUN,EAAUR,aAC1CvI,GACFsJ,EAAAA,EAAAA,IAAkBF,EAAmBG,EAAMvJ,IAE3CwJ,EAAAA,EAAAA,IAAeJ,EAAmBG,GAEpCP,EAAkB,CAAET,YAAaa,GAClC,GAAE,CAACL,EAAWC,IAEf,OAAO,SAAC8B,EAAA,EAAD,CAAaZ,WAAS,EAACa,YAAY,WAAWC,kBAAgB,EAACvK,MAAM,YAArE,SACJ2B,OAAOC,QAAQkG,EAAYE,QAAQlJ,KAAI,YAAqB,IAAD,eAAlBoK,EAAkB,KAARkB,EAAQ,KACpDpB,EAAmBR,EAAKS,IAAImB,EAAGhN,OAAOA,MACtCI,EAAawL,IAAqBE,EACxC,OAAO,SAACM,EAAA,EAAD,CACLxJ,MAAOxC,EAAa,UAAY,UAChC8H,SAAUA,EACVmE,WAAS,EAETG,QAAS,kBAAMlB,EAAe0B,EAAGtB,KAAME,OAAmBjI,EAAYmI,EAA7D,EACTQ,KAAK,QACLG,UAAWrM,GAAa,SAACsM,EAAA,EAAD,KAAe,SAACC,EAAA,EAAD,IACvCpH,GAAI,CAAEgH,aAAc,GARf,SAUJJ,EAAYa,EAAGf,OANXH,EAQR,KAEJ,CAED,SAASsB,EAAUC,GACjB,MAAwB,kBAATA,CAChB,CAGD,SAASrB,EAAcsB,GACrB,IAAKA,EAAW,MAAO,GAEvB,IAAIC,EAAmC,UACnCC,EAAYF,EAOhB,OANIA,GAAaF,EAAUE,IACrBA,EAAUhN,MAAMsC,QAClB2K,EAAaD,EAAUhN,MAAMsC,MAC7B4K,GAAY,0BAAOF,EAAUhN,MAAMoF,aAGhC,SAACmH,EAAA,EAAD,CAAStH,GAAI,CAAEkI,GAAI,IAAO7K,MAAO2K,EAAjC,SAA8CC,GACtD,CAGD,SAASrB,EAAYD,GACnB,GAAIkB,EAAUlB,GAAW,CACvB,IAAMvK,EAAMuK,EAAS5L,MAAMoN,MACrBC,EAAKzB,EAAS5L,MAAMqN,GACpBC,EAAS1B,EAAS5L,MAAMsN,OAC9B,OAAO,SAACC,EAAA,EAAD,CAAWF,GAAIA,EAAID,MAAO/L,EAAKiM,OAAQA,EAAQE,UAAQ,GAC/D,CACD,OAAO5B,CACR,CClIc,SAAS6B,EAAT,GAA6G,IAEtHC,EAFuCtD,EAA8E,EAA9EA,YAA8E,IAAjEuD,WAAAA,OAAiE,aAA7CC,SAAAA,OAA6C,SACjH9C,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KAER,GAAI,SAAUV,EAAa,CAAC,IAAD,EACnByD,EAAU/C,EAAKS,IAAInB,EAAY1K,OAAOA,MAC5CgO,EAASG,IAAO,UAAIzD,EAAYE,OAAOuD,UAAvB,aAAI,EAA6BH,OAClD,MACCA,EAASzJ,OAAOqJ,OAAOlD,EAAYE,QAAQnG,SAAQ,SAAAmI,GAEjD,OADiBxB,EAAKS,IAAIe,EAAM5M,OAAOA,MACrB4M,EAAMoB,OAAS,EAClC,IAEH,OAAO,UAACI,EAAA,EAAD,aACHC,EAAAA,EAAAA,IAAWJ,EAAYvD,KAAgB,SAAC4D,EAAD,CAAeC,OAAQ7D,EAAY6D,OAAQL,SAAUA,KAC9F,SAACM,EAAA,EAAD,CAAajJ,GAAI,CAAEiF,EAAG,EAAG,eAAgB,CAAEiE,GAAI,IAA/C,UACE,SAAChE,EAAD,CAAqBC,YAAaA,MAEnCsD,IAAU,SAAC,KAAD,CAAeA,OAAQA,MAErC,C,eCjBc,SAASU,EAAT,GAAkH,IAAvFC,EAAsF,EAAtFA,SAAUC,EAA4E,EAA5EA,aAA4E,IAA9DV,SAAAA,OAA8D,aAA5CD,WAAAA,OAA4C,SACtH7C,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACR,IAAKuD,EAAS5L,OAAQ,OAAO,KAC7B,IAAM8L,EAAkBF,EAASjN,KAAI,SAACoN,EAAGC,GAEvC,OAAID,EAAEE,UAAY5D,EAAKS,IAAIiD,EAAEE,SAAShP,OAElC4O,IAAiBE,EAAEG,SAF6B,MAG7C,SAACC,EAAD,CAAgBC,QAASL,EAAWZ,SAAUA,EAAUD,WAAYA,GAAnCc,EACzC,IAAEK,QAAO,SAAAN,GAAC,OAAIA,CAAJ,IACX,OAAKD,EAAgB9L,QACd,SAACsC,EAAA,EAAD,CAAK4D,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAhD,SAAoDsE,IADvB,IAErC,CAED,SAASK,EAAT,GAA8L,IAApKC,EAAmK,EAAnKA,QAAmK,IAA1JjB,SAAAA,OAA0J,aAAxID,WAAAA,OAAwI,SAC3L,MAAI,WAAYkB,GACP,SAACG,EAAD,CAAsBH,QAASA,EAASjB,SAAUA,EAAUD,WAAYA,IACtE,WAAYkB,GACd,SAACpB,EAAD,CAAoBrD,YAAayE,EAASjB,SAAUA,EAAUD,WAAYA,KAE1E,SAACsB,EAAD,CAAoBJ,QAASA,GAEvC,CAED,SAASG,EAAT,GAAoL,IAApJH,EAAmJ,EAAnJA,QAASjB,EAA0I,EAA1IA,SAAUD,EAAgI,EAAhIA,WACjD,OAAO,UAACG,EAAA,EAAD,aACHC,EAAAA,EAAAA,IAAWJ,EAAYkB,IAAYA,EAAQZ,SAC3C,SAACD,EAAD,CAAeC,OAAQY,EAAQZ,OAAQL,SAAUA,EAAUsB,YAAuC,IAA1BL,EAAQnB,OAAOjL,UAEzF,SAAC,KAAD,CAAeiL,OAAQmB,EAAQnB,WAElC,CAED,SAASuB,EAAT,GAAsE,IAAxCJ,EAAuC,EAAvCA,QACpB/D,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACR,OAAO,0BACJiD,EAAAA,EAAAA,IAAWc,EAAQjP,KAAMkL,IAE7B,CAEM,SAASkD,EAAT,GAA6K,IAApJC,EAAmJ,EAAnJA,OAAQL,EAA2I,EAA3IA,SAAUsB,EAAiI,EAAjIA,YACxCpE,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFvH,EAAwB0K,EAAxB1K,KAAMwG,EAAkBkE,EAAlBlE,MAAOC,EAAWiE,EAAXjE,OACnBzG,GAAOwK,EAAAA,EAAAA,IAAWxK,EAAMuH,GACxB,IAAMqE,GAAevB,IAAYG,EAAAA,EAAAA,IAAWE,EAAOkB,YAAarE,GAC1DsE,EAAexB,EAAW7D,GAAQ,4BAAOA,EAAP,KAAc,SAACsF,EAAA,EAAD,CAAatF,OAAO,SAACuF,EAAA,EAAD,UAAaH,SACvF,OAAO,iCACL,SAACtF,EAAA,EAAD,CAAkBC,OAAQvG,EAAMwG,MAAOqF,EAAcpF,OAAQA,KAC3DkF,IAAe,SAACzC,EAAA,EAAD,MAEpB,C,8LC3Dc,SAAS8C,EAAT,GAAsM,IAA/KC,EAA8K,EAA9KA,MAAOC,EAAuK,EAAvKA,UAAW/H,EAA4J,EAA5JA,QAA4J,IAAnJgI,OAAAA,OAAmJ,SAC1M5L,GAAMC,EAAAA,EAAAA,GAAe,MAArBD,EACF6L,EAAqBD,EAASE,EAAAA,GAAuBC,EAAAA,GACrDC,GAAW1H,EAAAA,EAAAA,cAAY,WAAwB,IAAvBoH,EAAsB,uDAAN,EAC5CA,GAAQzG,EAAAA,EAAAA,IAAMyG,EAAO,EAAGE,EAASK,EAAAA,GAAcC,EAAAA,IAC/C,IAAMP,EAAYE,EAAmBM,WAAU,SAAAC,GAAO,OAAIV,GAASU,CAAb,IACtDxI,EAAQ,CAAE8H,MAAAA,EAAOC,UAAAA,GAClB,GAAE,CAAC/H,EAASiI,EAAoBD,IAC3BS,GAAe/H,EAAAA,EAAAA,cAAY,WAC/B,IAAMgI,EAAiBT,EAAmBM,WAAU,SAAAC,GAAO,OAAc,KAAVV,GAAgBA,IAAUU,CAA9B,IACzBxI,EAA9B+H,IAAcW,EAAwB,CAAEX,UAAYA,EAAY,GACvD,CAAEA,UAAWW,GAC3B,GAAE,CAAC1I,EAASiI,EAAoBF,EAAWD,IAC5C,OAAO,UAAC,IAAD,CAAavK,GAAI,CAAE4D,QAAS,SAAA/E,GAAC,OAAIA,EAAEvB,QAAQ8N,YAAYC,IAA1B,GAA7B,WACL,SAAC,KAAD,WACE,SAAC,KAAD,CAAmB3O,SAAUmO,EAAUpQ,MAAO8P,EAC5C7I,eAAe,OACfuC,WAAY,CAAEO,IAAK,EAAGC,IAAK,GAAIzE,GAAI,CAAEkE,UAAW,SAAUT,MAAO,QACjEzD,GAAI,CAAEsL,OAAQ,OAAQtH,GAAI,QAE9B,SAAC,IAAD,CAAQhE,GAAI,CAAEgE,GAAI,EAAGuH,WAAY,UAAY5I,WAAY8H,EAASe,EAAAA,GAAoBC,EAAAA,IAAgBlB,GAAQtD,QAASiE,EAAvH,UAAqI,mCAAWN,EAAAA,GAAkBJ,SAClK,SAAC,IAAD,CAAgB1F,MAAOjG,EAAE,eAAgBmB,GAAI,CAAEmE,SAAU,GAAzD,UACG,OAAKsG,EAASiB,EAAAA,GAAqBC,EAAAA,IAAkBxP,KAAI,YAAe,IAAD,eAAZyP,EAAY,KAARC,EAAQ,KAChE/N,EAAW8N,IAAOrB,GAASsB,IAAOrB,EACxC,OAAO,SAAC,IAAD,CAA8B1M,SAAUA,EAAU6E,SAAU7E,EAAUmJ,QAAS,kBAAMxE,EAAQ,CAAE8H,MAAOqB,EAAIpB,UAAWqB,GAAtC,EAA/E,SACJD,IAAOlB,EAAmBmB,GAA1B,cAAuCD,GAAvC,cAAqDA,EAArD,YAA2DlB,EAAmBmB,KAD1E,UAAkBD,EAAlB,YAAwBC,GAGhC,QAGN,C,kHClCc,SAASC,EAAT,GAAgI,IAAlGC,EAAiG,EAAjGA,WAAYC,EAAqF,EAArFA,cAC/CnN,GAAMC,EAAAA,EAAAA,GAAe,MAArBD,EACR,OAAO,SAAC,IAAD,CAAgBiG,MAAOjG,EAAE,aAAc,CAAEpE,MAAOsR,IAAhD,SACJE,EAAAA,EAAAA,KAAkB,SAAAC,GAAC,OAClB,SAAC,IAAD,CAAkBjF,QAAS,kBAAM+E,EAAcE,EAApB,EAAwBpO,SAAUiO,IAAeG,EAAGvJ,SAAUoJ,IAAeG,EAAxG,SACGrN,EAAE,aAAc,CAAEpE,MAAOyR,KADbA,EADG,KAKvB,C,4ICXKC,GAAiBC,EAAAA,EAAAA,IAAOvF,EAAAA,EAAPuF,EAAe,gBAAGxR,EAAH,EAAGA,MAAH,MAAgB,CACpD,iBAAkB,CAChByR,gBAAiBzR,EAAM0C,QAAQC,QAAQmF,KACvCrF,MAAOzC,EAAM0C,QAAQ3C,KAAK2R,WAHQ,IAOvB,SAASC,EAAT,GAAoE,IAA9CpM,EAA6C,EAA7CA,SAAuBpF,GAAsB,EAAnC4H,UAAmC,aAChF,OAAO,SAACwJ,GAAD,kBAAoBpR,GAApB,IAA2B4H,UAAQ,EAAnC,SACJxC,IAEJ,C,6XCEYqM,GAAeC,EAAAA,EAAAA,eAAc,CAAC,G,qJCRrCC,EAA0BC,EAAAA,MAAW,kBAAM,6BAAN,IAE5B,SAASC,IAAsB,IAAD,EACnC/N,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACAgO,GAAmBpH,EAAAA,EAAAA,YAAWC,EAAAA,GAA9BmH,eACR,GAAkChK,EAAAA,EAAAA,WAAS,GAA3C,eAAOiK,EAAP,KAAkBC,EAAlB,KACMC,GAAeC,EAAAA,EAAAA,KACrB,OAAO,iCACL,SAAC,EAAAC,SAAD,CAAUC,UAAU,EAApB,UACE,SAACT,EAAD,CAAyBU,KAAMN,EAAWO,OAAQ,kBAAMN,GAAa,EAAnB,EAA2BO,SAAUN,OAEzF,SAACnG,EAAA,EAAD,CAAQxJ,MAAM,OAAO4J,QAAS,kBAAM8F,GAAa,EAAnB,EAA0B7F,WAAW,SAACqG,EAAA,EAAD,CAAWC,IAAG,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAgBY,eAAnG,0BAAuHZ,QAAvH,IAAuHA,OAAvH,EAAuHA,EAAgBnG,YAAvI,QAA+I7H,EAAE,uBAEpJ,C,kKCCc,SAAS6O,KACtB,IAAQC,GAAclI,EAAAA,EAAAA,YAAWmI,EAAAA,GAAzBD,UACAE,GAAmBpI,EAAAA,EAAAA,YAAWmI,EAAAA,GAA9BC,eACFC,GAAiB3K,EAAAA,EAAAA,cAAY,yBAAM0K,QAAN,IAAMA,OAAN,EAAMA,OAAiBzP,OAAWA,EAAlC,GAA8C,CAACyP,IAClF,OAAO,SAACE,GAAA,EAAD,CAAcC,OAAQL,EAAWM,QAASH,EAA1C,UACL,UAACjF,EAAA,EAAD,YACE,SAACqF,EAAA,EAAD,CAAYpJ,MAAM,0BAA0BC,QAAQ,SAACoJ,EAAA,EAAD,CAAalH,QAAS6G,OAC1E,SAAC7E,EAAA,EAAD,CAAajJ,GAAI,CAAEoO,GAAI,GAAvB,UACE,SAACC,GAAD,UAIP,CAED,SAASA,KACP,IAAQxI,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACMyI,GAAgB7I,EAAAA,EAAAA,YAAWmI,EAAAA,GAAjC/H,KACFuD,GAAWmF,EAAAA,GAAAA,GAAkB,OAACD,QAAD,IAACA,EAAAA,EAAezI,GACnD,OAAO,SAAC,EAAAqH,SAAD,CAAUC,UAAU,SAACqB,EAAA,EAAD,CAAUrR,QAAQ,cAAcsG,MAAM,OAAO6H,OAAQ,MAAzE,UACL,SAACxL,EAAA,EAAD,CAAKE,GAAI,CAAEyO,IAAK,EAAGC,IAAK,GAAxB,SACGtF,EAASjN,KAAI,+BAAEC,EAAF,KAAOuS,EAAP,YACZ,SAACC,GAAD,CAAuBC,UAAWF,EAAOG,WAAY1S,GAAnCA,EADN,OAInB,CACD,SAASwS,GAAT,GAA6G,IAAtFE,EAAqF,EAArFA,WAAYD,EAAyE,EAAzEA,UACzBhJ,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACAkJ,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACMT,GAAgB7I,EAAAA,EAAAA,YAAWmI,EAAAA,GAAjC/H,KACFmD,GAASrK,EAAAA,EAAAA,IAAW,kBAAMsQ,EAAAA,GAAAA,GAAgB,OAACX,QAAD,IAACA,EAAAA,EAAezI,EAAMiJ,EAAYC,EAAxD,GAAmE,CAACT,EAAazI,EAAMiJ,IACjH,IAAK9F,EAAQ,OAAO,KACpB,GAAIhK,OAAOC,QAAQ4P,GAAWK,OAAM,gDAAoBC,OAApB,IAA8B,OAAO,KACzE,IAAQrK,EAAwBkE,EAAxBlE,MAAOxG,EAAiB0K,EAAjB1K,KAAMyG,EAAWiE,EAAXjE,OACrB,OAAO,UAACqK,EAAA,EAAD,CAAWpP,GAAI,CAAE0O,GAAI,GAArB,WACL,SAAC9J,GAAA,EAAD,CAAkBC,OAAQvG,IAAQ,SAAC+Q,GAAA,EAAD,CAAStI,KAAM,EAAG/G,GAAI,CAAEsP,GAAI,GAAK9B,IAAKlP,IAAUwG,MAAOA,EAAOC,OAAQA,IAAU,SAACuC,EAAA,EAAD,UAAUvC,OAC5H,SAACyC,EAAA,EAAD,KACA,SAACyB,EAAA,EAAD,UACGjK,OAAOC,QAAQ4P,GAAW1S,KAAI,+BAAEC,EAAF,KAAOmT,EAAP,YAAkBA,EAAKJ,UAAW,SAACK,GAAD,CAA4BD,KAAMA,GAAXnT,EAAzD,QAGpC,CACD,SAASoT,GAAT,GAA4D,IAAhCD,EAA+B,EAA/BA,KACZE,GAAgBhK,EAAAA,EAAAA,YAAWmI,EAAAA,GAAjC2B,KACR,GAAgC1M,EAAAA,EAAAA,WAAS,GAAzC,eAAO6M,EAAP,KAAiBC,EAAjB,KACMC,GAAezM,EAAAA,EAAAA,cAAY,SAACC,EAAyByM,GAA1B,OAAkDF,EAAYE,EAA9D,GAA2E,IACtGC,GAAYC,EAAAA,EAAAA,UAMlB,OAJAvM,EAAAA,EAAAA,YAAU,WACJ+L,IAASE,GAAaO,YAAW,iCAAMF,QAAN,IAAMA,GAAN,UAAMA,EAAWG,eAAjB,iBAAM,EAAoBC,sBAA1B,aAAM,SAAqC,CAAEC,SAAU,UAAvD,GAAoE,IAC1G,GAAE,CAACL,EAAWP,EAAME,KAEd,UAACW,EAAA,EAAD,CAAWpQ,GAAI,CAAE4D,QAAS,oBAAsB8L,SAAUH,IAASE,GAAeC,EAAUhT,SAAUkT,EAAcS,IAAKP,EAAzH,WACL,UAACQ,EAAA,EAAD,CAAkBC,YAAY,SAACC,EAAA,EAAD,IAA9B,WACE,UAACnG,EAAA,EAAD,YAAY,SAAC,KAAD,CAAWhN,MAAOkS,EAAKkB,KAAKtT,QAA5B,SAAsCoS,EAAKkB,KAAK/J,OAA5D,KAA8E,6BAASgK,EAAAA,GAAAA,GAASnB,QAC/FoB,EAAAA,GAAAA,SAAyBpB,EAAKkB,KAAKtT,WAAmB,SAAC2C,EAAA,EAAD,CAAKE,GAAI,CAAE0D,QAAS,eAAgBwE,GAAI,OAAQuG,GAAI,GAApD,UACrD,SAACmC,GAAA,EAAD,CAAqBC,SAAUtB,EAAKkB,KAAKtT,QAA2B2T,QAASvB,EAAKkB,KAAKM,mBAG3F,SAACC,GAAA,EAAD,UACGzB,EAAK0B,SAAS9U,KAAI,SAAC+U,EAAS1H,GAAV,OAAgB,SAACa,EAAA,EAAD,CAAoBxK,UAAU,MAA9B,SAAqCqR,GAApB1H,EAAjC,QAGxB,C,uMCnED,IAXqB4C,EAAAA,GAAAA,KAAO,SAACrR,GACEA,EAArBoW,OAAR,IAAmBC,GAAnB,QAA6BrW,EAA7B,IACA,OAAO,SAACsW,GAAA,GAAD,WAAgBD,GACxB,GAHoBhF,EAGlB,gBAAGxR,EAAH,EAAGA,MAAH,MAAwB,CACzB0W,UADC,EAAUH,OAC2B,iBAAjB,eACrBI,WAAY,OACZC,WAAa5W,EAAc6W,YAAYC,OAAO,YAAa,CACzDC,SAAW/W,EAAc6W,YAAYE,SAASC,WAJ/C,I,0JCSGC,IAAkBzF,EAAAA,GAAAA,IAAO1E,GAAAA,EAAP0E,CAAoB,CAC1C1I,QAAS,SAGI,SAASoO,GAAT,GAAuK,IAAlJpL,EAAiJ,EAAjJA,KAAMvG,EAA2I,EAA3IA,SAAU1F,EAAiI,EAAjIA,MAAOsX,EAA0H,EAA1HA,YAA0H,IAA7GC,aAAAA,OAA6G,MAA9F,EAA8F,EAA3FC,EAA2F,EAA3FA,cAA2F,IAA5EC,QAAAA,OAA4E,aAA3DvP,SAAAA,OAA2D,SAAzCwP,EAAyC,EAAzCA,QAAYC,GAA6B,cAEnL,OAAO,UAACP,IAAD,oBAAqBO,GAArB,cACJjS,GACD,SAACoM,GAAA,EAAD,CAAYvM,GAAI,CAAE+D,GAAI,GAAtB,SACG2C,KAEH,SAAC2L,GAAA,GAAD,CAAqCrS,GAAI,CAAEsS,UAAW,OAAQnO,SAAU,GAAxE,UACE,SAACkO,GAAA,GAAD,CACErS,GAAI,CAAE+D,GAAI,GACVE,WAAY,CACVjE,GAAI,CAAEkE,UAAW,UAEnBqO,MAAOL,EACPH,YAAaA,EACbtX,MAAOA,EACPiC,SAAUuV,EACVtP,SAAUA,EACV6P,aAAcN,EAAU,SAAM9T,OAGlC,SAACyI,EAAA,EAAD,CAAQ7G,GAAI,CAAEyS,WAAY,GAAK1L,KAAK,QAAQ1J,MAAM,QAAQ4J,QAAS,kBAAMkL,EAAUA,IAAYF,EAAcD,EAA1C,EAAyDrP,SAAUA,GAAYlI,IAAUuX,EAA5J,UACE,SAACU,GAAA,EAAD,SAGL,CC9BM,SAASC,KACd,IAAQ9T,GAAMC,EAAAA,EAAAA,GAAe,MAArBD,EACA+G,GAAsBH,EAAAA,EAAAA,YAAWC,EAAAA,GAAjCE,kBACAC,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACR,GAAgChD,EAAAA,EAAAA,WAAS,GAAzC,eAAO6M,EAAP,KAAiBkD,EAAjB,KACMC,GAAS1P,EAAAA,EAAAA,cAAY,kBAAMyP,GAAalD,EAAnB,GAA8B,CAACkD,EAAalD,IACjEoD,EAAWjN,EAAKS,IAAIyM,GAAAA,GAAAA,MAAAA,OACpBC,EAAUnN,EAAKS,IAAIyM,GAAAA,GAAAA,MAAAA,QACnBE,EAAUpN,EAAKS,IAAIyM,GAAAA,GAAAA,MAAAA,QACnBZ,GAAUhP,EAAAA,EAAAA,cAAY,kBAAMyC,EAAkB,CAAEsN,cAAe,CAAC,GAA1C,GAAgD,CAACtN,IAE7E,OAAO,UAACwJ,EAAA,EAAD,YACL,UAACnG,EAAA,EAAD,CAAajJ,GAAI,CAAE0D,QAAS,OAAQsB,IAAK,EAAGrB,WAAY,SAAUwP,SAAU,QAA5E,WACE,SAAC9U,GAAA,EAAD,CAAM0I,KAAK,QAAQ1J,MAAM,UAAUtB,OAAO,4BAAO+W,EAASrC,KAAK/J,KAArB,KAA2B,4BAASoM,EAASrY,aACtFyD,EAAAA,GAAAA,KAAuB,SAAAD,GAAO,OAAI,SAACoM,EAAA,EAAD,WAA2B,SAAC+I,GAAD,CAAcnV,QAASA,KAAjCA,EAArB,KAC/B,UAACoM,EAAA,EAAD,wBAAsBqG,EAAAA,GAAAA,GAASsC,OAC/B,UAAC3I,EAAA,EAAD,0BAAwBqG,EAAAA,GAAAA,GAASuC,OACjC,UAACnT,EAAA,EAAD,CAAKqE,SAAU,EAAGT,QAAQ,OAAO2P,eAAe,WAAWrO,IAAK,EAAhE,WACE,SAAC6B,EAAA,EAAD,CAAQE,KAAK,QAAQ1J,MAAM,QAAQ4J,QAASkL,EAASjL,WAAW,SAACwL,GAAA,EAAD,IAAhE,SAA6E7T,EAA7E,gCACA,SAAC,GAAD,CACEsS,OAAQzB,EACRzI,QAAS4L,EACT,gBAAenD,EACf,aAAW,YACX3I,KAAK,QACL/G,GAAI,CAAEuR,WAAY,GANpB,UAQE,SAACf,EAAA,EAAD,aAIN,SAAC8C,GAAA,EAAD,CAAUC,GAAI7D,EAAU8D,QAAQ,OAAOC,eAAa,EAApD,UACE,SAACxK,EAAA,EAAD,CAAajJ,GAAI,CAAEoO,GAAI,GAAvB,UACE,SAACsF,GAAD,UAIP,CAEM,SAASN,GAAT,GAAoE,IAA5CnV,EAA2C,EAA3CA,QAEvBsR,GADW9J,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACUS,IAAIyM,GAAAA,GAAAA,MAAA,UAAe9U,EAAf,WAEhB0V,GADUC,SAASrE,EAAK9U,QACL,4BAAQ+F,GAAAA,EAASvC,GAAjB,cACvB,4BAAQuC,GAAAA,EAASvC,GAAjB,KAA2B,6BAASyS,EAAAA,GAAAA,GAASnB,QAC/C,OAAO,SAAC,KAAD,CAAWlS,MAAOY,EAAlB,SAA4B0V,GACpC,CAEM,SAASD,GAAT,GAA6E,IAAD,UAArDG,QAAAA,OAAqD,MAA3C,CAAEC,GAAI,GAAIC,GAAI,GAA6B,EACjF,GAA4DtO,EAAAA,EAAAA,YAAWC,EAAAA,GAAlDwN,EAArB,EAAQvN,UAAauN,cAAiBtN,EAAtC,EAAsCA,kBAC9BC,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KAGFmO,EAAI,UAAGd,EAAce,kBAAjB,QAA+BpO,EAAKS,IAAIyM,GAAAA,GAAAA,KAAWtY,MACvDuY,EAAO,UAAGE,EAAcgB,oBAAjB,QAAiC,EACxCjB,EAAO,UAAGC,EAAciB,oBAAjB,QAAiC,EAC9C,OAAO,UAACC,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACL,SAACF,GAAA,IAAD,kBAAMG,MAAI,GAAKV,GAAf,cACE,SAAChN,EAAA,EAAD,CAAQC,WAAS,EAAC9G,GAAI,CAAEsL,OAAQ,QAAUvE,KAAK,QAAQlH,UAAU,IAAIxC,MAAM,UAAUmX,KAAK,2EAA2EC,OAAO,SAASC,IAAI,aAAzL,0FAIF,SAACN,GAAA,IAAD,kBAAMG,MAAI,GAAKV,GAAf,cACE,SAAC/B,GAAD,CACE9R,GAAI,CAAE4D,QAAS,SAAA/E,GAAC,OAAIA,EAAEvB,QAAQqX,aAAatJ,IAA3B,EAAiC5H,MAAO,QACxDiD,MAAM,uBAAI/I,GAAAA,GAAAA,IAAW,gBACrBlD,MAAOuZ,EACPjC,YAAapU,GAAAA,GAAAA,OAAc,cAC3BqU,aAAcnM,EAAKS,IAAIyM,GAAAA,GAAAA,KAAWtY,MAClCwX,cAAe,SAAAxX,GAAK,OAAImL,EAAkB,CAAEnI,KAAM,gBAAiBmX,QAAS,aAAcna,MAAAA,GAAtE,EACpB0X,QAAS,kBAAMvM,EAAkB,CAAEnI,KAAM,gBAAiBmX,QAAS,aAAcna,WAAO2D,GAA/E,OAGZF,EAAAA,GAAAA,KAAuB,SAAA2W,GACtB,IAAMD,EAAO,UAAMC,EAAN,cACPhR,EAAMqP,EAAc0B,GACpBE,EAAkBjR,IAAQkR,OAAOC,UACvC,OAAO,SAACZ,GAAA,IAAD,kBAAMG,MAAI,GAAkBV,GAA5B,cACL,SAAC/B,GAAD,CACE9R,GAAI,CAAE4D,QAAS,SAAA/E,GAAC,OAAIA,EAAEvB,QAAQqX,aAAatJ,IAA3B,EAAiC5H,MAAO,QACxDiD,MAAM,SAAC,KAAD,CAAWrJ,MAAOwX,EAAlB,UAA0B,uBAAIlX,GAAAA,GAAAA,IAAWiX,OAC/Cna,WAAe2D,IAARyF,EAAqBiR,EAAkBG,IAAWpR,EAAO,GAChEkO,YAAa+C,EAAkB,UAAOnX,GAAAA,GAAAA,OAAciX,GACpD5C,aAhCW,GAiCXC,cAAe,SAAAxX,GAAK,OAAImL,EAAkB,CAAEnI,KAAM,gBAAiBmX,QAAAA,EAASna,MAAAA,GAAxD,EACpBkI,SAAUmS,EACV5C,SAAO,EART,UAUE,SAACrL,EAAA,EAAD,CAAQxJ,MAAOwX,EAAQ5N,QAAS,kBAAMrB,EAAkB,CAAEnI,KAAM,gBAAiBmX,QAAAA,EAASna,MAAOqa,EArCtF,GAqCqHC,OAAOC,WAAvG,EAAqH9N,UAAW4N,GAAkB,SAAC3N,GAAA,EAAD,KAAe,SAACC,GAAA,EAAD,IAAjM,0BAXmByN,EAgBxB,KACD,SAACT,GAAA,IAAD,kBAAMG,MAAI,GAAKV,GAAf,cACE,SAAC/B,GAAD,CACE9R,GAAI,CAAE4D,QAAS,SAAA/E,GAAC,OAAIA,EAAEvB,QAAQqX,aAAatJ,IAA3B,EAAiC5H,MAAO,QACxDiD,MAAM,uBAAI/I,GAAAA,GAAAA,IAAW,kBACrBlD,MAAOuY,EACPjB,YAAapU,GAAAA,GAAAA,OAAc,gBAC3BqU,aAAc,EACdC,cAAe,SAAAxX,GAAK,OAAImL,EAAkB,CAAEnI,KAAM,gBAAiBmX,QAAS,eAAgBna,MAAAA,GAAxE,EACpByX,SAAO,QAGX,SAACkC,GAAA,IAAD,kBAAMG,MAAI,GAAKV,GAAf,cACE,SAAC/B,GAAD,CACE9R,GAAI,CAAE4D,QAAS,SAAA/E,GAAC,OAAIA,EAAEvB,QAAQqX,aAAatJ,IAA3B,EAAiC5H,MAAO,QACxDiD,MAAM,uBAAI/I,GAAAA,GAAAA,IAAW,kBACrBlD,MAAOwY,EACPlB,YAAapU,GAAAA,GAAAA,OAAc,gBAC3BqU,aAAc,EACdC,cAAe,SAAAxX,GAAK,OAAImL,EAAkB,CAAEnI,KAAM,gBAAiBmX,QAAS,eAAgBna,MAAAA,GAAxE,EACpByX,SAAO,QAGX,SAACkC,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAf,UACE,mMAGL,C,+BCtHKoB,GAAO,CACXpB,GAAI,EAAGC,GAAI,EAAGoB,GAAI,GAGL,SAASC,GAAT,GAAuC,IAAlBpH,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAChCpP,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACR,OAAO,SAACkP,GAAA,EAAD,CAAcC,KAAMA,EAAMC,QAASA,EAAnC,UACL,UAACpF,EAAA,EAAD,YACE,SAACqF,EAAA,EAAD,CAAYpJ,MAAOjG,EAAF,sCAAqBkG,QAAQ,SAACoJ,EAAA,EAAD,CAAalH,QAASgH,OACpE,SAAChF,EAAA,EAAD,CAAajJ,GAAI,CAAEoO,GAAI,GAAvB,UACE,UAACiH,GAAA,EAAD,CAAOf,QAAS,EAAhB,WACE,SAACgB,GAAD,KACA,SAAC3C,GAAD,KACA,SAAC4C,GAAD,aAIT,CACD,IAAMnQ,IAAI,QAAOoQ,GAAAA,IACXC,GAAc,SAACrS,EAAgBhH,GAAjB,OAAkC,SAACgY,GAAA,GAAD,CAAMG,MAAI,EAAWT,GAAI,EAAzB,SAA6B1Q,GAAbhH,EAAlD,EACpB,SAASkZ,KACP,OAAyD7P,EAAAA,EAAAA,YAAWC,EAAAA,GAA/CgQ,EAArB,EAAQ/P,UAAa+P,WAAc9P,EAAnC,EAAmCA,kBAC7B+P,GAAYxS,EAAAA,EAAAA,cAAY,SAACuS,GAAD,OAAgB9P,EAAkB,CAAE8P,WAAAA,GAApC,GAAmD,CAAC9P,IAClF,OAAO,SAACwJ,EAAA,EAAD,WACL,SAACnG,EAAA,EAAD,CAAajJ,GAAI,CAAE0D,QAAS,QAA5B,UACE,SAAC0Q,GAAA,GAAD,CAAMC,WAAS,EAACuB,QAASV,GAAMlV,GAAI,CAAEoO,GAAI,GAAKkG,QAAS,EAAvD,UACE,SAACuB,GAAA,EAAD,CAAgBC,SAAU1Q,GAAM2Q,YAAaL,EAAYM,eAAgBL,EAAWF,YAAaA,UAIxG,CAED,IACMQ,GAAc,CAAC,SAAU,YAAa,WAAY,YAAa,SAC/DC,GAAgB,UAFD,CAAC,KAAM,MAAO,OAEQD,IAAa9Z,KAAI,SAAAga,GAAC,OAAIpD,GAAAA,GAAAA,MAAYoD,EAAhB,IACvDC,GAAY,CAAI,OAAQ,MAAO,MAAO,KAAM,OAAQ,OAAxC,OAAkDH,IAE9DI,GAAa,mBACdC,GAAAA,KADc,QAEdC,GAAAA,IAFc,CAGjB,UAAW,WAAY,UAAW,WAG9BC,GAAehB,GAAAA,GAAAA,QAA0B,SAAAW,GAAC,OAAKC,GAAaxY,SAASuY,KAAcE,GAAczY,SAASuY,EAAhE,IAGhD,SAASM,GAAT,GAAmG,IAArEC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,MACnC,GAA0BlR,EAAAA,EAAAA,YAAWK,EAAAA,GAA7BD,EAAR,EAAQA,KAAM+Q,EAAd,EAAcA,QACd,OAAO,UAACC,GAAA,GAAD,WACJH,EAAMva,KAAI,SAAA2a,GAAE,aAAI,SAAC,MAAD,CAAkBjX,UAAWkX,GAAAA,GAAwCxH,KAAM1J,EAAKS,IAAIwQ,GAAKE,SAAQ,OAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAStQ,IAAIwQ,UAAf,aAAE,EAAkBrc,OAAzEwc,KAAKC,UAAUJ,EAAGrG,MAAlE,IACZkG,IAEJ,CAED,SAASpB,KACP,IAAQ1I,GAAmBpH,EAAAA,EAAAA,YAAWC,EAAAA,GAA9BmH,eACAhH,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFsR,EAActR,EAAKS,IAAIyM,GAAAA,GAAAA,SACvBqE,EAAUvK,EAAewK,WACzBC,EAAUzK,EAAeyK,UAEzBC,GAAqBrb,EAAAA,EAAAA,UAAQ,WAOjC,OANcma,GAAcxM,QAAO,SAAAsM,GACjC,OAAIA,EAAEvY,SAASwZ,KACXE,GAAWnB,EAAEvY,SAAS,aAAoB,EAE/C,IAAEzB,KAAI,SAAAga,GAAC,OAAIpD,GAAAA,GAAAA,MAAYoD,EAAhB,IAEKtM,QAAO,SAAA2N,GAAC,QAAM3R,EAAKS,IAAIkR,GAAG/c,KAAlB,GACtB,GAAE,CAACoL,EAAMuR,EAASE,IAGbG,GAAoBvb,EAAAA,EAAAA,UAAQ,kBAAMsa,GAAara,KAAI,SAAAga,GAAC,OAAIpD,GAAAA,GAAAA,MAAYoD,EAAhB,IAAoBtM,QAAO,SAAA2N,GAAC,OAAI3R,EAAKS,IAAIkR,GAAG/c,KAAhB,GAApD,GAA4E,CAACoL,IAE/G,OAAO,SAACuJ,EAAA,EAAD,WAAW,SAACnG,EAAA,EAAD,WAChB,UAACmL,GAAA,GAAD,CAAMC,WAAS,EAACuB,QAASV,GAAMZ,QAAS,EAAxC,WACE,SAACF,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UACE,SAAC4D,GAAD,CAAiB5S,MAAM,aAAvB,UACE,SAAC2R,GAAD,CAAoBC,MAAOR,GACzBS,MAAOQ,IAAe,UAACJ,GAAA,GAAD,CAAU/W,GAAI,CAAE0D,QAAS,OAAQ2P,eAAgB,iBAAjD,WACpB,6BAAM,oCAAN,KAAsB,UAAC,KAAD,CAAWhW,MAAO8Z,EAAY1G,KAAKtT,QAAnC,UAA6Cga,EAAY1G,KAAKnS,KAA9D,IAAqE6Y,EAAY1G,KAAK/J,YAC5G,2BAAQgK,EAAAA,GAAAA,GAASyG,eAKzB,SAAC/C,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UACE,SAAC4D,GAAD,CAAiB5S,MAAM,cAAvB,UACE,SAAC2R,GAAD,CAAoBC,MAAOa,UAG5BE,EAAkBja,SAAU,SAAC4W,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UAC7B,SAAC4D,GAAD,CAAiB5S,MAAM,aAAvB,UACE,SAAC2R,GAAD,CAAoBC,MAAOe,cAKpC,CACD,SAASC,GAAT,GAA+C,IAApB5S,EAAmB,EAAnBA,MAAO3E,EAAY,EAAZA,SAChC,OAAO,UAAC0I,EAAA,EAAD,YACL,SAACI,EAAA,EAAD,CAAajJ,GAAI,CAAE2X,GAAI,GAAvB,UACE,SAAC7X,EAAA,EAAD,CAAK4D,QAAQ,OAAO2P,eAAe,gBAAnC,UACE,SAAChJ,EAAA,EAAD,CAAYlN,QAAQ,YAApB,SAAiC2H,QAGpC3E,IAEJ,C,4KC5HYyX,IAA4BnL,EAAAA,EAAAA,oBAAcrO,G,0ICsXtCyZ,IAAAA,IAAAA,EAAAA,GAAAA,KAAAA,KAoBAC,IAnYV,SAASC,GAASrB,EAAkBsB,EAAmBC,EAAuBC,EAAgBC,EAA4BC,GAU/H,IATA,IAAIC,EAASD,EAEPE,EACQ,CAAEC,gBAAgB,GAD1BD,EAEW,CAAEC,gBAAgB,GAF7BD,EAGY,CAAEE,UAAU,GAHxBF,EAIM,CAAEG,YAAY,EAAMC,eAAe,EAAMH,gBAAgB,GAEjEI,EAAQ,EACL3Z,OAAOqJ,OAAOgQ,GAAQO,MAAK,SAAAC,GAAC,OAAIA,CAAJ,KAAUF,IAAU,IAAI,CACzD,GAAIN,EAAOI,WAAY,QACdJ,EAAOI,WACd,IAAMK,EAAUL,GAAWR,EAAMC,EAAQC,GACrCF,IAASa,IACXb,EAAOa,EACPT,GAAM,oBAAQA,GAAWC,GAE5B,CACD,GAAID,EAAOK,cAAe,QACjBL,EAAOK,cACd,IAAMI,EAAUJ,GAAchC,EAAOuB,EAAMD,GACvCC,IAASa,IACXb,EAAOa,EACPT,GAAM,oBAAQA,GAAWC,GAE5B,CACD,GAAID,EAAOE,eAAgB,QAClBF,EAAOE,eACd,IAAMQ,EAAWR,GAAe7B,EAAOuB,GACnCvB,IAAUqC,IACZrC,EAAQqC,EACRV,GAAM,oBAAQA,GAAWC,GAE5B,CACD,GAAID,EAAOG,SAAU,QACZH,EAAOG,SACd,MAA2CA,GAAS9B,EAAOuB,GAA5Cc,EAAf,EAAQrC,MAAuBoC,EAA/B,EAAyBb,KACrBvB,IAAUqC,GAAYd,IAASa,IACjCpC,EAAQqC,EACRd,EAAOa,EACPT,GAAM,oBAAQA,GAAWC,GAE5B,CACF,CACD,MAAO,CAAE5B,MAAAA,EAAOuB,KAAAA,EACjB,CAEM,SAASe,GAAetC,EAAkByB,GAE/C,IADA,IAAMc,EAAkD,CAAC,EACzD,MAAuBja,OAAOC,QAAQkZ,GAAtC,eAAkD,CAA7C,sBAAO/b,EAAP,KAAYgH,EAAZ,KACEA,EAAExF,SAAS,KAChBqb,EAAU7c,GAAOgH,EAAExF,SAAS,GAAK,EAAI,EACtC,CACD,OAAOsb,EAAAA,GAAAA,IAAYxC,GAAO,SAAAyC,GAAC,OAAIA,CAAJ,IAAO,SAAAA,GAChC,GAAoB,cAAhBA,EAAEC,UAA2B,OAAOD,EAExC,cAA2BA,EAAEE,SAA7B,GAAOzc,EAAP,KAAUiC,EAAV,KAAaya,EAAb,KAAmBC,EAAnB,KACA,GAAoB,SAAhB3c,EAAEwc,WAAwC,UAAhBva,EAAEua,UAAuB,CACrD,IAAMhd,EAAMQ,EAAEuJ,KAAKvJ,EAAEuJ,KAAK3I,OAAS,GAAIgc,EAAQ3a,EAAEpE,MACjD,GAAI2B,KAAO6c,EAAW,CAEpB,GADoBA,EAAU7c,GACpBod,EAAO,OAAOD,EACxB,GAAc,IAAVC,GAAerB,EAAU/b,GAAMwB,SAAS,GAC1C,OAAO6b,EAAAA,GAAAA,IAAU7c,EAAG,EAAG0c,EAAMC,EAChC,CACF,CACD,OAAOJ,CACR,GACF,CAED,SAASX,GAAS9B,EAAkBuB,GAAmG,IAA5EyB,EAA2E,wDAC9HC,EAAc,IAAIC,IAAgBC,EAAiB,IAAID,IAE7D,SAASE,EAAMvK,EAAewK,GACxBA,EAAUJ,EAAYK,IAAIzK,GACzBA,EAAK8J,SAASY,SAAQ,SAAAC,GAAE,OAAIP,EAAYQ,IAAID,IAAOL,EAAeG,IAAIE,EAA9C,GAC9B,CAED,IAAME,EAAU,IAAIR,IAsBpB,IApBAS,EAAAA,GAAAA,IAAa3D,GAAO,SAAA/Z,GAAQ,IAAE,SAAAwc,GAC5B,IAAQC,EAAcD,EAAdC,UACR,OAAQA,GACN,IAAK,OACHgB,EAAQJ,IAAIb,EAAEhT,KAAK,IACnB2T,EAAMX,GAAG,GACT,MACF,IAAK,MAAOW,EAAMX,EAAGA,EAAEE,SAASnK,OAAM,SAAAgL,GAAE,OAAIP,EAAYQ,IAAID,EAApB,KAA2B,MACnE,IAAK,MACH,IAAMI,EAAWnB,EAAEE,SAASxP,QAAO,SAAAqQ,GAAE,MAAqB,UAAjBA,EAAGd,SAAP,IACrCU,EAAMX,EAAuB,IAApBmB,EAAS9c,QAAqC,IAApB8c,EAAS9c,QAAgBmc,EAAYQ,IAAIG,EAAS,KACrF,MAEF,IAAK,QAASR,EAAMX,GAAG,GAAO,MAC9B,IAAK,MAAO,IAAK,YAAa,IAAK,WACnC,IAAK,MAAO,IAAK,MAAOW,EAAMX,GAAG,GAAQ,MACzC,SAASoB,EAAAA,GAAAA,IAAkBnB,GAE9B,KAEG,QAAIS,GAAgB3K,OAAM,gBAAGkK,EAAH,EAAGA,UAAH,MAAiC,SAAdA,GAAsC,UAAdA,CAA3C,KAC5Bpa,OAAOoG,KAAK6S,EAAKuC,MAAMhd,SAAW4c,EAAQrT,KAC1C,MAAO,CAAE2P,MAAAA,EAAOuB,KAAAA,GAElB,IAAIhI,GAAW,EACf,SAASwK,IACP,KAAOL,EAAQD,IAAR,YAAiBlK,MACxB,MAAM,GAAN,OAAUA,EACX,CAEDyG,EAAMuD,SAAQ,SAAA1K,GAAI,OAAIoK,EAAYQ,IAAI5K,IAASsK,EAAeG,IAAIzK,EAAhD,IAClB,IAAMmL,GAAS,QAAIb,GAAgBhQ,QAAO,SAAAsP,GAAC,MAAoB,UAAhBA,EAAEC,SAAN,IACrCuB,EAAY,IAAIC,IAAIF,EAAOve,KAAI,SAAAoT,GAAI,MAAI,CAACA,EAC3CmK,GAAkC,SAAnBnK,EAAK6J,WAAyC,QAAjB7J,EAAKpJ,KAAK,IAAvD,qBAES0U,EAAAA,GAAAA,IAAW,CAAC,MAAD,UAAWJ,QAF/B,IAEiDK,KAAM,QADnDvL,EAFmC,KAMzC,SAASwL,EAAYC,GACnB,IAAM3S,GAAS4S,EAAAA,GAAAA,KAAa,QAAIN,EAAUvV,QAAS,CACjD8V,KAAKC,EAAAA,GAAAA,IAAUH,GAAM,SAACvgB,GAAD,OAAW2gB,EAAAA,GAAAA,IAAS3gB,EAApB,MACb,SAAAkC,GAAC,OAAI,CAAJ,IACX,OAAOqC,OAAOqc,aAAY,QAAIV,EAAUtS,UAAUlM,KAAI,SAACS,EAAG4M,GAAJ,MAAU,CAAC5M,EAAEuJ,KAAK,GAAKkC,EAAOmB,GAA4B/O,MAA1D,IACvD,CASD,IARA,IAAM6gB,EAAS,CACb5E,MATFA,GAAQwC,EAAAA,GAAAA,IAAYxC,GAAO,SAAAyC,GAAC,uBAAIwB,EAAUrU,IAAI6S,UAAlB,QAAwBA,CAAxB,IAA2B,SAAAA,GAAC,OAAIA,CAAJ,IAS/ClB,KAAM,CACXuC,KAAMO,EAAY9C,EAAKuC,MACvBnS,QAAQkT,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAAC,GAAI,OACpCxD,EAAK5P,OAAOoT,GAAMtf,KAAI,kBAA0B,CAAEuf,GAA5B,EAAGA,GAA6Btc,IAAhC,EAAOA,IAA8BiJ,OAAQ0S,EAA7C,EAAY1S,QAAZ,GADc,MAIpCsT,EAAU3c,OAAOC,QAAQ8b,EAAY,CAAC,IAC5C,MAAmB/b,OAAOqJ,OAAOiT,EAAOrD,KAAK5P,QAA7C,gBAAK,IAAL,EAAW4P,EAAI,KAAf,WAC2BA,GAD3B,IACE,2BACE,OADW5P,EACX,QADWA,OACX,WAA+BsT,GAA/B,+BACE,iBAAAlhB,MAAA,GADU2B,EACV,KADewf,EACf,KAAAvT,EAAOjM,IAAQwf,CAAS,CAD1B,2BAAAzC,GAAA,CAC0B,CAH9B,2BAAAA,GAAA,EAIA,OAAOmC,CACR,CAED,SAAS7C,GAAWR,EAAuBC,EAAgBC,GAA8C,IAAD,EAClG0D,GAAW,EAQTC,IAAe,UAAC3D,EAAU4D,eAAX,OAAC,EAAmBve,QAAQ4H,EAAOpG,OAAOoG,KAAK6S,EAAKuC,MACnEwB,EAAa,IAAIpC,IAAI5a,OAAOC,QAAQkZ,GAAWtO,QAAO,gDAAcrM,MAAd,IAAsBrB,KAAI,sCAChF8f,EAAc,IAAIrC,IAAI5a,OAAOC,QAAQkZ,GAAWtO,QAAO,+BAAKjN,GAAL,kBAAYA,EAAEgB,SAAS,KAAOhB,EAAEgB,SAAS,EAAzC,IAA6CzB,KAAI,sCACxGkM,GAASkT,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAAC,GACvC,IAAMS,EAAOjE,EAAK5P,OAAOoT,GACnBU,EAAUD,EAAKrS,QAAO,SAAAuS,GAC1B,IAAIzD,EAAQ,EACZ,OAAOuD,EAAKhN,OAAM,SAAAkC,GAChB,IAAMiL,EAAmBjX,EAAK8J,OAAM,SAAAiH,GAAC,eAAI,UAAC/E,EAAM/I,OAAO8N,UAAd,QAAoB,KAApB,UAA2BiG,EAAI/T,OAAO8N,UAAtC,QAA4C,EAAhD,IAC/BmG,EAAmBlX,EAAKwT,MAAK,SAAAzC,GAAC,eAAI,UAAC/E,EAAM/I,OAAO8N,UAAd,QAAoB,IAApB,UAA0BiG,EAAI/T,OAAO8N,UAArC,QAA2C,EAA/C,IAC9BoG,EAAcF,IAAqBC,GAAoBlL,EAAMsK,GAAKU,EAAIV,IACtEc,EAAaV,IAAiBE,EAAW7B,IAAI/I,EAAMhS,OAAU6c,EAAY9B,IAAIiC,EAAIhd,MAAUgd,EAAIhd,MAAQgS,EAAMhS,IAEnH,OADImd,GAAeC,GAAW7D,IACvBA,EAAQT,CAChB,GACF,IAED,OADIiE,EAAQ3e,SAAW0e,EAAK1e,SAAQqe,GAAW,GACxCM,CACR,IACD,OAAON,EAAW,CAAErB,KAAMvC,EAAKuC,KAAMnS,OAAAA,GAAW4P,CACjD,CAED,SAASS,GAAchC,EAAkBuB,EAAuBD,GAG9D,IAFA,IAAMyE,EAAYzd,OAAOqc,YAAYrc,OAAOC,QAAQgZ,EAAKuC,MAAMre,KAAI,+BAAEC,EAAF,KAAOyc,EAAP,WAAc,CAACzc,EAAK,CAAEoI,IAAKqU,EAAGpU,IAAKoU,GAAnC,KAC7D6D,EAAO,CAAEzE,KAAAA,GAFmF,aAIhG,IAAM0E,GAAYpB,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAAC,GAAI,OAAImB,GAAgBF,EAAKzE,KAAK5P,OAAOoT,GAArC,IAC1CoB,GAAiBtB,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAApf,GAAG,OAClD0gB,GAAY9d,OAAOC,QAAQ0d,GAAWxgB,KAAI,SAAA4F,GAAC,OAAIA,EAAE,KAAO3F,EAAMqgB,EAAY1a,EAAE,EAAjC,IAAqC8H,QAAO,SAAAgP,GAAC,OAAIA,CAAJ,IADtC,IAGhDgD,GAAW,EACTxT,GAASkT,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAAC,GACvC,IAAMH,EAASoB,EAAKzE,KAAK5P,OAAOoT,GAAM5R,QAAO,SAAAuS,GAC3C,IAAMW,EAAOD,GAAY,CAACF,GAAgB,CAACR,IAAOS,EAAepB,KAC3DuB,EAAWC,GAAiBvG,EAAOqG,GACzC,OAAOrG,EAAMxH,OAAM,SAACK,EAAM/F,GAAP,aAAawT,EAAS1W,IAAIiJ,GAAO9K,MAApB,UAA4BuT,EAAQxO,UAApC,SAA2CyL,IAAxD,GACpB,IAGD,OAFIqG,EAAO9d,SAAWkf,EAAKzE,KAAK5P,OAAOoT,GAAMje,SAC3Cqe,GAAW,GACNP,CACR,IACD,IAAKO,EAAU,cACfa,EAAKzE,KAAO,CAAEuC,KAAMkC,EAAKzE,KAAKuC,KAAMnS,OAAAA,EApB4D,IAGrF,kBAgBI,KAEhB,CACD,OAAOqU,EAAKzE,IACb,CACD,SAASM,GAAe7B,EAAkBuB,GACxC,IAEMiF,EAAYD,GAAiBvG,EADrBoG,GAAY,CADR9d,OAAOqc,YAAYrc,OAAOC,QAAQgZ,EAAKuC,MAAMre,KAAI,+BAAEC,EAAF,KAAOyc,EAAP,WAAc,CAACzc,EAAK,CAAEoI,IAAKqU,EAAGpU,IAAKoU,GAAnC,MAC1C,gBAAgB7Z,OAAOqJ,OAAO4P,EAAK5P,QAAQlM,KAAI,SAAAkM,GAAM,OAAIuU,GAAgBvU,EAApB,QAG9E,OAAO6Q,EAAAA,GAAAA,IAAYxC,GAAO,SAAAyC,GAEtB,MAAqB+D,EAAU5W,IAAI6S,GAA3B3U,EAAR,EAAQA,IACR,GAAIA,IADJ,EAAaC,IACI,OAAO2W,EAAAA,GAAAA,IAAS5W,GAEnC,IAAQ4U,EAAcD,EAAdC,UACF+D,EAAgBhE,EAAEE,SAASld,KAAI,SAAA0c,GAAC,OAAIqE,EAAU5W,IAAIuS,EAAlB,IACtC,OAAQO,GACN,IAAK,YACH,cAAuC+D,EAAvC,GAAO1iB,EAAP,KAAcgf,EAAd,KAAyBH,EAAzB,KAA+BC,EAA/B,KACA,GAAI9e,EAAM+J,KAAOiV,EAAUhV,IAAK,OAAO0U,EAAEE,SAAS,GAC7C,GAAI5e,EAAMgK,IAAMgV,EAAUjV,IAAK,OAAO2U,EAAEE,SAAS,GACtD,GAAIC,EAAK7U,MAAQ6U,EAAK9U,KACpB+U,EAAK9U,MAAQ8U,EAAK/U,KAClB8U,EAAK9U,MAAQ+U,EAAK/U,KAAOoP,SAAS0F,EAAK9U,KACvC,OAAO4W,EAAAA,GAAAA,IAAS9B,EAAK7U,KACvB,MAEF,IAAK,MACH,IAAM2Y,EAAcjE,EAAEE,SAASxP,QAAO,SAAClN,EAAG6M,GACxC,IAAM6T,EAAMF,EAAc3T,GAC1B,OAAO2T,EAAcjO,OAAM,SAACoO,EAAKC,GAAN,OAAYF,EAAI7Y,KAAO8Y,EAAI7Y,GAA3B,GAC5B,IACD,GAAI2Y,EAAY5f,OAAS2f,EAAc3f,OAAQ,OAAOgH,GAAAA,GAAAA,WAAA,WAAO4Y,IAC7D,MAEF,IAAK,MACH,IAAMA,EAAcjE,EAAEE,SAASxP,QAAO,SAAClN,EAAG6M,GACxC,IAAM6T,EAAMF,EAAc3T,GAC1B,OAAO2T,EAAcjO,OAAM,SAAAoO,GAAG,OAAID,EAAI5Y,KAAO6Y,EAAI9Y,GAAnB,GAC/B,IACD,GAAI4Y,EAAY5f,OAAS2f,EAAc3f,OAAQ,OAAOiH,GAAAA,GAAAA,WAAA,WAAO2Y,IAIjE,OAAOjE,CACR,IAAE,SAAAA,GAAC,OAAIA,CAAJ,GACL,CACD,SAAS2D,GAAYU,GACnB,IAAMlC,EAAoB,CAAC,EAS3B,OARAkC,EAAOvD,SAAQ,SAAAwD,GACbze,OAAOC,QAAQwe,GAAOxD,SAAQ,YAAmB,IAAD,eAAhB7d,EAAgB,KAAX3B,EAAW,KAC1C6gB,EAAOlf,IACTkf,EAAOlf,GAAKoI,KAAO/J,EAAM+J,IACzB8W,EAAOlf,GAAKqI,KAAOhK,EAAMgK,KACpB6W,EAAOlf,IAAP,WAAmB3B,EAC3B,GACF,IACM6gB,CACR,CACD,SAASsB,GAAgB3E,GACvB,IAAMqD,EAAoB,CAAC,EAe3B,OAdIrD,EAAKza,SACPwB,OAAOoG,KAAK6S,EAAK,GAAG5P,QACjBwB,QAAO,SAAAzN,GAAG,OAAI6b,EAAK/I,OAAM,SAAAkN,GAAG,OAAIA,EAAI/T,OAAOjM,EAAf,GAAlB,IACV6d,SAAQ,SAAA7d,GAAG,OAAIkf,EAAOlf,GAAO,CAAEoI,IAAKyT,EAAK,GAAG5P,OAAOjM,GAAMqI,IAAKwT,EAAK,GAAG5P,OAAOjM,GAAlE,IACd6b,EAAKgC,SAAQ,YACX,IAD4B,IAAd5R,EAAa,EAAbA,OACd,MAA2BrJ,OAAOC,QAAQoJ,GAA1C,eAAmD,CAA9C,sBAAOjM,EAAP,KAAY3B,EAAZ,KACE6gB,EAAOlf,IAENkf,EAAOlf,GAAKqI,IAAMhK,IAAO6gB,EAAOlf,GAAKqI,IAAMhK,GAC3C6gB,EAAOlf,GAAKoI,IAAM/J,IAAO6gB,EAAOlf,GAAKoI,IAAM/J,IAH/B6gB,EAAOlf,GAAO,CAAEoI,IAAK,EAAGC,IAAKhK,EAKhD,CACF,KAEI6gB,CACR,CAKM,SAAS2B,GAAiBvG,EAAkBgH,GACjD,IAAMD,EAAQ,IAAI7C,IA+ClB,OA7CAP,EAAAA,GAAAA,IAAa3D,GAAO,SAAA/Z,GAAQ,IAAE,SAAAwc,GAAM,IAAD,EAG7BlJ,EAFImJ,EAAcD,EAAdC,UACFC,EAAWF,EAAEE,SAASld,KAAI,SAAA+d,GAAE,OAAIuD,EAAMnX,IAAI4T,EAAd,IAElC,OAAQd,GACN,IAAK,OACH,GAAkB,QAAdD,EAAEhT,KAAK,GACT,MAAM,IAAIwX,MAAJ,6BAAgCxE,EAAEhT,KAAlC,2BACR8J,EAAO,UAAGyN,EAAMvE,EAAEhT,KAAK,WAAhB,QAAuB,CAAE3B,IAAK,EAAGC,IAAK,GAC7C,MACF,IAAK,QAASwL,EAAU2N,GAAc,CAACzE,EAAE1e,QAAS,MAClD,IAAK,MAAO,IAAK,MAAO,IAAK,MAC3BwV,EAAU,CACRzL,IAAKqZ,GAAAA,GAAczE,GAAWC,EAASld,KAAI,SAAA0c,GAAC,OAAIA,EAAErU,GAAN,KAC5CC,IAAKoZ,GAAAA,GAAczE,GAAWC,EAASld,KAAI,SAAA0c,GAAC,OAAIA,EAAEpU,GAAN,MAC3C,MACL,IAAK,MAAOwL,EAAU,CACpBzL,IAAKqZ,GAAAA,GAAczE,GAAW,CAACC,EAAS,GAAG5U,MAC3CA,IAAKoZ,GAAAA,GAAczE,GAAW,CAACC,EAAS,GAAG7U,OAC1C,MACH,IAAK,MAAOyL,EAAUoJ,EAASyE,QAAO,SAAChD,EAAM7K,GAAP,OAAmB2N,GAAc,CACrE9C,EAAKtW,IAAMyL,EAAQzL,IAAKsW,EAAKtW,IAAMyL,EAAQxL,IAC3CqW,EAAKrW,IAAMwL,EAAQzL,IAAKsW,EAAKrW,IAAMwL,EAAQxL,KAFP,IAGjC,MACL,IAAK,YACqCwL,EAApCoJ,EAAS,GAAG7U,KAAO6U,EAAS,GAAG5U,IAAe4U,EAAS,GAClDA,EAAS,GAAG5U,IAAM4U,EAAS,GAAG7U,IAAe6U,EAAS,GAChDuE,GAAc,GAAI,CAACvE,EAAS,GAAIA,EAAS,KACxD,MACF,IAAK,WACH,cAAeA,EAAf,GAAOR,EAAP,KAAUkF,EAAV,KAAyBC,EAAM,CAAExZ,IAAKqU,EAAErU,IAAMuZ,EAAEvZ,IAAKC,IAAKoU,EAAEpU,IAAMsZ,EAAEtZ,KAElEwL,EADE+N,EAAIxZ,KAAO,GAAKwZ,EAAIvZ,KAAO,EAClBoU,EAAErU,KAAO,GAAKqU,EAAEpU,KAAO,EAAK,CAAED,IAAKyZ,IAAKxZ,IAAKwZ,KAAQ,CAAEzZ,KAAMyQ,IAAUxQ,IAAKwQ,KAG7E2I,GAAc,CACtB/E,EAAErU,IAAMwZ,EAAIxZ,IAAKqU,EAAErU,IAAMwZ,EAAIvZ,IAC7BoU,EAAEpU,IAAMuZ,EAAIxZ,IAAKqU,EAAEpU,IAAMuZ,EAAIvZ,MAEjC,MAEF,SAAS8V,EAAAA,GAAAA,IAAkBnB,GAE7BqE,EAAMre,IAAI+Z,EAAGlJ,EACd,IACMwN,CACR,CACD,SAASG,GAAcvV,GAAsE,IAA3C6V,EAA0C,uDAAZ,GACxEzZ,EAAM0Z,KAAK1Z,IAAL,MAAA0Z,MAAI,QAAQ9V,GAAR,gBAAmB6V,EAAS/hB,KAAI,SAAA0c,GAAC,OAAIA,EAAEpU,GAAN,OAC3CD,EAAM2Z,KAAK3Z,IAAL,MAAA2Z,MAAI,QAAQ9V,GAAR,gBAAmB6V,EAAS/hB,KAAI,SAAA0c,GAAC,OAAIA,EAAErU,GAAN,OACjD,MAAO,CAAEA,IAAAA,EAAKC,IAAAA,EACf,CAgBM,SAAS2Z,GAAYC,EAAmBC,GAC7C,OAAOD,EAAOnf,SAAQ,SAAA2Z,GAAC,OAAIA,CAAJ,IAAOxZ,MAAK,SAAC0C,EAAGC,GAAJ,OAAUA,EAAEvH,MAAQsH,EAAEtH,KAAtB,IAA6B8jB,MAAM,EAAGD,EAC1E,CACM,SAASE,GAAUC,GAGxB,IAFA,IAAIC,EAAQ,IACRtZ,EAAO,IAAIwU,IAAI6E,EAAMvf,SAAQ,SAAA2Z,GAAC,OAAI7Z,OAAOqJ,OAAOwQ,GAAG1c,KAAI,SAAAS,GAAC,OAAIuhB,KAAKQ,MAAM/hB,EAAEgiB,KAAQF,EAAzB,GAA1B,KAC3BtZ,EAAK2B,KAFuC,MAGjD2X,GAHmC,EAInCtZ,EAAO,IAAIwU,KAAI,QAAIxU,GAAMjJ,KAAI,SAAAC,GAAG,OAAI+hB,KAAKQ,MAAMviB,EAJZ,EAIH,KAElC,IAPqD,EAO/Ckf,EAAmB,CAAC,EAP2B,WAQlCmD,GARkC,IAQrD,2BACE,QADSG,EACT,cAAoB5f,OAAOqJ,OAAOuW,GAAlC,eAAyC,CAApC,IAAMC,EAAK,KACRhG,EAAIsF,KAAKQ,MAAME,EAAMD,KAAQF,GAASA,IACvCpD,EAAOzC,IAAMyC,EAAOzC,GAAIpe,MAAQokB,EAAMpkB,SACzC6gB,EAAOzC,GAAKgG,EACf,CAbkD,+BAcrD,OAAOvD,CACR,CAOM,SAAUzD,GAAmBiH,EAAkCC,GAA/D,yFACCC,GAAU7D,EAAAA,GAAAA,IAAU4D,EAAS1W,QAAQ,SAAAA,GAAM,OAAI,IAAIuR,IAAIvR,EAAOlM,KAAI,SAAAS,GAAC,OAAIA,EAAEwC,GAAN,IAAxB,IAD5C,WAE6B0f,GAF7B,yDAEmBjV,EAFnB,qBAGE,sBAAO4R,EAAP,KAAatC,EAAb,KACG8F,EAAYD,EAAQvD,GAC1B,OAAQtC,EAAE+F,MACR,IAAK,WAAY,IAAI,QAAI/F,EAAEgG,MAAMjQ,OAAM,SAAA3F,GAAC,OAAK0V,EAAU9E,IAAI5Q,EAAnB,IAAwB,6BAAsB,MACtF,IAAK,UAAW,IAAI,QAAI0V,GAAW/P,OAAM,SAAA3F,GAAC,OAAI4P,EAAEgG,KAAKhF,IAAI5Q,EAAf,IAAqB,6BAPhE,QAGqBvK,OAAOC,QAAQ4K,GAHpC,4JAWH,OAXG,UAWGA,EAXH,sHAAAsP,IAAA,0EAcA,SAASiG,GAAmBjH,GACjC,OAAO,IAAIyB,IAAa,OAATzB,QAAS,IAATA,GAAAA,EAAWva,SAAS,GAC/Bua,EAAUva,SAAS,GAAK,CAAC,EAAG,GAAK,CAAC,EAAG,EAAG,EAAG,GAClC,OAATua,QAAS,IAATA,GAAAA,EAAWva,SAAS,GAAK,CAAC,EAAG,EAAG,EAAG,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7D,CAEM,SAAUka,GAAWK,EAA4B4G,GAAjD,YAaIM,EAUAC,EAvBJ,YAuDKC,EAvDL,6EA8BL,IAyBUA,EAvDL,SAuDWC,GAvDX,sBAmEOD,EA6BAE,EAhGP,uEAgGOA,EAhGP,SAgGkBjW,GAhGlB,uGAiGKkW,EAAYC,EAASniB,OAASgM,EAAGoW,EAA6B,GAAIC,EAA4B,GAAIC,EAA6B,GACjIC,EAAW,EAlGd,WAmGiBf,GAnGjB,0BAmGU5f,EAnGV,QAoGO4gB,EAAaC,EAAc7gB,GAAMuZ,EAAQuH,EAAO9gB,GACtD,IAAK4gB,EAAY,kBACbvC,EAAAA,GAAAA,IAAM,EAAGiC,GAAWxQ,OAAM,SAAAqO,GAAC,OAAKyC,EAAW7F,IAAIxB,EAAQ4E,EAA5B,IAAiCuC,EAASK,KAAK/gB,GACpE4gB,EAAW7F,IAAIxB,IAIhB8E,EAAAA,GAAAA,IAAM,EAAGiC,GAAW9G,MAAK,SAAA2E,GAAC,OAAKyC,EAAW7F,IAAIxB,EAAQ4E,EAA5B,KAAiCqC,EAASO,KAAK/gB,IAHhF2gB,IAAY,QAAIC,GAAYI,MAAK,SAAAvH,GAAC,OAAIA,EAAIF,CAAR,IAAkBA,EACpDkH,EAAQM,KAAK/gB,GAzGhB,4OAAA+Z,IAAA,0BA6GG4G,EAAWL,GA7Gd,sDA8GGlW,IAAMmW,EAASniB,OA9GlB,iBA+GC,OA/GD,WA+GC,WAAW8d,GA/GZ,6CAkHGyE,IAAaL,EAlHhB,4BAmHmBG,GAnHnB,2DAsHG,OAHSzgB,EAnHZ,QAoHG8gB,EAAO9gB,KACPkc,EAAOE,EAAAA,GAAYmE,EAASnW,KAAO,CAAE0V,KAAM,WAAYC,KAAM,IAAIvF,IAAI,CAACxa,KACtE,gBAAOqgB,EAAWjW,EAAI,GAAtB,SAtHH,QAuHG0W,EAAO9gB,KAvHV,wHAAA+Z,IAAA,uEA2HqByG,EAAaC,GA3HlC,0CA8HC,OAHSzgB,EA3HV,KA4HC8gB,EAAO9gB,KACPkc,EAAOE,EAAAA,GAAYmE,EAASnW,KAAO,CAAE0V,KAAM,WAAYC,KAAM,IAAIvF,IAAI,CAACxa,KACtE,gBAAOqgB,EAAWjW,EAAI,GAAtB,SA9HD,QA+HC0W,EAAO9gB,KA/HR,oCAkID,OADAkc,EAAOE,EAAAA,GAAYmE,EAASnW,KAAO,CAAE0V,KAAM,UAAWC,KAAM,IAAIvF,IAAJ,UAAYiG,EAAYC,EAAaF,KACjG,gBAAOH,EAAWjW,EAAI,GAAtB,SAlIC,2EAmEO+V,EAnEP,SAmEa/V,GAnEb,oFAoEGA,IAAM6W,EAAS7iB,OApElB,gBAqEQ,uBAAOiiB,EAAW,GAAlB,QArER,wDAuEiBT,GAvEjB,iIAuEU5f,EAvEV,SAwEKkhB,EAAKnG,IAAI/a,GAxEd,+DAyEO5B,EAAS6iB,EAAS7W,GAAGhM,OAAQwiB,EAAaC,EAAc7gB,GAC1DmhB,EAAmB,GAEnBP,GAAeA,EAAW7F,IAAI3c,GA5EnC,sBA8EG+iB,GAAmB,WAAC9C,EAAAA,GAAAA,IAAMjgB,EAAS,EAAG,GAAG4iB,MAAK,SAAA9c,GAAC,OAAI0c,EAAW7F,IAAI7W,EAAnB,WAA5B,QAAsD,GAAK9F,GACvDgjB,GA/E1B,4DAuFC,OALAF,EAAKtG,IAAI5a,GACT8gB,EAAO9gB,GAAOihB,EAAS7W,GAAGhM,OAC1B6iB,EAAS7W,GAAGyQ,SAAQ,SAAAsD,GAAC,OAAIjC,EAAOE,EAAAA,GAAY+B,IAAM,CAAE2B,KAAM,WAAYC,KAAM,IAAIvF,IAAI,CAACxa,IAAhE,IACrBohB,GAAkBD,EAElB,gBAAOhB,EAAM/V,EAAI,GAAjB,SAvFD,QAyFCgX,GAAkBD,EAClBL,EAAO9gB,GAAO,EACdkhB,EAAKG,OAAOrhB,GA3Fb,gUAAA+Z,IAAA,4FAmEOoG,GAnEP,kBAgGOE,GAxCJa,EAA4B,IAAI1G,IAClCyG,EAAuB,GAAIV,EAAqB,GAzDjD,WA0DaH,GA1Db,IA0DH,2BAAWhW,EAAY,QACrB6W,EAASF,KAAK,IACJ,IAAN3W,EAASmW,EAASQ,KAAKE,EAAS7iB,OAAS,GACxC6iB,EAAS7W,GAAG2W,KAAKE,EAAS7iB,OAAS,EA7DvC,2BAAA2b,GAAA,CAoIH,OArEAkH,EAAWA,EAASxW,QAAO,SAAAjN,GAAC,OAAIA,EAAEY,MAAN,IAAc6B,MAAK,SAAC0C,EAAGC,GAAJ,OAAUA,EAAExE,OAASuE,EAAEvE,MAAvB,IAC3CgjB,EAAiBb,EAASniB,OAoE9B,gBAAO+hB,EAAM,GAAb,SApIG,yCAuBID,EAvBJ,SAuBiBE,EAAiBkB,GACrC,KAAIjD,EAAAA,GAAAA,IAAMiD,EAAY,EAAG,GAAG9H,MAAK,SAAApP,GAAC,OAAiB,IAAbgW,EAAMhW,EAAV,IAIlC,OAFAgW,GAAK,QAAOA,IACNkB,GAAa,EACZlB,EAAM1B,QAAO,SAAC/b,EAAGC,GAAJ,OAAc,EAAJD,EAAQC,CAAlB,GAAqB,EAC1C,EAhBQqd,EAbJ,SAamBpP,EAAmBiM,EAAmByD,GAC5D,GAAuB,IAAnB1P,EAAQzS,OAAZ,CADgF,iBAMhE0e,GANgE,yBAMrE1S,EANqE,QAM1D6V,EAAe,GAAD,gBAAKpP,GAAL,CAAczG,IAAI0S,EAAMyD,EAAS9V,QAAO,SAAA0T,GAAC,OAAIA,IAAM/T,CAAV,IANG,EAMhF,2BAAsB,GAN0D,+BAOhF6V,EAAe,GAAD,gBAAKpP,GAAL,CAAcA,EAAQzS,SAAS,IAAIoc,IAAJ,mBAAYsC,GAAZ,CAAkBjM,EAAQzS,UAAzD,mBAAuEmiB,GAAvE,CAAiF1P,EAAQzS,SAFtG,MAHKmjB,EAAgBxG,IAAIwF,EAASniB,SAC/BojB,EAAOT,KAAKlQ,EAKjB,EArBI,kBAuDKsP,GA5CJP,GAXD,QAWe,IAAIpF,IAAImF,IAAY4B,EAAkBvB,GAAmBjH,EAAU4D,SACnF6E,EAAqB,GAUzBvB,EAAe,CAAC,GAAI,IAAIzF,IAAI,CAAC,IAAK,CAAC,IAtB9B,WA8BI8G,GACP,IA/BG,EA+BGX,EAAgC,IAAInF,IA/BvC,WAgCiBgG,GAhCjB,IAgCH,2BAA4B,CAAC,IAAD,EAAjBpB,EAAiB,QACpB9D,EAAK4D,EAAaE,EAAOkB,QACpBtiB,IAAPsd,GACJqE,EAAS3gB,IAAIsc,GAAI,UAACqE,EAASzZ,IAAIoV,UAAd,QAAqB,IAAI9B,IAAI4F,EAAMjB,MAAM,EAAGmC,IAAY3Z,KAAO,GAAK,EACtF,CApCE,2BAAAoS,GAAA,kBAqC2B4G,EAAS9gB,WArCpC,8CAqCSyc,EArCT,KAsCD,GAAkB,IAtCjB,KAsCoB,CACnB,IAAM8D,GAAK,QAAOoB,EAAOR,MAAK,SAAAZ,GAAK,OAAIF,EAAaE,EAAOkB,KAAehF,CAAvC,KACnC8D,EAAMkB,GAAa,EACnBE,EAASA,EAAO/W,QAAO,SAAA2V,GAAK,OAAIF,EAAaE,EAAOkB,KAAehF,CAAvC,IAC5BkF,EAAOT,KAAKX,EACb,CA3CA,EAqCH,2BAAmD,GArChD,2BAAArG,GAAA,GA8BIuH,EAAY,EAAGA,GAAa,EAAGA,IAAc,EAA7CA,GAmBHG,EAAW,CAAE3B,KAAM,UAAoBC,KAAM,IAAIvF,KACjD0B,GAAwBC,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAA7e,GAAC,OAAIkkB,CAAJ,IAEnDX,GApDD,qBAoDe/E,EAAAA,GAAAA,IAAUhD,GAAW,SAAAxb,GAAC,OAAI,CAAJ,MAAW4e,EAAAA,GAAAA,GAAayD,GAAS,SAAAriB,GAAC,OAAI,CAAJ,KACtEsjB,GAAgB9E,EAAAA,GAAAA,IAAUhD,EAAWiH,IArDtC,WAsIewB,GAtIf,2DAsIuB,OAAjBpB,EAtIN,QAsIuB,gBAAOD,EAAMC,GAAb,SAtIvB,wHAAArG,IAAA,2E,gEC/XQ,SAAS2H,GAAT,GAAsG,IAAD,EAAzEC,EAAyE,EAAzEA,OAAQC,EAAiE,EAAjEA,UAAiE,IAAtDtY,WAAAA,OAAsD,aAAlCuY,iBAAAA,OAAkC,SAC5GC,GAAQviB,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,IAAkBmiB,EAAxB,GAAiC,CAACA,IAC3D,IAAKG,EAAO,OAAO,KAEnB,IAAMC,EAAWF,EAAgB,UAAGC,EAAME,kBAAkBJ,UAA3B,aAAG,EAAoCnX,QAAO,SAAAD,GAAO,MAAI,WAAYA,CAAhB,IAA2BsX,EAAME,kBAAkBJ,GACzI,OAAO,SAAClhB,EAAA,EAAD,CAAK4D,QAAQ,OAAOoG,cAAc,SAAlC,SACJqX,GAAW,SAAChY,GAAA,EAAD,CAAiBC,SAAU+X,EAAUzY,WAAYA,IAAiB,MAEjF,C,oGChBc,SAAS2Y,GAAgBC,GACtC,IAAQvS,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAAwClM,EAAAA,EAAAA,WAAS,kBAAMkM,EAASwS,cAAcjb,IAAIgb,EAAjC,IAAjD,eAAOE,EAAP,KAAqBC,EAArB,KAOA,OANAje,EAAAA,EAAAA,YAAU,kBAAMie,EAAgB1S,EAASwS,cAAcjb,IAAIgb,GAAjD,GAAiE,CAACvS,EAAUuS,KACtF9d,EAAAA,EAAAA,YAAU,kBACRuL,EAASwS,cAAcG,OAAOJ,GAAc,SAACnL,EAAGjK,EAAGtP,GAAP,MAAmB,WAANsP,GAAkBuV,EAAgB7kB,EAA/C,GADpC,GAER,CAAC0kB,EAAcG,EAAiB1S,IAG3B,CAAEyS,aAAcA,EAA8BG,sBAFxBxe,EAAAA,EAAAA,cAAY,SAAC4B,GAAD,OAAuCuc,GAAgBvS,EAASwS,cAAcniB,IAAIkiB,EAAcvc,EAAhG,GAAyG,CAACuc,EAAcvS,IAGlK,CCcc,SAAS6S,GAAT,GAAmE,IAAD,IAArCjf,EAAqC,EAArCA,SAClC9D,GAAMC,EAAAA,EAAAA,GAAe,CAAC,0BAA2B,UAAjDD,EACFgjB,GAAcpc,EAAAA,EAAAA,YAAWK,EAAAA,GACvBiJ,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAA6EtJ,EAAAA,EAAAA,YAAWC,EAAAA,GAAxF,IAAQC,UAAkB2b,EAA1B,EAAqBllB,IAAmB+I,EAAxC,EAAwCA,YAAeS,EAAvD,EAAuDA,kBACvD,EAAoEyb,GAAgBC,GAA5DQ,EAAxB,EAAQN,aAAgBM,gBAAmBH,EAA3C,EAA2CA,qBAC3C,GAAwB9e,EAAAA,EAAAA,WAAS,GAAjC,eAAOmL,EAAP,KAAa+T,EAAb,KACMC,GAAS7e,EAAAA,EAAAA,cAAY,kBAAM4e,GAAQ,EAAd,GAAqB,CAACA,IAC3C9T,GAAU9K,EAAAA,EAAAA,cAAY,kBAAM4e,GAAQ,EAAd,GAAsB,CAACA,IAC7CrjB,GAAiBC,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,MAAN,GAA4B,IAE9D,GAA+BqjB,EAAAA,GAAAA,KAA/B,eAAOC,EAAP,KAAgBC,EAAhB,MACA3e,EAAAA,EAAAA,YAAU,kBAAMuL,EAASkJ,KAAKmK,UAAUD,EAA9B,GAA4C,CAACpT,EAAUoT,IAEjE,IAAME,GAAkBnmB,EAAAA,EAAAA,UAAQ,kBAAMwC,EAClCM,OAAOC,QAAQL,GAAAA,EAAAA,kBAAgCF,IAC9C4jB,UAAUpjB,SAAQ,qCAClB2K,QAAO,SAAAzN,GAAG,OAAKA,EAAIwB,SAAS,UAAlB,IACX,EAJ4B,GAIxB,CAACc,IACT,GAAkCxC,EAAAA,EAAAA,UAAQ,WACxC,IAAMqmB,GAAehH,EAAAA,GAAAA,GAAa8G,GAAiB,SAAA1lB,GAAC,OAAI4e,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAA7e,GAAC,OAAI,CAAJ,GAA/B,IACpDoS,EAASkJ,KAAK5P,OAAO4R,SAAQ,SAAAmC,GAAG,OAAImG,EAAanG,EAAI2E,SAAWwB,EAAanG,EAAI2E,QAAS3E,EAAIoG,UAA9D,IAChC,IAAMC,GAAU,QAAIJ,GAAiBhjB,MAAK,SAAC0C,EAAGC,GAAJ,QACtC0gB,GAAYH,EAAaxgB,IAAM,KAAO2gB,GAAYH,EAAavgB,IAAM,EAD/B,IAE1C,OAAOkgB,GAAW,CAAEO,QAAAA,EAASF,aAAAA,EAC9B,GAAE,CAACL,EAASnT,EAAUsT,IANfI,EAAR,EAAQA,QAASF,EAAjB,EAAiBA,aAQXI,IAAgB,UAACb,EAAgB/F,eAAjB,OAAC,EAAyBne,SAAS,IACnDglB,IAAgB,UAACd,EAAgB/F,eAAjB,OAAC,EAAyBne,SAAS,IAEzD,GAA2B1B,EAAAA,EAAAA,UAAQ,iBAAO,CACxC2mB,OAAQR,EAAgBxY,QAAO,SAAAsM,GAAC,cAAI,UAAC2L,EAAgB3L,UAAjB,OAAC,EAAoBvY,SAAS,GAAlC,IAAsCJ,OACtEslB,OAAQT,EAAgBxY,QAAO,SAAAsM,GAAC,cAAI,UAAC2L,EAAgB3L,UAAjB,OAAC,EAAoBvY,SAAS,GAAlC,IAAsCJ,OAFrC,GAG/B,CAAC6kB,EAAiBP,IAHde,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAIVC,GAAWV,EAAgB7kB,OAASqlB,EAAQG,GAAWX,EAAgB7kB,OAASslB,EAChFG,IAAoB/mB,EAAAA,EAAAA,UAAQ,kBAC/B8C,OAAOoG,KAAKD,GAAc0E,QAAO,SAAAsM,GAAC,OACjC+M,EAAAA,GAAAA,SAAyB/M,IAA+D,IAAvCnX,OAAOoG,KAAKD,EAAYgR,IAAI3Y,MAD5C,IAC0DA,MAF7D,GAG9B,CAAC2H,IACCge,IAAqBjnB,EAAAA,EAAAA,UAAQ,2BAAC,WAC/B2lB,GAD8B,IAEjChc,KAAM,IAAIud,GAAAA,GAAJ,oBAAgBvB,EAAYhc,KAAKA,KAAK,IAAtC,IAA0Cwd,QAAQ9H,EAAAA,GAAAA,GAAa2H,EAAAA,IAAiB,SAAAvmB,GAAC,OAAIye,EAAAA,GAAAA,IAAS,EAAb,WAAoBhd,IAF1E,GAG/B,CAACyjB,IACCyB,IAAgBngB,EAAAA,EAAAA,cAAY,WAChC,IAAMogB,EAAevkB,OAAOqc,YAAYrc,OAAOC,QAAQkG,GAAa0E,QAAO,+BAAEsM,EAAF,iBAAa+M,EAAAA,GAAAA,SAAyB/M,EAAtC,KAC3EvQ,EAAkB,CAAET,YAAaoe,GAClC,GAAE,CAACpe,EAAaS,IACX4d,IAAkBrgB,EAAAA,EAAAA,cACtB,SAACsgB,GAAoC,IAApBC,IAAmB,yDAC5BC,GAAmB1d,EAAAA,GAAAA,IAAU6b,GACnCO,EAAgBpI,SAAQ,SAAA9D,GAAM,IAAD,EACvBuN,EAASC,EAAiBxN,GAAjB,6BAA2BwN,EAAiBxN,UAA5C,QAAkD,IAAlD,CAAuDsN,IAC3DE,EAAiBxN,KAAIwN,EAAiBxN,GAAKwN,EAAiBxN,GAAGtM,QAAO,SAAA2N,GAAC,OAAIA,IAAMiM,CAAV,IACjF,IACD9B,EAAqB,CAAEG,gBAAiB6B,GACzC,GACD,CAACtB,EAAiBP,EAAiBH,IAGrC,OAAO,iCACL,UAACvS,EAAA,EAAD,CAAWpP,GAAI,CAAE0D,QAAS,QAA1B,WACE,UAACuF,EAAA,EAAD,CAAajJ,GAAI,CAAEmE,SAAU,GAA7B,WACE,SAACkG,EAAA,EAAD,WACE,4BAASxL,EAAT,+CAEF,UAACwW,GAAA,EAAD,CAAOf,QAAS,EAAhB,WACE,UAACjK,EAAA,EAAD,WAAaxL,EAAb,oDAAyC,UAACyI,EAAA,EAAD,CAASjK,MAAO4lB,GAAoB,UAAY,YAAhD,UAA8DA,GAA9D,IAAkFpkB,EAAU,+BACrI,UAACwL,EAAA,EAAD,WAAaxL,EAAb,uCAA4B,UAACyI,EAAA,EAAD,CAASjK,MAAM,UAAf,UAA0BwlB,EAA1B,KAAkC,SAAC,KAAD,CAAiBvkB,KAAMslB,GAAAA,IAAaC,UAAU,UAAhF,IAA4FhlB,EAAU,6BAAqCkkB,IAAY,QAASA,KAAY,UAACzb,EAAA,EAAD,CAASjK,MAAM,YAAf,UAA4B0lB,GAA5B,KAAsC,SAAC,KAAD,CAAiBzkB,KAAMwlB,GAAAA,IAAOD,UAAU,UAA9E,IAA0FhlB,EAAU,gCAC5S,UAACwL,EAAA,EAAD,WAAaxL,EAAb,uCAA4B,UAACyI,EAAA,EAAD,CAASjK,MAAM,UAAf,UAA0BylB,EAA1B,KAAkC,SAAC,KAAD,CAAiBxkB,KAAMslB,GAAAA,IAAaC,UAAU,UAAhF,IAA4FhlB,EAAU,6BAAqCmkB,IAAY,QAASA,KAAY,UAAC1b,EAAA,EAAD,CAASjK,MAAM,YAAf,UAA4B2lB,GAA5B,KAAsC,SAAC,KAAD,CAAiB1kB,KAAMwlB,GAAAA,IAAOD,UAAU,UAA9E,IAA0FhlB,EAAU,gCAC5S,UAACwL,EAAA,EAAD,WAAaxL,EAAb,kDAAuC,UAACyI,EAAA,EAAD,CAASjK,MAAOslB,EAAgB,UAAY,YAA5C,WAAyD,SAAC,KAAD,CAAiBrkB,KAAMqkB,EAAgBiB,GAAAA,IAAcE,GAAAA,IAAOD,UAAU,UAA/H,IAA2IlB,EAAgB9jB,EAAU,wBAA0B,kBACtO,UAACwL,EAAA,EAAD,WAAaxL,EAAb,kDAAuC,UAACyI,EAAA,EAAD,CAASjK,MAAOulB,EAAgB,UAAY,YAA5C,WAAyD,SAAC,KAAD,CAAiBtkB,KAAMskB,EAAgBgB,GAAAA,IAAcE,GAAAA,IAAOD,UAAU,UAA/H,IAA2IjB,EAAgB/jB,EAAU,wBAA0B,wBAI1O,SAACgI,EAAA,EAAD,CAAQI,QAAS+a,EAAQrf,SAAUA,EAAUtF,MAAM,OAAO2C,GAAI,CAAEgH,aAAc,GAA9E,UACE,SAAC+c,GAAA,EAAD,SAGHrlB,IAAkB,SAACqP,GAAA,EAAD,CAAcC,KAAMA,EAAMC,QAASA,EAAnC,UAA6C,UAACpF,EAAA,EAAD,YAC9D,UAACI,EAAA,EAAD,CAAajJ,GAAI,CAAE0D,QAAS,OAAQsB,IAAK,EAAGqO,eAAgB,iBAA5D,WACE,SAAChJ,EAAA,EAAD,CAAYlN,QAAQ,KAApB,SAA2B0B,EAA3B,6CACA,SAACsP,EAAA,EAAD,CAAalH,QAASgH,QAExB,SAACzG,EAAA,EAAD,KACA,UAACyB,EAAA,EAAD,YACE,SAACmG,EAAA,EAAD,CAAWpP,GAAI,CAAE0O,GAAI,GAArB,UAA0B,UAACzF,EAAA,EAAD,YACxB,UAACnJ,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAzB,WACE,SAACqF,EAAA,EAAD,WAAY,4BAASxL,EAAT,6DACZ,SAACwL,EAAA,EAAD,CAAYrK,GAAI,CAAEmE,SAAU,GAA5B,UAAiC,UAACmD,EAAA,EAAD,CAASjK,MAAO4lB,GAAoB,UAAY,YAAhD,UAA8DA,GAA9D,IAAkFpkB,EAAU,+BAC7H,SAACgI,EAAA,EAAD,CAAQE,KAAK,QAAQE,QAASqc,GAAejmB,MAAM,QAAQ6J,WAAW,SAACwL,GAAA,EAAD,IAAtE,SAAmF7T,EAAnF,8DAEF,SAACwL,EAAA,EAAD,UAAaxL,EAAb,+DAEF,SAACuQ,EAAA,EAAD,CAAWpP,GAAI,CAAE0O,GAAI,GAArB,UAA0B,UAACzF,EAAA,EAAD,YACxB,SAACoB,EAAA,EAAD,CAAYrK,GAAI,CAAEmE,SAAU,GAA5B,UAAiC,6BAC/B,UAAC6f,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,wCAArB,4BAA4E,UAAC,KAAD,CAAW5mB,MAAM,UAAjB,qBAAkC,SAAC,KAAD,CAAiBiB,KAAMslB,GAAAA,IAAaC,UAAU,aAA5J,OAAqL,UAAC,KAAD,CAAWxmB,MAAM,YAAYF,QAAQ,QAArC,sBAAqD,SAAC,KAAD,CAAiBmB,KAAMwlB,GAAAA,IAAOD,UAAU,qBAEpR,SAACxZ,EAAA,EAAD,WAAY,UAAC2Z,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,wCAArB,4GAA2J,kCAA3J,oBAA6L,kCAA7L,6BACZ,SAAC5Z,EAAA,EAAD,WAAY,UAAC2Z,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,uCAArB,WAA4D,6BAAQ,UAAC,KAAD,CAAW5mB,MAAM,YAAYF,QAAQ,QAArC,uBAAsD,SAAC,KAAD,CAAiBmB,KAAMwlB,GAAAA,IAAOD,UAAU,UAA9F,cAApE,iCAAoO,+BAAQ,SAAC,KAAD,CAAWxmB,MAAM,YAAYF,QAAQ,QAArC,gBAAR,SAApO,SAAwT,+BAAQ,SAAC,KAAD,CAAWE,MAAM,YAAYF,QAAQ,QAArC,iBAAR,QAAxT,UACZ,SAACkN,EAAA,EAAD,WAAY,UAAC2Z,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,uCAArB,WAA4D,6BAAQ,UAAC,KAAD,CAAW5mB,MAAM,YAAYF,QAAQ,QAArC,uBAAsD,SAAC,KAAD,CAAiBmB,KAAMwlB,GAAAA,IAAOD,UAAU,UAA9F,cAApE,iCAAoO,+BAAQ,SAAC,KAAD,CAAWxmB,MAAM,YAAYF,QAAQ,QAArC,kBAAR,OAApO,SAAwT,6BAAQ,SAAC,KAAD,CAAWE,MAAM,YAAYF,QAAQ,QAArC,qBAAhU,UACZ,SAACkN,EAAA,EAAD,WAAY,UAAC2Z,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,wCAArB,WAA6D,6BAAQ,UAAC,KAAD,CAAW5mB,MAAM,YAAYF,QAAQ,QAArC,uBAAsD,SAAC,KAAD,CAAiBmB,KAAMwlB,GAAAA,IAAOD,UAAU,UAA9F,kBAArE,6CAAqP,oCAAU,SAAC,KAAD,CAAWxmB,MAAM,YAAYF,QAAQ,QAArC,oBAA/P,SAAyU,qCAAW,SAAC,KAAD,CAAWE,MAAM,YAAYF,QAAQ,QAArC,mBAApV,UACZ,SAACkN,EAAA,EAAD,WAAY,UAAC2Z,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,wCAArB,WAA6D,6BAAQ,UAAC,KAAD,CAAW5mB,MAAM,YAAYF,QAAQ,QAArC,uBAAsD,SAAC,KAAD,CAAiBmB,KAAMwlB,GAAAA,IAAOD,UAAU,UAA9F,kBAArE,0CAAkP,6BAAQ,SAAC,KAAD,CAAWxmB,MAAM,YAAYF,QAAQ,QAArC,qBAA1P,eAEd,UAACiX,GAAA,GAAD,CAAMC,WAAS,EAACuB,QAAS,CAAE9B,GAAI,EAAGqB,GAAI,GAAKnV,GAAI,CAAE0O,GAAI,GAAK4F,QAAS,EAAnE,WACE,SAACF,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UACE,SAACoQ,GAAD,CAAwBC,OAAQ,EAAGC,SAAUvB,EAAQwB,WAAYtB,GAAUS,gBAAiBA,QAE9F,SAACpP,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UACE,SAACoQ,GAAD,CAAwBC,OAAQ,EAAGC,SAAUtB,EAAQuB,WAAYrB,GAAUQ,gBAAiBA,QAE9F,SAACpP,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UACE,SAAC1E,EAAA,EAAD,WACE,UAACnG,EAAA,EAAD,YACE,SAACoB,EAAA,EAAD,CAAYia,cAAY,EAAxB,UAAyB,6BAAQ,UAACN,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,2BAArB,WAAgD,UAAC,KAAD,CAAW5mB,MAAM,UAAjB,oBAAiC,SAAC,KAAD,CAAiBiB,KAAMslB,GAAAA,IAAaC,UAAU,aAA/H,OAAwJ,UAAC,KAAD,CAAWxmB,MAAM,YAAYF,QAAQ,QAArC,sBAAqD,SAAC,KAAD,CAAiBmB,KAAMwlB,GAAAA,IAAOD,UAAU,aAArP,0BACjC,UAAC/jB,EAAA,EAAD,CAAKE,GAAI,CAAE0D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAA1D,WACE,SAAC6B,EAAA,EAAD,CAAQC,WAAS,EAACG,QAAS,kBAAM0a,EAAqB,CAAElkB,KAAM,kBAAmBsjB,OAAQ,UAAWwD,IAAK,GAA9E,EAAoFlnB,MAAOslB,EAAgB,UAAY,YAAazb,UAAYyb,GAA2C,SAACxb,GAAA,EAAD,KAA3B,SAACC,GAAA,EAAD,IAAyCod,SAAS,SAAC,KAAD,CAAiBlmB,KAAMqkB,EAAgBiB,GAAAA,IAAcE,GAAAA,IAAOD,UAAU,UAAnT,SAAgUhlB,EAAhU,gDACA,SAACgI,EAAA,EAAD,CAAQC,WAAS,EAACG,QAAS,kBAAM0a,EAAqB,CAAElkB,KAAM,kBAAmBsjB,OAAQ,UAAWwD,IAAK,GAA9E,EAAoFlnB,MAAOulB,EAAgB,UAAY,YAAa1b,UAAY0b,GAA2C,SAACzb,GAAA,EAAD,KAA3B,SAACC,GAAA,EAAD,IAAyCod,SAAS,SAAC,KAAD,CAAiBlmB,KAAMskB,EAAgBgB,GAAAA,IAAcE,GAAAA,IAAOD,UAAU,UAAnT,SAAgUhlB,EAAhU,6DAMV,SAACuV,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGsB,QAAS,CAAE9B,GAAI,EAAGqB,GAAI,GAAlD,SACGsN,EAAQtmB,KAAI,SAAA4kB,GACX,OAAO,SAAC0D,GAAD,CAA8B1D,OAAQA,EAAQG,MAAOxiB,EAAeqiB,GAASoC,mBAAoBA,GAAoBuB,UAAWnC,EAAaxB,IAAvHA,EAC9B,UAGL,SAACvZ,EAAA,EAAD,KACA,SAACyB,EAAA,EAAD,CAAajJ,GAAI,CAAE2X,GAAI,GAAvB,UACE,SAACxJ,EAAA,EAAD,CAAawW,OAAK,EAAC1d,QAASgH,aAInC,CACD,SAASiW,GAAT,GAA0M,IAAxKE,EAAuK,EAAvKA,SAAUC,EAA6J,EAA7JA,WAAYF,EAAiJ,EAAjJA,OAAQX,EAAyI,EAAzIA,gBACtD3kB,GAAMC,EAAAA,EAAAA,GAAe,CAAC,0BAA2B,UAAjDD,EACR,OAAO,SAACuQ,EAAA,EAAD,WACL,UAACnG,EAAA,EAAD,YACE,UAACoB,EAAA,EAAD,CAAYia,cAAY,EAAxB,WAAyB,4BAASzlB,EAAE,SAAD,OAAUslB,EAAV,UAAnC,KAAoE,UAAC7c,EAAA,EAAD,CAASjK,MAAM,UAAf,UAA0B+mB,EAA1B,KAAoC,SAAC,KAAD,CAAiB9lB,KAAMslB,GAAAA,IAAaC,UAAU,UAAlF,IAA8FhlB,EAAU,6BAAqCwlB,GAAc,QAASA,IAAc,UAAC/c,EAAA,EAAD,CAASjK,MAAM,YAAf,UAA4BgnB,EAA5B,KAAwC,SAAC,KAAD,CAAiB/lB,KAAMwlB,GAAAA,IAAOD,UAAU,UAAhF,IAA4FhlB,EAAU,gCAC5V,UAACiB,EAAA,EAAD,CAAKE,GAAI,CAAE0D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAA1D,WACE,SAAC6B,EAAA,EAAD,CAAQC,WAAS,EAACnE,UAAW0hB,EAAYpd,QAAS,kBAAMuc,EAAgBW,GAAQ,EAA9B,EAAsC9mB,MAAM,UAAU6J,WAAW,SAAC,KAAD,CAAiB5I,KAAMslB,GAAAA,IAAaC,UAAU,UAAjK,SAA8KhlB,EAAE,wBAAD,OAAyBslB,EAAzB,WAC/K,SAACtd,EAAA,EAAD,CAAQC,WAAS,EAACnE,UAAWyhB,EAAUnd,QAAS,kBAAMuc,EAAgBW,GAAQ,EAA9B,EAAqC9mB,MAAM,YAAY6J,WAAW,SAAC,KAAD,CAAiB5I,KAAMwlB,GAAAA,IAAOD,UAAU,UAA1J,SAAuKhlB,EAAE,0BAAD,OAA2BslB,EAA3B,iBAI/K,CACD,SAASM,GAAT,GAAsM,IAAD,MAA1KvD,EAA0K,EAA1KA,MAAOH,EAAmK,EAAnKA,OAAQoC,EAA2J,EAA3JA,mBAAoBuB,EAAuI,EAAvIA,UACpD7lB,GAAMC,EAAAA,EAAAA,GAAe,SAArBD,EAER,EAA+CwiB,IADF5b,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAavJ,KACbolB,EAAR,EAAQA,aAAcG,EAAtB,EAAsBA,qBAChBiD,EAAe,iBAAGpD,QAAH,IAAGA,GAAH,UAAGA,EAAcM,uBAAjB,aAAG,EAAgCf,UAAnC,QAA8C,GAC7D+B,GAAU8B,EAAgBhnB,SAAS,GACnCinB,GAAQ3oB,EAAAA,EAAAA,UAAQ,kBAAMwmB,GAAYgC,EAAlB,GAA8B,CAACA,IAG/CI,GAAe5oB,EAAAA,EAAAA,UAAQ,WAC3B,OAAK4mB,EACE9jB,OAAOoG,KAAK8b,EAAM6D,YAAYlb,QAAO,SAAAmX,GAAS,uBAAIE,EAAM6D,WAAW/D,UAArB,aAAI,EAA6BG,SAASvI,MAAK,SAAAoM,GAAG,MAAI,WAAYA,CAAhB,GAAlD,IADjC,EAErB,GAAE,CAAC9D,EAAM6D,WAAYjC,IAChBC,EAAW6B,EAAgBhnB,SAAS,GACpColB,EAAW4B,EAAgBhnB,SAAS,GAC1C,OAAO,SAACwW,GAAA,GAAD,CAAMG,MAAI,EAAcT,GAAI,EAA5B,UACL,UAAC1E,EAAA,EAAD,CAAWpP,GAAI,CAAEsL,OAAQ,OAAQ2Z,QAASJ,EAAQ,EAAI,WAAQzmB,GAA9D,WACE,UAAC0B,EAAA,EAAD,CAAK+jB,UAAS,eAAU3C,EAAM/hB,OAAO,GAAvB,QAAiCsE,MAAM,OAAOzD,GAAI,CAAE0D,QAAS,QAA3E,WACE,SAAC5D,EAAA,EAAD,CAAKD,UAAU,MAAM2N,IAAK0T,EAAMgE,WAAYllB,GAAI,CAAEsL,OAAQ,IAAK7H,MAAO,OAAQW,IAAK,MACnF,UAACtE,EAAA,EAAD,CAAKE,GAAI,CAAEmE,SAAU,EAAGJ,GAAI,EAAGL,QAAS,OAAQoG,cAAe,SAAUuJ,eAAgB,UAAzF,WACE,SAAChJ,EAAA,EAAD,CAAYlN,QAAQ,KAApB,mBAA0B+jB,EAAMxa,YAAhC,QAAwC,MACxC,UAAC5G,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAzB,WACE,SAACqF,EAAA,EAAD,CAAYlN,QAAQ,YAApB,SAAiC+jB,EAAM/hB,OAAOhD,KAAI,SAACiM,EAAIoB,GAAL,OAAW,4BAAgBpB,EAAhB,KAAoB,SAAC,KAAD,CAAclI,MAAO,IAAzC,IAAgDsJ,EAAK0X,EAAM/hB,OAAO3B,OAAS,EAAK,KAAO,OAA5E4K,EAAtB,OAElD,SAACgC,GAAA,EAAD,CAAatF,OAAO,UAAChF,EAAA,EAAD,YAClB,SAACuK,EAAA,EAAD,WAAY,SAAC/C,EAAA,EAAD,CAASjK,MAAM,UAAf,SAA0BwB,EAA1B,iCACZ,SAACwL,EAAA,EAAD,WAAY,SAAC/B,GAAA,EAAD,CAAWF,GAAE,mBAAc2Y,EAAd,QAA4B5Y,MAAO,oBAC5D,UAACrI,EAAA,EAAD,CAAKqlB,WAAY,EAAGnlB,GAAI,CAAEilB,QAASL,EAAgBhnB,SAAS,GAAK,GAAM,GAAvE,WACE,SAACyM,EAAA,EAAD,WAAY,SAAC/C,EAAA,EAAD,CAASjK,MAAM,UAAf,SAA0BwB,EAA1B,iCACZ,SAACwL,EAAA,EAAD,WAAY,SAAC/B,GAAA,EAAD,CAAWF,GAAE,mBAAc2Y,EAAd,QAA4B5Y,MAAO,+BAIlE,SAACrI,EAAA,EAAD,CAAKE,GAAI,CAAE0D,QAAS,OAAQsB,IAAK,GAAjC,SAAuChG,OAAOC,QAAQylB,GAAWvoB,KAAI,+BAAEqmB,EAAF,KAAW7J,EAAX,YAAsB,SAACtO,EAAA,EAAD,CAA0BrK,GAAI,CAAEmE,SAAU,GAAKhH,QAAQ,YAAvD,UAAoE,UAACmK,EAAA,EAAD,CAAStH,GAAI,CAAEyD,MAAO,QAAUpG,MAAOsb,EAAQ,UAAY,YAA3D,WAAyEyM,EAAAA,GAAAA,IAAiB5C,GAAU7J,MAAvJ6J,EAAvC,aAGzE,UAAC9a,GAAA,EAAD,CAAa1H,GAAI,CAAE,kBAAmB,CAAEgH,aAAc,IAAOF,WAAS,EAAtE,WACE,SAACD,EAAA,EAAD,CAAQK,UAAW6b,GAAW,SAAC3b,GAAA,EAAD,KAA2B,SAACD,GAAA,EAAD,IAAcF,QAAS,kBAAM0a,EAAqB,CAAElkB,KAAM,kBAAmBsjB,OAAAA,EAAQwD,IAAK,GAAnE,EAAyElnB,MAAO0lB,EAAW,YAAc,UAAWyB,SAAS,SAAC,KAAD,CAAiBlmB,KAAMykB,EAAWe,GAAAA,IAAQF,GAAAA,IAAaC,UAAU,UAA9Q,SAA2RhlB,EAA3R,+BACA,SAACgI,EAAA,EAAD,CAAQK,UAAW8b,GAAW,SAAC5b,GAAA,EAAD,KAA2B,SAACD,GAAA,EAAD,IAAcF,QAAS,kBAAM0a,EAAqB,CAAElkB,KAAM,kBAAmBsjB,OAAAA,EAAQwD,IAAK,GAAnE,EAAyElnB,MAAO2lB,EAAW,YAAc,UAAWwB,SAAS,SAAC,KAAD,CAAiBlmB,KAAM0kB,EAAWc,GAAAA,IAAQF,GAAAA,IAAaC,UAAU,UAA9Q,SAA2RhlB,EAA3R,mCAGCimB,EAAatnB,SAAU,SAACsI,EAAA,WAAD,CAAsBrL,MAAO0oB,EAA7B,UACxB,SAACla,EAAA,EAAD,CAAajJ,GAAI,CAAE0D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAAlE,SACG8f,EAAa3oB,KAAI,SAAA6kB,GAAS,OACzB,SAACF,GAAD,CAAkCC,OAAQA,EAAQC,UAAWqE,SAASrE,GAAsBtY,YAAU,EAACuY,kBAAgB,GAAhGD,EADE,YA5BZD,EAmCxB,CAED,SAAS2B,GAAYgC,GACnB,OAAO1lB,OAAOqJ,OAAOqc,GAAW5G,QAAO,SAACwH,EAAK1oB,GAAN,OAAY0oB,GAAO1oB,EAAI,EAAI,EAA3B,GAA+B,EACvE,CClOD,IAAM2oB,GAAS,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAClB,SAASC,GAAT,GAAuG,IAAD,IAArEC,wBAAAA,OAAqE,MAA3C,EAA2C,EAAxCC,EAAwC,EAAxCA,2BAA4B/iB,EAAY,EAAZA,SAC/F9D,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACR,OAAO,SAAC0I,GAAA,EAAD,CAAgBT,WAAS,EAACzJ,MAAOooB,EAA0B,UAAY,UAAW9iB,SAAUA,EACjGmC,MAAO2gB,EAA0B5mB,EAAE,6BAA8B,CAAE8mB,IAAKF,IAA6B5mB,EAAE,6BADlG,SAEJ0mB,GAAOppB,KAAI,SAACwpB,GAAD,OAAS,SAAC3qB,GAAA,EAAD,CAAoBiM,QAAS,kBAAMye,EAA2BC,EAAjC,EAA7B,SAAqEA,EAAM9mB,EAAE,6BAA8B,CAAE8mB,IAAAA,IAAS9mB,EAAE,8BAAzG8mB,EAAxB,KAEf,CCHc,SAASC,KACtB,IAAqBlQ,GAAiBjQ,EAAAA,EAAAA,YAAWC,EAAAA,GAAzCC,UAAa+P,WACb7P,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFggB,EAAiB7mB,OAAOoG,KAAKsQ,GACnC,IAAKmQ,EAAeroB,OAAQ,OAAO,KACnC,IAAMkZ,EAAQmP,EAAe1pB,KAAI,SAAAga,GAAC,OAAItQ,EAAKS,IAAIyM,GAAAA,GAAAA,YAAkBoD,GAA/B,IAClC,OAAO,UAAC/G,EAAA,EAAD,YACL,SAACnG,EAAA,EAAD,WACE,SAACoB,EAAA,EAAD,6BAEF,SAAC7C,EAAA,EAAD,KACA,SAACyB,EAAA,EAAD,UACGyN,EAAMva,KAAI,SAAAqb,GAAC,OAAI,SAAC,MAAD,CAA+CjI,KAAMiI,GAA9BP,KAAKC,UAAUM,EAAE/G,MAA5C,QAGjB,C,4BCRKqV,IAAY1Z,EAAAA,GAAAA,IAAO,SAAPA,CAAiB,CACjC2Z,WAAY,cAGRC,IAAuB5Z,EAAAA,GAAAA,IAAO6Z,GAAAA,EAAP7Z,EAAuB,cAAGxR,MAAH,MAAgB,CAClE0Q,OAAQ,GACRtE,aAAc,EAFoC,IAIrC,SAASkf,GAAT,GAAsK,IAAD,IAA/IC,OAAU1oB,EAAqI,EAArIA,KAAM2oB,EAA+H,EAA/HA,OAAgBC,GAA+G,EAAvHC,OAAuH,EAA/GD,SAASE,EAAsG,EAAtGA,MAAOC,EAA+F,EAA/FA,UAAWC,EAAoF,EAApFA,WAAcC,EAAsE,EAAtEA,cACtGC,EAAW/S,SAAS2S,GAEpBK,EAA4B,aAATnpB,EACnBopB,EAAYN,EAAQF,EAEpBS,GAAe,SAAChB,GAAD,UAAYM,EAAOW,mBAClCC,GAAkB,SAAClB,GAAD,UAAYe,EAAUE,mBACxCE,IAAgBZ,IAAW,iCAAO,wBAAI,SAACP,GAAD,UAAYO,EAAQU,qBAA/B,eAE3BG,GAAiB,SAACpB,GAAD,WAAYqB,EAAAA,GAAAA,IAAahJ,KAAKQ,OAAM,OAAC8H,QAAD,IAACA,EAAAA,EAAcW,YAAYC,QAA3B,OAAqCb,QAArC,IAAqCA,EAAAA,EAAavI,SAGzGnZ,EAAQ,GACRwiB,EAAW,GACXzL,OAAWzd,EAEf,GAAIwoB,EACF/K,EAAoB,IAATuK,EAAgBS,EAC3B/hB,GAAQ,UAACuF,EAAA,EAAD,qCAAoCyc,EAAcH,GAAW,oCAAIK,UAAsB5oB,EAAvF,mDAAgJ,uBAAIsoB,IAApJ,KAAyKO,KACjLK,GAAW,UAACjd,EAAA,EAAD,4BAA2B6c,SACjC,MAAId,EAASC,GAKlB,OAAO,KAJPxK,EAAW,IACX/W,GAAQ,UAACuF,EAAA,EAAD,mCAAkCyc,EAAlC,mDAA8F,uBAAIJ,IAAlG,KAAuHO,KAC/HK,GAAW,UAACjd,EAAA,EAAD,8BAA6B6c,IAGzC,CAED,OAAO,UAACK,GAAA,EAAD,CAAOC,SAjBF,UAiBmBrqB,QAAQ,SAAS6C,GAAI,CAClD,sBAAuB,CACrBmE,SAAU,IAFP,UAKJW,EACAwiB,OACalpB,IAAbyd,IAA0B,UAACzH,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAG3Q,WAAW,SAAvC,UACxBgjB,IAAY,SAACvS,GAAA,GAAD,CAAMG,MAAI,EAAV,UACX,SAAClK,EAAA,EAAD,oBAAgBwR,EAAS4L,QAAQ,GAAjC,UAEF,SAACrT,GAAA,GAAD,CAAMG,MAAI,EAACpQ,SAAU,EAArB,UACE,SAAC6hB,GAAD,CAAsB7oB,QAASwpB,EAAW,cAAgB,gBAAiBlsB,MAAOohB,EAAUxe,MAAM,mBAIzG,C,oJCnCc,SAASqqB,GAAT,GAAwJ,IAAD,IAA3HC,EAA2H,EAA3HA,WAAqBC,EAAsG,EAA/GpF,QAA+G,IAA5FiD,wBAAAA,OAA4F,MAAlE,EAAkE,MAA/DoC,aAAAA,OAA+D,SAAzC5gB,EAAyC,EAAzCA,QAAyC,IAAhC6gB,YAAAA,OAAgC,MAAlBjf,EAAAA,EAAkB,EAC9JuT,GAAM2L,EAAAA,GAAAA,GAAYJ,GAChB5Y,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACFmS,GAAQviB,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,IAAA,OAAkBwd,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAK2E,OAA7B,GAAsC,QAAC3E,QAAD,IAACA,OAAD,EAACA,EAAK2E,SAC/DiH,GAAoB7kB,EAAAA,EAAAA,cAAY,SAAAhD,GAAQ,OAAI,SAAC8nB,GAAA,EAAD,CAAgBhhB,QAASA,EAASjH,GAAI,CAAEsL,OAAQ,QAAhD,SAA2DnL,GAA/D,GAA2F,CAAC8G,IACpIrM,GAAQoB,EAAAA,GAAAA,KACd,IAAKogB,EAAK,OAAO,SAAC0L,EAAD,CAAa9nB,GAAI,CAAE0D,QAAS,OAAQ4H,OAAQ,OAAQ3H,WAAY,SAAU0P,eAAgB,UAA1F,UACf,SAACvT,EAAA,EAAD,CAAKD,UAAU,MAAM2N,IAAK0a,GAAAA,EAAAA,KAAYN,GAAW5nB,GAAI,CAAEyD,MAAO,MAAO6H,OAAQ,OAAQ2Z,QAAS,QAGhG,IAAQzC,EAA4DpG,EAA5DoG,QAASrjB,EAAmDid,EAAnDjd,OAAQoL,EAA2C6R,EAA3C7R,MAAO4d,EAAoC/L,EAApC+L,YAAaC,EAAuBhM,EAAvBgM,SAAUC,EAAajM,EAAbiM,SACjDC,EAAgBnK,KAAK1Z,IAAI0Z,KAAK3Z,IAAIihB,EAAkC,EAATtmB,GAAaoL,GACxEge,EAAe5qB,GAAAA,GAAAA,KAAYwqB,GAC3BlqB,EAAUC,EAAAA,GAAAA,MAAwB,SAAAC,GAAG,OAAIie,EAAI+L,YAAYvqB,SAASO,EAA7B,IACrCd,EAAQY,GAAUuqB,EAAAA,GAAAA,IAAM5tB,EAAM0C,QAAQW,GAASoN,KAAM,KAAOmd,EAAAA,GAAAA,IAAM5tB,EAAM0C,QAAQgP,UAAUjB,KAAM,IACtG,OAAO,SAACyc,EAAD,CAAa9nB,GAAI,CAAEsL,OAAQ,QAA3B,UAAqC,SAACmd,GAAA,EAAD,CAAoBC,YAAazhB,EAAS0hB,QAASX,EAAnD,UAC1C,UAACloB,EAAA,EAAD,CAAK4D,QAAQ,OAAO4H,OAAO,OAA3B,WACE,UAACxL,EAAA,EAAD,CAAK+jB,UAAS,eAAU1kB,EAAV,QAAwBa,GAAI,CAAE4oB,SAAU,WAAYzkB,SAAU,EAAGT,QAAS,OAAQoG,cAAe,SAAUnG,WAAY,SAAU0P,eAAgB,UAA/J,WACE,SAACwV,GAAA,EAAD,CAAiBzM,IAAKA,EAAtB,UACE,SAACtc,EAAA,EAAD,CACED,UAAU,MACV2N,IAAG,iBAAE0T,QAAF,IAAEA,OAAF,EAAEA,EAAO4H,UAAUtG,UAAnB,QAA+B,GAClCxiB,GAAI,CAAEsP,GAAI,EAAGyZ,UAAW,OAAQC,SAAU,aAG9C,UAAClpB,EAAA,EAAD,CAAKE,GAAI,CAAE4oB,SAAU,WAAYnlB,MAAO,OAAQ6H,OAAQ,OAAQrG,EAAG,GAAKggB,QAAS,IAAMvhB,QAAS,OAAQ2P,eAAgB,gBAAiB4V,cAAe,QAAxJ,WACE,SAAC5qB,GAAA,EAAD,CAAM0I,KAAK,QAAQhL,OAAO,wCAAcwO,KAAmBlN,MAAO6rB,GAAAA,GAAAA,aAAsB3e,KACvFsd,IAAgB,SAACxpB,GAAA,EAAD,CAAM0I,KAAK,QAAQhL,OAAO,SAACotB,GAAD,CAAcC,QAASf,GAAYtZ,EAASsa,MAAMC,uBAAuBjB,KAAehrB,MAAO,YAAa2C,GAAI,CACzJupB,SAAU,UAAW,iBAAkB,CACrCA,SAAU,kBAKhB,SAAClrB,GAAA,EAAD,CAAM0I,KAAK,QAAQ/G,GAAI,CAAE4oB,SAAU,WAAYY,OAAQ,EAAG9a,GAAI,EAAGrC,gBAAiBhP,GAChFtB,OAAO,UAACsO,EAAA,EAAD,CAAYrK,GAAI,CAAE0D,QAAS,OAAQsB,IAAK,GAAKjB,GAAI,EAAG0lB,OAAQ,GAA5D,WACL,SAACC,GAAA,EAAD,CAAkBC,UAAU,MAAM7kB,OAAO,SAACuF,EAAA,EAAD,WAAY,SAAC,KAAD,CAAqBuK,QAASuT,MAA8ByB,oBAAkB,EAAnI,UACE,0BAAOppB,GAAAA,EAAS2nB,QAElB,UAAC,KAAD,CAAW9qB,MAAOirB,IAAkB/d,EAAQ,eAAYnM,EAAxD,WAAoEyrB,EAAAA,GAAAA,IAAgB,UAACX,GAAAA,GAAAA,cAAuBf,EAAahpB,EAAQmpB,UAA7C,QAA+D,EAAG3qB,GAAAA,GAAAA,KAAYwqB,IAAeI,cAIvL,SAACzoB,EAAA,EAAD,CAAK4D,QAAQ,OAAOoG,cAAc,SAASuJ,eAAe,gBAAgBrT,GAAI,CAAEiF,EAAG,GAAnF,SACGmjB,EAASjsB,KAAI,SAAC6e,EAAsBxR,GAAvB,OAAqC,SAACsgB,GAAD,CAAmC9O,KAAMA,GAApBxR,EAAIwR,EAAK5e,IAAnE,YAIrB,CACD,SAAS0tB,GAAT,GAA6D,IAAD,IAAlC9O,EAAkC,EAAlCA,KACxB,IAAKA,EAAKvgB,MAAO,OAAO,KACxB,IAAMsvB,EAAQ,oBAAG/O,EAAKgP,aAAR,aAAG,EAAYxsB,cAAf,QAAyB,EACjCysB,EAAS,eAAUnmB,EAAAA,GAAAA,IAAMimB,EAAU,EAAG,IACtCG,EAAOvsB,GAAAA,GAAAA,KAAYqd,EAAK5e,KAC9B,OAAQ,SAAC0D,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAGmlB,aAAa,SAAzC,UACN,UAAC9f,EAAA,EAAD,CAAYrK,GAAI,CAAEmE,SAAU,EAAGT,QAAS,OAAQsB,IAAK,IAAO3H,MAAQ0sB,EAAQ,UAAME,EAAN,SAAyB,aAAsBpqB,UAAU,OAArI,WACE,SAAC6pB,GAAA,EAAD,CAAkBC,UAAU,MAAM7kB,OAAO,SAACuF,EAAA,EAAD,UAAa2Q,EAAK5e,MAAO,SAAC,KAAD,CAAqBwY,QAASoG,EAAK5e,QAAuBwtB,oBAAkB,EAA9I,UACE,0BAAOppB,GAAAA,EAASwa,EAAK5e,UAEvB,qCAAUytB,EAAAA,GAAAA,IAAiB7O,EAAKvgB,MAAOkD,GAAAA,GAAAA,KAAYqd,EAAK5e,OAAxD,OAAgE8tB,SAGrE,CACD,SAASf,GAAT,GAAoE,IAA5CC,EAA2C,EAA3CA,QACdgB,GAAWC,EAAAA,EAAAA,KAAXD,OACFvd,GAAiBlO,EAAAA,EAAAA,IAAW,kBAAM2rB,EAAAA,EAAAA,IAAmBlB,EAASgB,EAAlC,GAA2C,CAAChB,EAASgB,IACvF,OAAOvd,GAAiB,SAAC6c,GAAA,EAAD,CAAkBC,UAAU,YAAY7kB,OAAO,SAACuF,EAAA,EAAD,UAAawC,EAAenG,OAA3E,UAA+F,SAAC2I,GAAA,EAAD,CAAS7B,IAAKX,EAAeY,aAAc1G,KAAM,IAAK/G,GAAI,CAAEuqB,UAAW,SAAUhZ,WAAY,eAAoC,SAACiZ,GAAA,EAAD,GACzP,C,gBClFc,SAASC,KACtB,IAAQ5kB,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFuD,GAAWlN,EAAAA,EAAAA,UAAQ,kBACvBqS,EAAAA,GAAAA,GAAmB1I,GAAMgE,QAAO,gBAAIzB,GAAJ,sBAAYpJ,OAAOqJ,OAAOD,GAAIwQ,MAAK,SAAApB,GAAC,OAAKA,EAAErI,OAAP,GAApC,GADT,GAEvB,CAACtJ,IACH,OAAO,SAAC/F,EAAA,EAAD,CAAKE,GAAI,CAAEyO,IAAK,EAAGC,IAAK,GAAxB,UACL,SAACgc,GAAA,GAAD,CAAS9U,QAAS,CAAE9B,GAAI,EAAG6W,GAAI,EAAG5W,GAAI,EAAG6W,GAAI,GAAKtW,QAAS,EAA3D,SACGlL,EAASjN,KAAI,+BAAEC,EAAF,KAAOuS,EAAP,YACZ,SAACkc,GAAD,CAAmBhc,UAAWF,EAAOG,WAAY1S,GAAnCA,EADF,OAInB,CAED,SAASyuB,GAAT,GAAyG,IAAtFhc,EAAqF,EAArFA,UAAWC,EAA0E,EAA1EA,WACtBgc,GAAqBrlB,EAAAA,EAAAA,YAAWmS,IACtC,GAA0BnS,EAAAA,EAAAA,YAAWK,EAAAA,GAA7BD,EAAR,EAAQA,KAAM+Q,EAAd,EAAcA,QACN7H,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACF/F,GAASrK,EAAAA,EAAAA,IAAW,kBAAMsQ,EAAAA,GAAAA,GAAiBpJ,EAAMiJ,EAAYC,EAAzC,GAAoD,CAAClJ,EAAMiJ,IAC/Eic,GAAiB7uB,EAAAA,EAAAA,UAAQ,kBAAMif,EAAAA,GAAAA,IAAUtM,GAAW,SAAC2I,EAAGwT,GAAJ,OAAgBnQ,EAAAA,GAAAA,IAAW,CAAC,UAAW/L,EAAYkc,GAAnD,GAA3B,GAA0F,CAACnc,EAAWC,IACrI,IAAK9F,EAAQ,OAAO,SAACH,EAAA,EAAD,IAEpB,IAAQ/D,EAAwBkE,EAAxBlE,MAAOxG,EAAiB0K,EAAjB1K,KAAMyG,EAAWiE,EAAXjE,OACrB,OAAO,UAAC8D,EAAA,EAAD,YACL,SAACjE,GAAA,EAAD,CAAkBC,OAAQvG,IAAQ,SAAC+Q,GAAA,EAAD,CAAStI,KAAM,EAAG/G,GAAI,CAAEsP,GAAI,GAAK9B,IAAKlP,IAAUwG,MAAOA,EAAOC,OAAQA,IAAU,SAACuC,EAAA,EAAD,UAAUvC,OAC5H,SAACyC,EAAA,EAAD,KACA,SAACqP,GAAA,GAAD,CAAkB7W,GAAI,CAAEsP,EAAG,GAA3B,SACGtQ,OAAOC,QAAQ4P,GAAW1S,KAAI,+BAAE6uB,EAAF,KAAWxT,EAAX,YAC7B,SAAC,MAAD,CAAgCjI,KAAMiI,EAAGR,SAAUJ,EAAUA,EAAQtQ,IAAIykB,EAAeC,IAAWvwB,WAAQ2D,EAAWyB,UAAWkX,GAAAA,GAC/HkU,UAAWhU,KAAKC,UAAU4T,KAAwB7T,KAAKC,UAAU,CAACpI,EAAYkc,KADzDA,EADM,QAMpC,C,wCCxBc,SAASE,GAAT,GAAqG,IAA3EC,EAA0E,EAA1EA,SAA0E,IAAhEtD,aAAAA,OAAgE,SAA1C5gB,EAA0C,EAA1CA,QAA0C,IAAjC6gB,YAAAA,OAAiC,MAAnBjf,EAAAA,EAAmB,EAC3GuiB,GAASC,EAAAA,GAAAA,GAAUF,GACnBG,GAAc3sB,EAAAA,EAAAA,IAAW,kBAAY,OAANysB,QAAM,IAANA,OAAA,EAAAA,EAAQhvB,MAAOmvB,GAAAA,EAAAA,IAAgBH,EAAOhvB,IAA5C,GAAkD,QAACgvB,QAAD,IAACA,OAAD,EAACA,EAAQhvB,MACpF4rB,GAAoB7kB,EAAAA,EAAAA,cAAY,SAAAhD,GAAQ,OAAI,SAAC8nB,GAAA,EAAD,CAAgBjoB,GAAI,CAAEsL,OAAQ,QAAUrE,QAASA,EAAjD,SAA2D9G,GAA/D,GAA2F,CAAC8G,IACpImc,GAASlnB,EAAAA,EAAAA,UAAQ,kBAAMovB,GAAeF,IAAUI,EAAAA,GAAAA,IAAc,CAACF,EAAYzlB,MAAM4lB,EAAAA,GAAAA,IAAiBL,IAAjF,GAA4F,CAACE,EAAaF,IACjI,IAAKA,IAAWE,IAAgBlI,EAAQ,OAAO,SAAC0E,EAAD,CAAa9nB,GAAI,CAAEsL,OAAQ,QAA3B,UAAqC,SAACkD,EAAA,EAAD,CAAUrR,QAAQ,cAAc6C,GAAI,CAAEyD,MAAO,OAAQ6H,OAAQ,YACjJ,IAAQS,EAAyBqf,EAAzBrf,WAAYsc,EAAa+C,EAAb/C,SACpB,OAAO,SAACP,EAAD,CAAa9nB,GAAI,CAAEsL,OAAQ,QAA3B,UAAqC,SAACmd,GAAA,EAAD,CAAoBC,YAAazhB,EAAS0hB,QAASX,EAAnD,UAC1C,UAACloB,EAAA,EAAD,CAAK4D,QAAQ,OAAO4H,OAAO,OAAO3H,WAAW,UAA7C,WACE,UAAC7D,EAAA,EAAD,CAAK+jB,UAAS,eAAUyH,EAAYnsB,OAAtB,QAAoCa,GAAI,CAAEsL,OAAQ,OAAQsd,SAAU,WAAYzkB,SAAU,EAAGT,QAAS,OAAQoG,cAAe,SAAUnG,WAAY,SAAU0P,eAAgB,YAA3L,WACE,SAACqY,GAAA,EAAD,CAAmBxK,MAAOoK,EAA1B,UACE,SAACxrB,EAAA,EAAD,CACED,UAAU,MACV2N,IAAK8d,EAAYK,OAAOP,EAAO5gB,WAC/BxK,GAAI,CAAEoE,IAAK,EAAG2kB,UAAW,OAAQC,SAAU,aAG/C,UAAClpB,EAAA,EAAD,CAAKE,GAAI,CAAE4oB,SAAU,WAAYnlB,MAAO,OAAQ6H,OAAQ,OAAQrG,EAAG,GAAKggB,QAAS,IAAMvhB,QAAS,OAAQ2P,eAAgB,gBAAiB4V,cAAe,QAAxJ,WACE,SAAC5qB,GAAA,EAAD,CAAM0I,KAAK,QAAQhL,OAAO,4BAASwvB,GAAAA,EAAAA,eAA2BH,KAAmB/tB,MAAM,YACtFwqB,IAAgB,SAACxpB,GAAA,EAAD,CAAM0I,KAAK,QAAQhL,OAAO,SAAC,GAAD,CAAcssB,SAAUA,IAAchrB,MAAO,YAAa2C,GAAI,CACvGupB,SAAU,UAAW,iBAAkB,CACrCA,SAAU,kBAIhB,SAACzpB,EAAA,EAAD,CAAKE,GAAI,CAAE4oB,SAAU,WAAYnlB,MAAO,OAAQ6H,OAAQ,OAAQrG,EAAG,GAAKggB,QAAS,IAAMvhB,QAAS,OAAQ2P,eAAgB,WAAY1P,WAAY,YAAhJ,SACG2nB,EAAYM,gBAAiB,SAACvtB,GAAA,EAAD,CAAM0I,KAAK,QAAQ1J,MAAM,OAAOtB,OAAO,kCAAUgQ,aAGnF,UAACjM,EAAA,EAAD,CAAK4D,QAAQ,OAAOoG,cAAc,SAAS9J,GAAI,CAAEiF,EAAG,GAApD,WACE,SAAC4mB,GAAD,CAAYtc,KAAM6T,EAAO9c,IAAIyM,GAAAA,GAAAA,OAAAA,SAC7B,SAAC8Y,GAAD,CAAYtc,KAAM6T,EAAO9c,IAAIyM,GAAAA,GAAAA,OAAAA,gBAIpC,CACD,SAAS8Y,GAAT,GAAsD,IAAhCtc,EAA+B,EAA/BA,KACpB,OAAKA,EAAKkB,KAAK/J,MACP,SAAC5G,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAGmlB,aAAa,SAAzC,UACN,UAAC9f,EAAA,EAAD,CAAYrK,GAAI,CAAEmE,SAAU,EAAGT,QAAS,OAAQsB,IAAK,GAAKnF,UAAU,OAApE,WACE,SAAC6pB,GAAA,EAAD,CAAkBC,UAAU,MAAM7kB,OAAO,SAACuF,EAAA,EAAD,UAAakF,EAAKkB,KAAK/J,OAAoBkjB,oBAAkB,EAAtG,UACE,0BAAOra,EAAKkB,KAAKnS,UAEnB,2BAAOoS,EAAAA,GAAAA,GAASnB,UANQ,IAS7B,CACD,SAAS4Z,GAAT,GAAgE,IAAxCd,EAAuC,EAAvCA,SACdtZ,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACAqb,GAAWC,EAAAA,EAAAA,KAAXD,OACFvd,GAAiBlO,EAAAA,EAAAA,IAAW,kBAAM2rB,EAAAA,EAAAA,IAAmBjC,EAAWtZ,EAASsa,MAAMC,uBAAuBjB,GAAY,GAAI+B,EAA1F,GAAmG,CAAC/B,EAAU+B,IAChJ,OAAOvd,GAAiB,SAAC6c,GAAA,EAAD,CAAkBC,UAAU,YAAY7kB,OAAO,SAACuF,EAAA,EAAD,UAAawC,EAAenG,OAA3E,UAA+F,SAAC2I,GAAA,EAAD,CAAS7B,IAAKX,EAAeY,aAAc1G,KAAM,IAAK/G,GAAI,CAAEuqB,UAAW,SAAUhZ,WAAY,eAAoC,SAACiZ,GAAA,EAAD,GACzP,C,4BChEM,SAASsB,GAAT,GAA8F,IAAjEC,EAAgE,EAAhEA,UAAgE,IAArDC,kBAAAA,OAAqD,SAC5FC,GAAyD/vB,EAAAA,EAAAA,UAAQ,kBAAM6vB,EAC1EliB,QAAO,SAAAqiB,GAAI,OAAIA,CAAJ,IACXpO,QAAO,SAACqO,EAAKC,GAEZ,OADAD,EAAIC,EAAKrL,QAAUoL,EAAIC,EAAKrL,QAAQZ,KAAKiM,EAAK5J,SAAW2J,EAAIC,EAAKrL,QAAU,CAACqL,EAAK5J,SAC3E2J,CACR,GAAE,CAAC,EALiE,GAMrE,CAACJ,IAEH,OAAO,8BAAG/sB,OAAOC,QAAQgtB,GACtB5sB,MAAK,iCAAOgtB,GAAP,2CAA+C7uB,OAAS6uB,EAAS7uB,MAAjE,IACLrB,KAAI,+BAAEC,EAAF,KAAOkwB,EAAP,YACH,SAACC,GAAD,CAA4BxL,OAAQ3kB,EAAK4vB,kBAAmBA,EAAmBM,QAASA,GAAjElwB,EADpB,KAKR,CACD,SAASmwB,GAAT,GAAuJ,IAAD,EAA1HxL,EAA0H,EAA1HA,OAA0H,IAAlHiL,kBAAAA,OAAkH,SAAvFM,EAAuF,EAAvFA,QACvDE,GAAgB7tB,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,IAAkBmiB,EAAxB,GAAiC,IAClE,IAAKyL,EAAe,OAAO,KAC3B,IAAMC,EAAWH,EAAQ9uB,OACnBkvB,EAAY1tB,OAAOoG,KAAKonB,EAAczH,YAAY5oB,KAAI,SAAC4kB,GAAD,OAAYsE,SAAStE,EAArB,IAA8BlX,QAAO,SAAAsa,GAAM,OAAIA,GAAUsI,CAAd,IACvG,OAAO,SAAC3sB,EAAA,EAAD,WACL,SAAC6sB,GAAA,EAAD,CAAoBH,cAAeA,EAAeC,SAAUA,EAA5D,UACE,SAACnlB,EAAA,EAAD,CAAStH,GAAI,CAAEsL,OAAQ,QAAUjO,MAAO2uB,EAAoB,UAAY,UAAxE,UAAoF,UAAC3hB,EAAA,EAAD,WACjFiiB,EAAQnwB,KAAI,SAAAqmB,GAAO,OAAI4C,EAAAA,GAAAA,IAAiB5C,EAArB,IAD8D,cAC7BgK,EAAc9lB,YADe,QACP,GAC1EgmB,EAAUvwB,KAAI,SAAAqb,GAAC,OAAI,SAAClQ,EAAA,EAAD,CAAStH,GAAI,CAAEkI,GAAI,IAAe7K,MAAM,UAAxC,SAAmDma,GAApBA,EAAnC,YAIvB,CCXc,SAASoV,GAAT,GAA0H,IAA9F7wB,EAA6F,EAA7FA,MAAO8wB,EAAsF,EAAtFA,aAAcC,EAAwE,EAAxEA,kBAAmBC,EAAqD,EAArDA,iBAAkBpqB,EAAmC,EAAnCA,SACnG,GAAgE8C,EAAAA,EAAAA,YAAWC,EAAAA,GAAnEC,UAAkB2b,EAA1B,EAAqBllB,IAAmB4wB,EAAxC,EAAwCA,kBAChBvH,EAA8BpE,GAAgBC,GAA9DE,aAAgBiE,wBAChB1W,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACF8S,GAAcpc,EAAAA,EAAAA,YAAWK,EAAAA,GAEvBD,EAAkBgc,EAAlBhc,KAAM+Q,EAAYiL,EAAZjL,QACd,GAA4B/T,EAAAA,EAAAA,eAASzE,GAArC,eAAO6uB,EAAP,KAAeC,EAAf,KACMC,GAAQhqB,EAAAA,EAAAA,cAAY,kBAAM+pB,OAAU9uB,EAAhB,GAA4B,CAAC8uB,IAEjDE,GAAajqB,EAAAA,EAAAA,cAAY,WACxBkqB,OAAOC,QAAQ,wDACpB9R,EAAAA,GAAAA,SAAoB,SAAAjS,GAClB,IAAMgkB,EAAM1nB,EAAKS,IAAIyM,GAAAA,GAAAA,IAAUxJ,GAAGmS,IAAIjhB,MAClC8yB,GAAKxe,EAASkJ,KAAK7Y,IAAImuB,EAAK,CAAElF,UAAUmF,EAAAA,EAAAA,IAAoBlM,IACjE,IACDvS,EAAS0e,QAAQruB,IAAIyG,EAAKS,IAAIyM,GAAAA,GAAAA,OAAAA,IAAiBtY,MAAQ,CAAE4tB,UAAUmF,EAAAA,EAAAA,IAAoBlM,KACxF,GAAE,CAACA,EAAczb,EAAMkJ,IAElB2e,GAAsBxxB,EAAAA,EAAAA,UAAQ,WAClC,IAAMyxB,GAAY,WAAQ9L,GAE1B,OADKgL,IAAcc,EAAa/W,aAAUxY,GACnCuvB,CACR,GAAE,CAAC9L,EAAagL,IAEXe,GAAoB1xB,EAAAA,EAAAA,UAAQ,kBAAM8C,OAAOqc,YAAYG,EAAAA,GAAAA,KAAgB,SAAAgH,GAAO,MAAI,CACpFA,EACA3c,EAAKS,IAAIyM,GAAAA,GAAAA,IAAUyP,GAAS9G,IAAIjhB,MAFgD,IAAhD,GAG7B,CAACoL,IACAkmB,GAAY7vB,EAAAA,EAAAA,UAAQ,kBAAM0xB,GAAqB5uB,OAAOqJ,OAAOulB,GAChEzxB,KAAI,SAAC0xB,GAAD,OAAoB9e,EAASkJ,KAAK3R,IAAIunB,EAAtC,IACJhkB,QAAO,SAAAqiB,GAAI,OAAIA,CAAJ,GAFY,GAGxB,CAAC0B,EAAmB7e,EAASkJ,OAIzB6V,GAAW5xB,EAAAA,EAAAA,UAAQ,kBAAMsf,EAAAA,GAAAA,KAAgB,SAAAgH,GAAO,OACpD,SAACpO,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UACE,SAAC4T,GAAD,CAAkBG,cAAY,EAACrF,QAASA,EAASmF,WAAYiG,EAAkBpL,GAAUiD,wBAAyBA,EAAyBxe,QAAS,WAClJ,IAAM8mB,EAAQf,EAAkBxK,GAC1BwL,EAAQJ,EAAkBpL,GAChC0K,EAAU,CAAEa,MAAOA,IAAUC,EAAQD,OAAQ3vB,EAAW4vB,MAAAA,GACzD,KALoBxL,EAD6B,GAA7B,GAOb,CAAC0K,EAAWF,EAAmBvH,EAAyBmI,IAEpE,IAAKhX,EAAS,OAAO,KACrB,IAAMoV,EAAoBxQ,EAAAA,GAAAA,OAAkB,SAAAgH,GAAO,OAAIoL,EAAkBpL,KAAa5L,EAAQtQ,IAAIyM,GAAAA,GAAAA,IAAUyP,GAAS9G,IAAIjhB,KAAtE,KAAgFoL,EAAKS,IAAIyM,GAAAA,GAAAA,OAAAA,IAAiBtY,QAAUmc,EAAQtQ,IAAIyM,GAAAA,GAAAA,OAAAA,IAAiBtY,MAEpM,OAAO,SAAC2U,EAAA,EAAD,WACL,UAAC,EAAAlC,SAAD,CAAUC,UAAU,SAACqB,EAAA,EAAD,CAAUrR,QAAQ,cAAcsG,MAAM,OAAO6H,OAAQ,MAAzE,UACG2hB,IAAU,SAACgB,GAAD,CAAsBhB,OAAQA,EAAQxH,wBAAyBA,EAAyBxX,QAASkf,KAC5G,UAAClkB,EAAA,EAAD,YACE,UAACnJ,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAGhF,GAAI,CAAEkJ,GAAI,GAAKiK,SAAS,OAApD,eACa/U,IAAVrC,IAAuB,SAACuL,EAAA,EAAD,CAASjK,MAAM,OAAf,UAAsB,SAACgN,EAAA,EAAD,WAAY,8BAAStO,EAAOiwB,EAAoB,cAAgB,WAC9G,SAACF,GAAD,CAAmBC,UAAWA,EAAWC,kBAAmBA,KAC5D,SAAClsB,EAAA,EAAD,CAAKE,GAAI,CAAEmE,SAAU,EAAGT,QAAS,OAAQ2P,eAAgB,cAExD0Z,GACD,SAAClmB,EAAA,EAAD,CAAQE,KAAK,QAAQ1J,MAAM,UAAU4J,QAASmmB,EAAYzqB,SAAUA,GAAYqpB,EAAmB9kB,WAAW,SAACgnB,GAAA,EAAD,IAA9G,yBACCpB,MAEH,UAAC1Y,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGtU,GAAI,CAAEkJ,GAAI,GAAK0M,QAAS,CAAE9B,GAAI,EAAG6W,GAAI,EAAG5W,GAAI,EAAGoB,GAAI,GAA/E,WACE,SAACf,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UACE,SAACoX,GAAD,CAAgBrD,cAAY,EAACsD,SAAUtlB,EAAKS,IAAIyM,GAAAA,GAAAA,OAAAA,IAAiBtY,UAElEqzB,MAEH,SAAChoB,EAAA,WAAD,CAAsBrL,MAAOizB,EAA7B,UACE,SAACjD,GAAD,aAKT,CAED,SAASwD,GAAT,GAAyK,IAAD,IAAxIhB,OAAUe,EAA8H,EAA9HA,MAAOD,EAAuH,EAAvHA,MAAStI,EAA8G,EAA9GA,wBAAyBxX,EAAqF,EAArFA,QACzEc,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACkBuS,GAAmB7b,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAavJ,IACf+xB,GAAUhrB,EAAAA,EAAAA,cAAY,WACrBkqB,OAAOC,QAAQ,2DACpBve,EAASkJ,KAAK7Y,IAAI4uB,EAAO,CAAE3F,UAAUmF,EAAAA,EAAAA,IAAoBlM,KACzDrT,IACD,GAAE,CAAC+f,EAAOjf,EAAUuS,EAAcrT,IAEnC,OAAO,SAACF,GAAA,EAAD,CAAcC,OAAQggB,EAAO/f,QAASA,EAASmgB,eAAgB,CAAEpF,SAAU+E,EAAQ,KAAO,MAA1F,UACL,SAACllB,EAAA,EAAD,WACE,UAACI,EAAA,EAAD,CAAajJ,GAAI,CAAE0D,QAAS,OAAQ2P,eAAgB,SAAU1P,WAAY,UAAWqB,IAAK,EAAGsG,OAAQ,QAArG,UACGyiB,IAAS,SAACjuB,EAAA,EAAD,CAAKuuB,SAAU,IAAf,UAAoB,SAACC,GAAA,EAAD,CAAc3G,WAAYoG,EAAOtI,wBAAyBA,EAAyB8I,YAAU,EAACC,UAAQ,EAACC,YAAa,CAAEC,YAAY,EAAMC,aAAa,OAClLZ,IAAS,SAACjuB,EAAA,EAAD,CAAK4D,QAAQ,OAAOS,SAAU,IACvC4pB,IAAS,SAACjuB,EAAA,EAAD,CAAK4D,QAAQ,OAAOC,WAAW,SAAS0P,eAAe,SAAvD,UAAgE,SAACxM,EAAA,EAAD,CAAQI,QAASknB,EAASnuB,GAAI,CAAE0D,QAAS,QAAzC,UAAmD,SAACkrB,GAAA,EAAD,CAAc5uB,GAAI,CAAE6uB,SAAU,UAC1Jd,IAAS,SAACjuB,EAAA,EAAD,CAAK4D,QAAQ,OAAOS,SAAU,KACxC,SAACrE,EAAA,EAAD,CAAKuuB,SAAU,IAAf,UAAoB,SAACC,GAAA,EAAD,CAAc3G,WAAYqG,EAAOvI,wBAAyBA,EAAyB8I,YAAU,EAACC,UAAQ,EAACC,YAAa,CAAEC,YAAY,EAAMC,aAAa,aAIhL,C,oJC3Hc,SAASG,GAAexN,GACrC,IAAQvS,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAAsClM,EAAAA,EAAAA,WAAS,kBAAMkM,EAASggB,YAAYzoB,IAAIgb,EAA/B,IAA/C,eAAOyN,EAAP,KAAoBC,EAApB,KAOA,OANAxrB,EAAAA,EAAAA,YAAU,kBAAMwrB,EAAejgB,EAASggB,YAAYzoB,IAAIgb,GAA9C,GAA8D,CAACvS,EAAUuS,KACnF9d,EAAAA,EAAAA,YAAU,kBACRuL,EAASggB,YAAYrN,OAAOJ,GAAc,SAACnL,EAAGjK,EAAGtP,GAAP,MAAmB,WAANsP,GAAkB8iB,EAAepyB,EAA9C,GADlC,GAER,CAAC0kB,EAAc0N,EAAgBjgB,IAG1B,CAAEggB,YAAAA,EAAaE,qBAFM9rB,EAAAA,EAAAA,cAAY,SAAC4B,GAAD,OAAmCuc,GAAgBvS,EAASggB,YAAY3vB,IAAIkiB,EAAcvc,EAA1F,GAAmG,CAACuc,EAAcvS,IAG3J,C,gBCFc,SAASmgB,GAAT,GAA4K,IAAvJC,EAAsJ,EAAtJA,GAAIC,EAAkJ,EAAlJA,GAAIC,EAA8I,EAA9IA,QAASC,EAAqI,EAArIA,cAAqI,IAAtHC,eAAAA,OAAsH,MAArG,EAAqG,MAAlGC,iBAAAA,OAAkG,MAA/E,EAA+E,MAA5EC,cAAAA,OAA4E,MAA5D,MAA4D,EAArDC,EAAqD,EAArDA,gBAAqD,IAApClQ,MAAAA,OAAoC,MAA5B,SAA4B,EACxL,IAAK2P,IAAOC,IAAOC,EACjB,OAAO,KAGT,IAAMx0B,EAAay0B,GAAiBA,EAAczW,IAAMwW,EAAQxW,GAAKyW,EAAcK,IAAMN,EAAQM,EAEjG,OACE,cACE9L,UAAU,aACV,eAAcsL,EACd,eAAcC,EACd,eAAcC,EAAQxW,EACtB,eAAcwW,EAAQM,EACtB,cAAa90B,EAAa20B,EAAmBD,EAN/C,SAQI10B,GAEE,iCACA,SAAC+0B,GAAD,CAAalU,GAAG,sBAAsB8D,MAAOA,EAAO2P,GAAIA,EAAIC,GAAIA,EAAIljB,EAAGqjB,EAAiB,EAAGM,KAAMJ,KACjG,SAACG,GAAD,CAAalU,GAAG,oBAAoB8D,MAAOA,EAAO2P,GAAIA,EAAIC,GAAIA,EAAIljB,EAAGqjB,EAAgBM,KAAK,OAAOC,OAAQL,QAHzG,SAACG,GAAD,CAAalU,GAAG,wBAAwB8D,MAAOA,EAAO2P,GAAIA,EAAIC,GAAIA,EAAIljB,EAAGsjB,EAAkBK,KAAMH,KAQ1G,CACD,SAASE,GAAT,GAAyK,IAAlJpQ,EAAiJ,EAAjJA,MAAO9D,EAA0I,EAA1IA,GAAIyT,EAAsI,EAAtIA,GAAIC,EAAkI,EAAlIA,GAAIljB,EAA8H,EAA9HA,EAAG2jB,EAA2H,EAA3HA,KAAMC,EAAqH,EAArHA,OACjD,OAAOtQ,GACL,IAAK,SACH,OAAO,mBAAQ9D,GAAIA,EAAIyT,GAAIA,EAAIC,GAAIA,EAAIljB,EAAGA,EAAG2jB,KAAMA,EAAMC,OAAQA,IACnE,IAAK,SACH,OAAO,iBAAMpU,GAAIA,EAAI7C,EAAGsW,EAAGjjB,EAAGyjB,EAAGP,EAAGljB,EAAGzI,MAAS,EAAFyI,EAAKZ,OAAU,EAAFY,EAAK2jB,KAAMA,EAAMC,OAAQA,IACtF,IAAK,UACH,OAAO,oBAASpU,GAAIA,EAAIqU,OAAM,UAAKZ,EAAL,YAAWC,EAAK,IAAFljB,EAAd,YAAuBijB,EAAK,IAAFjjB,EAA1B,YAAmCkjB,EAAnC,YAAyCD,EAAzC,YAA+CC,EAAK,IAAFljB,EAAlD,YAA2DijB,EAAK,IAAFjjB,EAA9D,YAAuEkjB,GAAMS,KAAMA,EAAMC,OAAQA,IAEpI,C,uHClBc,SAASE,GAAT,GAAgJ,IAAvHC,EAAsH,EAAtHA,OAAQC,EAA8G,EAA9GA,MAAOC,EAAuG,EAAvGA,OAAQC,EAA+F,EAA/FA,MAAOd,EAAwF,EAAxFA,cAAee,EAAyE,EAAzEA,iBAAkBC,EAAuD,EAAvDA,eAAmBC,GAAoC,cACpJxhB,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACAlJ,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACAhH,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACA2xB,GAAgB/qB,EAAAA,EAAAA,YAAW+G,GAA3BgkB,YAEenS,EAAayQ,IADSrpB,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAavJ,KACb2yB,YAAe1Q,OAEjBoS,GAAcv0B,EAAAA,EAAAA,UAAQ,kBAAO,mBAAImiB,IAAJ,eAAgBmS,QAAhB,IAAgBA,EAAAA,EAAe,KAAK5X,MAAK,SAAA8X,GAAO,OACjFA,EAAQxhB,OAAM,SAAAwM,GAAE,cAAI4T,QAAJ,IAAIA,OAAJ,EAAIA,EAAeqB,YAAY/yB,SAAS8d,EAAxC,GADiE,GAAvD,GAEzB,CAAC2C,EAAQmS,EAAalB,IAEnBsB,GAAuD10B,EAAAA,EAAAA,UAAQ,kBACnEozB,GAAiBA,EAAcqB,aAAe3xB,OAAOqc,YAAYiU,EAAcqB,YAC5Ex0B,KAAI,SAAAuf,GACH,IAAMmV,EAAU9hB,EAASkJ,KAAK3R,IAAIoV,GAClC,MAAO,QAACmV,QAAD,IAACA,OAAD,EAACA,EAASrO,QAASqO,EAC3B,IACAhnB,QAAO,SAAAqiB,GAAI,OAAIA,CAAJ,IANqD,GAQnE,CAACnd,EAASkJ,KAAMqX,IAEZwB,GAAmB3tB,EAAAA,EAAAA,cAAY,SAACC,GAC9BA,EAAEqR,OAAOiH,GAAG9d,SAAS,gBAAkBwF,EAAEqR,OAAOiH,GAAG9d,SAAS,mBAChEyyB,OAAiBjyB,EAEpB,GAAE,CAACiyB,IAEErE,EAAoB4E,GAAmBpV,EAAAA,GAAAA,OAAkB,SAAAgH,GAAO,aAAI,UAAAoO,EAAgBpO,UAAhB,eAA0B9G,MAAO7V,EAAKS,IAAIyM,GAAAA,GAAAA,IAAUyP,GAAS9G,IAAIjhB,KAArE,IAEtE,OAAI81B,EAAaQ,QAAUzB,GAClB,SAAC0B,GAAA,EAAD,CAAmBC,YAAaH,EAAhC,UACL,SAACjoB,EAAA,EAAD,CAAU7I,GAAI,CAAEquB,SAAU,QAASrF,SAAU,SAAW/hB,QAAS,SAAC7D,GAAD,OAAOA,EAAE8tB,iBAAT,EAAjE,UACE,SAACjoB,EAAA,EAAD,WACE,UAACoM,GAAA,EAAD,CAAOrQ,IAAK,EAAZ,WACE,UAACqQ,GAAA,EAAD,CAAO8b,UAAU,MAAMxtB,WAAW,QAAQqB,IAAK,EAA/C,WACE,UAACqQ,GAAA,EAAD,CAAOf,QAAS,GAAKnQ,SAAU,GAA/B,UACG6nB,IAAqB,SAAC1kB,EAAA,EAAD,CAASjK,MAAM,OAAf,UAAsB,4BAASwB,EAAE,+BACvD,SAAC,EAAAqO,SAAD,CAAUC,UAAU,SAACqB,EAAA,EAAD,CAAU/K,MAAO,IAAK6H,OAAQ,KAAlD,UACE,SAACwgB,GAAD,CAAmBC,UAAW/sB,OAAOqJ,OAAOuoB,GAAkB5E,kBAAmBA,UAGrF,SAAC5X,GAAA,GAAD,CAAMG,MAAI,EAACpQ,SAAU,KACrB,SAACgK,EAAA,EAAD,CAAalH,QAAS,kBAAMopB,OAAiBjyB,EAAvB,QAExB,SAACgW,GAAA,GAAD,CAAMC,WAAS,EAAC8c,UAAU,MAAM7c,QAAS,IAAMsB,QAAS,EAAxD,SACG4F,EAAAA,GAAAA,KAAgB,SAAApf,GAAG,OAClB,SAACgY,GAAA,GAAD,CAAMG,MAAI,EAAWT,GAAI,EAAzB,UACE,SAAC,EAAA5G,SAAD,CAAUC,UAAU,SAACqB,EAAA,EAAD,CAAU/K,MAAO,GAAI6H,OAAQ,KAAjD,UACE,SAAC8lB,GAAA,EAAD,CAAkBC,YAAaT,EAAgBx0B,GAAMomB,QAASpmB,OAFlDA,EADE,OAQtB,UAACiO,EAAA,EAAD,YAAY,4BAAS4lB,IAArB,MAAwCqB,EAAAA,GAAAA,IAAsB,MAAVpB,EAAgBZ,EAAczW,EAAI,IAAMyW,EAAczW,EAAGqX,OAC7G,UAAC7lB,EAAA,EAAD,YAAY,4BAAS8lB,IAArB,MAAwCmB,EAAAA,GAAAA,IAAsB,MAAVlB,EAAgBd,EAAcK,EAAI,IAAML,EAAcK,EAAGS,OAC7G,SAAC1G,GAAA,EAAD,CAAkB5kB,MAAO2rB,EAAc,GAAK5xB,EAAE,8BAA+B8qB,UAAU,MAAvF,UACE,2BACE,SAAC9iB,EAAA,EAAD,CAAQ7G,GAAI,CAAEyD,MAAO,QAAUd,UAAW8tB,EAAapzB,MAAM,OAAO4J,QAAS,kBAAMqpB,EAAehB,EAAcqB,YAAnC,EAA7E,SAA+H9xB,EAAE,iCASxI,IACR,C,iDClGoB0yB,GAAAA,WAQnB,WAAmB1Y,EAAW8W,EAAWgB,IAAwB,qBAP1D9X,OAOyD,OANzD2Y,WAMyD,OALzDb,iBAKyD,OAJzDnsB,SAIyD,OAHzDyL,aAGyD,OAFzDwhB,iBAEyD,EAC9DC,KAAK7Y,EAAIA,EACT6Y,KAAKF,MAAQ7B,EACb+B,KAAKf,YAAcA,CACpB,CAOA,OAPA,wBAED,WACE,OAAQe,KAAKF,OAASE,KAAKzhB,SAAWyhB,KAAKD,WAC5C,MACD,SAAa9B,GACX+B,KAAKF,MAAQ7B,CACd,OAnBkB4B,GCoCN,SAASI,GAAT,GAAsG,IAAjFC,EAAgF,EAAhFA,SAAUC,EAAsE,EAAtEA,YAAsE,IAAzDlvB,SAAAA,OAAyD,aAAvCmvB,YAAAA,OAAuC,SAC1GjzB,GAAMC,EAAAA,EAAAA,GAAe,CAAC,0BAA2B,OAAjDD,EACAgH,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACAksB,GAActsB,EAAAA,EAAAA,YAAW+G,GAAzBulB,UACR,GAAwClvB,EAAAA,EAAAA,WAAS,GAAjD,eAAOmvB,EAAP,KAAqBC,EAArB,KACA,GAA8BpvB,EAAAA,EAAAA,WAAS,GAAvC,eAAOqvB,EAAP,KAAgBC,EAAhB,KACQ3B,GAAgB/qB,EAAAA,EAAAA,YAAW+G,GAA3BgkB,YACAzhB,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SAEesP,EAAayQ,IADSrpB,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAavJ,KACb2yB,YAAe1Q,OAEvB,GAAkCxb,EAAAA,EAAAA,WAAUoS,KAA5C,eAAOnS,EAAP,KAAkBsvB,EAAlB,KACA,GAAoCvvB,EAAAA,EAAAA,UAASoS,KAA7C,eAAOjS,EAAP,KAAmBqvB,EAAnB,KACMnvB,GAAYC,EAAAA,EAAAA,cAChB,SAACmvB,EAAa73B,GACZ,GAAqB,kBAAVA,EAAoB,MAAM,IAAI4I,UACzC,cAAe5I,EAAf,GAAO6I,EAAP,KAAUC,EAAV,KACA6uB,EAAa9uB,GACb+uB,EAAc9uB,EACf,GACD,CAAC6uB,EAAcC,KAEjB7uB,EAAAA,EAAAA,YAAU,WAAQ4uB,GAAcnd,KAAWod,EAAcpd,IAAW,GAAE,CAAC8c,IAEvE,OAA4D71B,EAAAA,EAAAA,UAAQ,WAAO,IAAD,IACxE,IAAK61B,EAAW,MAAO,CAAEQ,YAAa,KAAMC,aAAc,MAC1D,IAFwE,EAEpEC,EAAYxd,IACZyd,GAAazd,IACX0d,GAAeC,EAAAA,GAAAA,IAAkBpX,EAAAA,IAAa,SAAAgH,GAAO,YAAI,CAACA,EAAD,iBAAU3c,QAAV,IAAUA,OAAV,EAAUA,EAAMS,IAAIyM,GAAAA,GAAAA,IAAUyP,GAAS9G,IAAIjhB,aAA3C,QAAoD,GAAxD,IACrDo4B,EAA2B,mBAAIxU,IAAJ,eAAgBmS,QAAhB,IAAgBA,EAAAA,EAAe,KAAKr0B,KAAI,SAAAu0B,GAAO,OAAIoC,GAA4BpC,EAAS3hB,EAAzC,IAE1EghB,EAASgC,EAAUlsB,KAAK1J,KAAI,YAAyC,IAA/BwzB,EAA8B,EAArCl1B,MAAgBoe,EAAqB,EAA3B+F,KAAS+R,EAAkB,EAAlBA,YACtD,QAAUvyB,IAANya,EAAiB,OAAO,KACxBA,EAAI4Z,IAAWA,EAAY5Z,GAC3BA,EAAI6Z,IAAWA,EAAY7Z,GAC/B,IAAMka,EAA+B,IAAIxB,GAAc1Y,EAAG8W,EAAGgB,GACvDqC,EAAeF,GAA4BnC,EAAa5hB,GAG9D,OADuByM,EAAAA,GAAAA,OAAkB,SAAAgH,GAAO,OAAImQ,EAAanQ,KAAawQ,EAAaxQ,EAA3C,KAE9CuQ,EAAc9iB,QAAU0f,EAExBoD,EAAcpD,OAAIvxB,EACX20B,IAGkBF,EAAyBja,MAAK,SAAAqa,GAAkB,OACzEzX,EAAAA,GAAAA,OAAkB,SAAAgH,GAAO,OAAIyQ,EAAmBzQ,KAAawQ,EAAaxQ,EAAjD,GADgD,MAIzEuQ,EAActB,YAAc9B,EAE5BoD,EAAcpD,OAAIvxB,GAEb20B,EACR,IACA1zB,MAAK,SAAC0C,EAAGC,GAAJ,OAAUD,EAAG8W,EAAI7W,EAAG6W,CAApB,IAEAqa,EAA+B,GAlCmC,WAmCpDnD,GAnCoD,IAmCxE,2BAA4B,CAE1B,IAF2B,IAAlBoD,EAAiB,QACtBC,OAA+B,EAC3BA,EAAOF,EAAYG,OACzB,GAAID,EAAKzD,EAAIwD,EAAMxD,EAAG,CACpBuD,EAAY/S,KAAKiT,GACjB,KACD,CAEHF,EAAY/S,KAAKgT,EAClB,CA5CuE,gCAkDpE,UAAAD,EAAY,UAAZ,eAAgBra,MAAhB,UAAsBkX,EAAO,UAA7B,aAAsB,EAAWlX,KACnCkX,EAAO,GAAGvrB,IAAM0uB,EAAY,GAAGvD,GACjCuD,EAAYjZ,SAAQ,SAAA7L,GAAQA,EAAG5J,IAAM4J,EAAGuhB,CAAG,IAE3C,IAAM6C,EAAe,CACnBxa,QAASkb,EAAY/2B,KAAI,SAAAg3B,GAAK,MAAI,CAACA,EAAMta,EAAGsa,EAAMxD,EAApB,IAC9B2D,QAASvD,EAAO5zB,KAAI,SAAAg3B,GAAK,MAAI,CAACA,EAAMta,EAAGsa,EAAMxD,EAApB,KAE3B,MAAO,CAAE4C,YAAaxC,EAAOlmB,QAAO,SAAAuE,GAAE,OAAIA,GAAMA,EAAGyK,GAAK/V,GAAasL,EAAGyK,GAAK7V,CAAvC,IAAoDwvB,aAAAA,EAAcC,UAAAA,EAAWC,UAAAA,EACpH,GAAE,CAACX,EAAW1T,EAAQxY,EAAMkJ,EAAUyhB,EAAa1tB,EAAWE,IA3DvDuvB,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,aAAcC,EAAnC,EAAmCA,UAAWC,EAA9C,EAA8CA,UA6DxCa,EAAe3B,IAAY4B,EAAAA,GAAAA,IAAY,OAAC3tB,QAAD,IAACA,OAAD,EAACA,EAAM4tB,aAAc7B,GAG5D8B,EACF70B,EAHkB+yB,KAAc2B,GAAgBA,EAAapkB,SAG3D,uDACA,4DAEN,OAAO,UAACC,EAAA,EAAD,YACL,SAACnG,EAAA,EAAD,WACE,UAACmL,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAG3Q,WAAW,SAAvC,WACE,SAACyQ,GAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAAClK,EAAA,EAAD,UAAcxL,EAAd,uCAEF,SAACuV,GAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAACmV,GAAA,EAAD,CAAkBC,UAAU,MAAM7kB,MAAOgtB,EAAcjzB,EAAE,6CAA+C,GAAxG,UACE,2BACE,SAAC80B,GAAA,EAAD,CACE7I,mBAAoB8G,EACpBgC,UAAW,SAAAnf,GAAM,OAAIod,EAAYpd,EAAhB,EACjBvT,YAAawyB,EACb/wB,SAAUA,WAKlB,SAACyR,GAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAACmV,GAAA,EAAD,CAAkB5kB,MAAQ8sB,EAAgB/yB,EAAE,YAAP,GAAoB8qB,UAAU,MAAnE,UACE,2BAAM,SAAC9iB,EAAA,EAAD,CAAQxJ,MAAM,QAAQ4J,QAAS,kBAAM4qB,OAAYzzB,EAAlB,EAA8BuE,UAAWivB,EAAxE,UACJ,SAAClf,GAAA,EAAD,aAIN,SAAC0B,GAAA,GAAD,CAAMG,MAAI,EAACpQ,SAAU,EAArB,UACE,SAACiG,GAAA,EAAD,CAAauf,UAAU,MAAM7kB,MAAOjG,EAAE,8CAErC2zB,IAAgB,SAACpe,GAAA,GAAD,CAAMG,MAAI,EAAV,UACjB,SAAC1N,EAAA,EAAD,CAAQE,KAAK,QAAQG,UAAWgrB,GAAU,SAAC/qB,GAAA,EAAD,KAAe,SAACC,GAAA,EAAD,IACvD/J,MAAO60B,EAAU,UAAY,YAC7BjrB,QAAS,kBAAMkrB,GAAYD,EAAlB,EAFX,SAEwCrzB,EAFxC,iDAIC2zB,IAAgB,SAACpe,GAAA,GAAD,CAAMG,MAAI,EAAV,UACjB,SAAC1N,EAAA,EAAD,CAAQE,KAAK,QAAQ1J,MAAM,OAAO6J,WAAW,SAAC2sB,GAAA,EAAD,IAAc5sB,QAAS,kBAAMgrB,GAAiBD,EAAvB,EAApE,SAA2GnzB,EAA3G,qDAIL0zB,GAAeA,EAAY/0B,SAAU,SAACgK,EAAA,EAAD,IACrCuqB,GAAaQ,GAAeA,EAAY/0B,SAAU,UAACyL,EAAA,EAAD,YACjD,SAACqK,GAAA,EAAD,CAAUC,KAAMif,GAAgBR,EAAhC,UACE,SAACnpB,EAAA,EAAD,CAAU7I,GAAI,CAAE0O,GAAI,GAApB,UACE,UAACzF,EAAA,EAAD,YACE,SAACoB,EAAA,EAAD,wBACA,SAACypB,GAAD,CAAajuB,KAAI,OAAE2sB,QAAF,IAAEA,OAAF,EAAEA,EAAcxa,WACjC,SAAC3N,EAAA,EAAD,wBACA,SAACypB,GAAD,CAAajuB,KAAI,OAAE2sB,QAAF,IAAEA,OAAF,EAAEA,EAAcc,kBAIvC,SAACS,GAAD,CAAOxB,YAAaA,EAAayB,SAAUjC,EAAUiC,SAAUC,UAAWlC,EAAUkC,UAAW/B,QAASA,IACvGK,EAAY/0B,OAAS,IAAK,SAAC02B,GAAA,GAAD,CACzBvvB,OAAK,EACLlK,MAAO,CAACqI,EAAWE,GACnBtG,SAAUwG,EACVoB,kBAAmBpB,EACnBsB,IAAKiuB,EACLhuB,IAAKiuB,EACLhuB,MAAOguB,EAAYD,GAAa,GAChCluB,kBAAkB,OAClB4vB,iBAAkB,SAAA3c,GAAC,eAAI8Z,EAAAA,GAAAA,IAA8C,OAAlC,UAAAS,EAAUiC,SAASvjB,YAAnB,eAAyByZ,MAAe1S,EAAI,IAAMA,EAAnD,UAAsDua,EAAUiC,SAASvjB,YAAzE,aAAsD,EAAyByZ,KAA9F,EACnBlqB,GAAI,CAAEkI,GAAI,KAAMzE,MAAO,cAI9B,CACD,IAAM2wB,IAAWhoB,EAAAA,GAAAA,IAAO,WAAPA,CAAmB,CAClC3I,MAAO,OACPsiB,WAAY,YACZsO,OAAQ,WACRC,UAAW,QAEb,SAASR,GAAT,GAAoD,IAA7BjuB,EAA4B,EAA5BA,KACrB,OAAO,SAACuuB,GAAD,CAAUG,UAAQ,EAAC95B,MAAOwc,KAAKC,UAAUrR,GAAOoB,QAAS,SAAA7D,GAC9D,IAAMqR,EAASrR,EAAEqR,OACjBA,EAAO+f,eAAiB,EACxB/f,EAAOggB,aAAehgB,EAAOha,MAAM+C,MACpC,GACF,CAED,IAAMk3B,GAAiB,UACjBC,GAAmB,OACnBC,GAAe,UACfC,GAAY,UAClB,SAASd,GAAT,GAKI,IAAD,QALcxB,EAKd,EALcA,YAAayB,EAK3B,EAL2BA,SAAUC,EAKrC,EALqCA,UAAW/B,EAKhD,EALgDA,QAMjD,GAAwCzsB,EAAAA,EAAAA,YAAW+G,GAA3CgkB,EAAR,EAAQA,YAAasE,EAArB,EAAqBA,eACbj2B,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACR,GAA0CgE,EAAAA,EAAAA,YAA1C,eAAOysB,EAAP,KAAsBe,EAAtB,KACMC,GAAiBntB,EAAAA,EAAAA,cAAY,SAAC0b,GAAD,OAAqBiW,EAAe,GAAD,uBAAMtE,QAAN,IAAMA,EAAAA,EAAe,IAArB,CAA0B3R,IAA7D,GAAsE,CAACiW,EAAgBtE,IACpHuE,GAAe5xB,EAAAA,EAAAA,cAAY,SAAApI,GAC3BA,GAASA,EAAMi6B,QAAUj6B,EAAMk6B,QAAQ5E,EA0F/C,SAAyB6E,EAAkBC,EAAkB1b,EAAmB5T,GAC9E,IAAMuvB,EAAmBC,MAAMC,KAAKnU,SAASoU,iBAAiB,gBAC3DzX,QAAO,SAAC0X,EAAQC,GACf,MAA8CD,EAAeE,QAA7CC,EAAhB,EAAQX,OAAyBY,EAAjC,EAAyBX,OACnBY,EAAY1X,KAAK2X,KAAK,SAACZ,EAAWS,EAAY,GAAxB,SAA6BR,EAAWS,EAAY,IAChF,EAA8CH,EAAeC,QAA7CK,EAAhB,EAAQf,OAAyBgB,EAAjC,EAAyBf,OAEzB,OAAOY,GADW1X,KAAK2X,KAAK,SAACZ,EAAWa,EAAY,GAAxB,SAA6BZ,EAAWa,EAAY,IAE5ER,EACAC,CACL,IATsB,QAazB,OADiBtX,KAAK2X,KAAK,SAACZ,EAAWE,EAAiBJ,OAAW,GAAxC,SAA6CG,EAAWC,EAAiBH,OAAW,IAC7Fxb,EACd5T,EAAKua,MAAK,SAAA6V,GAAC,OAAIA,EAAEpd,KAAOuc,EAAiBc,QAAUD,EAAEtG,KAAOyF,EAAiBe,MAAlE,SACX/3B,CACL,CA3G+Dg4B,CAAgBr7B,EAAMi6B,OAAQj6B,EAAMk6B,OAAQ,GAAI1C,GAC7G,GAAE,CAAClC,EAAkBkC,IAGhB8D,EAAcC,GAAiBtC,EAAUn1B,GACzC03B,EAAcD,GAAiBrC,EAAWp1B,GAEhD,OAAO,SAAC23B,GAAA,EAAD,CAAqB/yB,MAAM,OAAO6H,OAAQ,IAA1C,UACL,UAACmrB,GAAA,EAAD,CAAe/a,GAAG,iBAAiB7V,KAAM0sB,EAAatrB,QAAS8tB,EAAc35B,MAAO,CAAEs7B,OAAQ,WAA9F,WACE,SAACC,GAAA,EAAD,CAAeC,gBAAgB,SAC/B,SAACC,GAAA,EAAD,CACEC,QAAQ,IACRpY,MAAM,SACNwL,KAAI,UAAE8J,EAASvjB,YAAX,aAAE,EAAeyZ,KACrB6M,OAAQ,CAAC,OAAQ,QACjBC,KAAM,CAAEnH,KAAM,SACdpyB,KAAK,SACLw5B,cAAe,SAAAzf,GAAC,OAAIA,EAAI,IAAQA,EAAEiQ,UAAYjQ,EAAEiQ,QAAQ,EAAxC,EAChB1rB,OAAO,SAACm7B,GAAA,EAAD,CAAOrH,KAAK,QAAQsH,GAAI,GAAxB,SAA6Bd,IACpC/qB,OAAQ,MAEV,SAAC8rB,GAAA,EAAD,CACE1wB,KAAK,MACLqwB,OAAQ,CAAC,OAAQ,QACjB7M,KAAI,UAAE+J,EAAUxjB,YAAZ,aAAE,EAAgByZ,KACtBmN,eAAe,EACfL,KAAM,CAAEnH,KAAM,SACdpyB,KAAK,SACL1B,OAAO,SAACm7B,GAAA,EAAD,CAAOrH,KAAK,QAAQyH,OAAQ,GAAIC,IAAK,GAArC,SAA0ChB,IACjD9yB,MAAO,OAET,SAAC+zB,GAAA,EAAD,CACE7jB,SAAS,SAACqc,GAAD,CACPC,OAAQoG,EACRnG,MAAK,UAAE8D,EAASvjB,YAAX,aAAE,EAAeyZ,KACtBiG,OAAQoG,EACRnG,MAAK,UAAE6D,EAAUxjB,YAAZ,aAAE,EAAgByZ,KACvBoF,cAAeA,EACfe,iBAAkBA,EAClBC,eAAgBA,IAElBxf,QAAQ,QACR2mB,aAAc,CAAExO,cAAe,OAAQyN,OAAQ,QAC/CA,QAAQ,KAEV,SAACgB,GAAA,EAAD,CAAQrI,QAAO,mBACT6C,EAAU,CAAC,CAAExW,GAAI,MAAOjhB,MAAOoE,EAAF,0CAAyBpB,KAAM,OAAsBJ,MAAOw3B,KAAe,IAD/F,CAEb,CAAEnZ,GAAI,QAASjhB,MAAOoE,EAAF,+CAA8BpB,KAAM,SAAUJ,MAAOq3B,IACzE,CAAEhZ,GAAI,cAAejhB,MAAOoE,EAAF,iDAAgCpB,KAAM,SAAUJ,MAAOs3B,IACjF,CAAEjZ,GAAI,UAAWjhB,MAAOoE,EAAF,4CAA2BpB,KAAM,UAAWJ,MAAOu3B,QAE1E1C,IAAW,SAACyF,GAAA,EAAD,CACVb,QAAQ,MACRhH,OAAQ+E,GACRp3B,KAAK,aACLm6B,cAAY,EACZC,YAAa,EACbC,mBAAmB,EACnBC,KAAK,EACLC,WAAW,KAEb,SAACC,GAAA,EAAD,CACEnB,QAAQ,QACRgB,mBAAmB,EACnBtY,OAAO,SAAC0P,GAAD,CAAWI,cAAeA,EAAeI,gBAAiBgF,QAEnE,SAACuD,GAAA,EAAD,CACEnB,QAAQ,cACRgB,mBAAmB,EACnBtY,OAAO,SAAC0P,GAAD,CAAW1P,MAAM,SAAS8P,cAAeA,EAAeI,gBAAiBiF,QAElF,SAACsD,GAAA,EAAD,CACEnB,QAAQ,UACRgB,mBAAmB,EACnBtY,OAAO,SAAC0P,GAAD,CAAW1P,MAAM,UAAU8P,cAAeA,EAAeI,gBAAiBkF,WAIxF,CAED,SAAS9B,GAA4BnC,EAAuB5hB,GAE1D,IAAMmpB,EAA4Cl5B,OAAOqc,YAAYsV,EAAYx0B,KAAI,SAAA0xB,GACnF,IAAM3B,EAAOnd,EAASkJ,KAAK3R,IAAIunB,GAC/B,OAAO3B,EAAO,CAACA,EAAK1J,QAAS0J,EAAKxQ,IAAM,EACzC,KAED,OAAOkX,EAAAA,GAAAA,IAAkBpX,EAAAA,IAAa,SAAAgH,GAAO,YAAI,CAACA,EAAD,UAAU0V,EAAmB1V,UAA7B,QAAyC,GAA7C,GAC9C,CAqBD,SAAS8T,GAAiB/mB,EAAe1Q,GAAS,IAAD,cAC/C,MAAkC,kBAA3B,UAAO0Q,EAAKkB,YAAZ,aAAO,EAAW/J,MACrB6I,EAAKkB,KAAK/J,KADP,UAEA7H,EAAE,GAAD,iBAAI0Q,EAAKkB,YAAT,iBAAI,EAAW/J,YAAf,aAAI,EAAiB3L,MAAMqN,GAA3B,sBAAiCmH,EAAKkB,YAAtC,iBAAiC,EAAW/J,YAA5C,aAAiC,EAAiB3L,MAAMoN,SAFzD,OAEoE,UAAAoH,EAAKkB,YAAL,SAAW0nB,WAAX,qBAA4B5oB,EAAKkB,YAAjC,aAA4B,EAAW0nB,YAAe,GAClI,CClUM,I,MAAMC,GAAkC,CAAC,QAAS,SAAU,WAEpD,SAASC,GAAT,GAEX,IAAD,IAF6C11B,SAAAA,OAE7C,SACO9D,GAAMC,EAAAA,EAAAA,GAAe,YAArBD,EAER,EAAiEwiB,IADpB5b,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAavJ,KACGiE,EAAxB,EAAQmhB,aAAgBnhB,aAAgBshB,EAAxC,EAAwCA,qBAExC,OAAO,SAAC7hB,EAAA,EAAD,CAAK4D,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAhD,SACJozB,GAAgCj8B,KAAI,SAAAqmB,GACnC,IAAM8V,EAASj4B,EAAamiB,GAAShlB,OACrC,OAAO,UAACsC,EAAA,EAAD,YACL,SAAC0H,EAAA,EAAD,KACA,UAACyB,EAAA,EAAD,CAAajJ,GAAI,CAAEoO,GAAI,GAAvB,WACE,UAACtO,EAAA,EAAD,CAAKE,GAAI,CAAE0D,QAAS,OAAQsB,IAAK,EAAGrB,WAAY,SAAUuF,GAAI,GAA9D,WACE,SAACwgB,GAAA,EAAD,CAAkBC,UAAU,MAAM7kB,OAAO,SAACuF,EAAA,EAAD,UAAaxL,EAAE,YAAD,OAAa2jB,MAApE,UACE,2BAAO4C,EAAAA,GAAAA,IAAiB5C,QAE1B,SAAC1iB,EAAA,EAAD,CAAKqE,SAAU,EAAf,UACE,SAACmD,EAAA,EAAD,CAASjK,MAAM,OAAf,SAAuBi7B,EAAM,UAAMA,EAAN,wBAE/B,SAACzxB,EAAA,EAAD,CAAQxJ,MAAM,QAAQ0J,KAAK,QAAQpE,UAAWtC,EAAamiB,GAAShlB,QAAUmF,EAAU3C,GAAI,CAAEu4B,IAAK,EAAG7pB,IAAK,GACzGzH,QAAS,kBAAM0a,EAAqB,CAAElkB,KAAM,cAAe+kB,QAAAA,GAAlD,EADX,UAEE,SAAC9P,GAAA,EAAD,UAGJ,SAAC0B,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACG4U,GAAAA,GAAAA,cAAuB1G,GAASrmB,KAAI,SAACgsB,EAAa3e,GACjD,IAAMvL,EAAUC,EAAAA,GAAAA,MAAwB,SAAAC,GAAG,OAAIgqB,EAAYvqB,SAASO,EAAzB,IACrCd,EAAQgD,EAAamiB,GAAS5kB,SAASuqB,GAA/B,OACVlqB,QADU,IACVA,EAAAA,EAAW,UACX,YACJ,OAAO,SAACmW,GAAA,GAAD,CAAMG,MAAI,EAAmBpQ,SAAU,EAAG2P,GAAKtK,EAAI,GAAiB,WAAZgZ,EAAwB,OAAIpkB,EAApF,UACL,SAACsrB,GAAA,EAAD,CAAkBC,UAAU,MAAM7kB,OAAO,SAACuF,EAAA,EAAD,WAAY,6BAAQ,SAAC,KAAD,CAAqBuK,QAASuT,QAAuCyB,oBAAkB,EAApJ,UACE,SAAC/iB,EAAA,EAAD,CAAQC,WAAS,EAACC,KAAK,QAAQ1J,MAAOA,EAAO2C,GAAI,CAAE6uB,SAAU,QAASvjB,OAAQ,OAAQ2d,cAAetmB,EAAW,YAASvE,EAAWs4B,OAAQ/zB,EAAW,YAASvE,GAC9J6I,QAAS,kBAAM0a,EAAqB,CAAElkB,KAAM,cAAe+kB,QAAAA,EAAS2F,YAAAA,GAA3D,EADX,SAEG3nB,GAAAA,EAAS2nB,QAJOA,EAQxB,WA7BU3F,EAiClB,KAEJ,CC5Cc,SAASgW,GAAT,GAA6H,IAArFziB,EAAoF,EAApFA,YAAaC,EAAuE,EAAvEA,eAAuE,IAAvDrT,SAAAA,OAAuD,SACnIixB,GAAYzwB,EAAAA,EAAAA,cAAY,SAACgD,EAAgBsyB,EAAoBC,GAAuB,IAAD,EACjFC,GAAY,WAAQ5iB,GACpB6iB,EAAa3hB,KAAKC,UAAUuhB,GAC5BI,EAAeJ,GAAO,QAAO1iB,EAAY6iB,SAAgBx6B,EACzD06B,EAAU7hB,KAAKC,UAAU/Q,GACzB4yB,GAAS,kBAAQhjB,EAAY+iB,UAApB,QAAgC,SAE9B16B,IAAbs6B,GAA0BG,EAAcE,EAAU5Y,KAAK0Y,EAAaH,IACnEK,EAAU5Y,KAAK,CAAE1lB,MAAO,EAAGkI,UAAU,IAC1Cg2B,EAAaG,GAAWC,OAEP36B,IAAbs6B,GAA0BG,IAC5BA,EAAaG,OAAON,EAAU,GACxBG,EAAar7B,OAAQm7B,EAAaC,GAAcC,SAC1CF,EAAaC,IAE3B5iB,GAAe,WAAK2iB,GACrB,GAAE,CAAC3iB,EAAgBD,IAEdkjB,GAAY91B,EAAAA,EAAAA,cAAY,SAACgD,EAAgBnI,GAC7C,IAAM26B,GAAY,WAAQ5iB,GACpB+iB,EAAU7hB,KAAKC,UAAU/Q,GACzB4yB,GAAS,QAAOhjB,EAAY+iB,IAClCC,EAAUC,OAAOh7B,EAAO,GAClB+6B,EAAUv7B,OAAQm7B,EAAaG,GAAWC,SACpCJ,EAAaG,GACzB9iB,GAAe,WAAK2iB,GACrB,GAAE,CAAC3iB,EAAgBD,IAEdmjB,GAAiB/1B,EAAAA,EAAAA,cAAY,SAACgD,EAAgBnI,EAAevD,GACjE,IAAMk+B,GAAY,WAAQ5iB,GACpB+iB,EAAU7hB,KAAKC,UAAU/Q,GACzB4yB,GAAS,QAAOhjB,EAAY+iB,IAClCC,EAAU/6B,IAAV,oBAAwB+6B,EAAU/6B,IAAlC,IAA0CvD,MAAAA,IAC1Ck+B,EAAaG,GAAWC,EACxB/iB,GAAe,WAAK2iB,GACrB,GAAE,CAAC3iB,EAAgBD,IAEdojB,GAAoBh2B,EAAAA,EAAAA,cAAY,SAACgD,EAAgBnI,EAAe2E,GACpE,IAAMg2B,GAAY,WAAQ5iB,GACpB+iB,EAAU7hB,KAAKC,UAAU/Q,GACzB4yB,GAAS,QAAOhjB,EAAY+iB,IAClCC,EAAU/6B,IAAV,oBAAwB+6B,EAAU/6B,IAAlC,IAA0C2E,SAAAA,IAC1Cg2B,EAAaG,GAAWC,EACxB/iB,GAAe,WAAK2iB,GACrB,GAAE,CAAC3iB,EAAgBD,IAEpB,OAAO,gCACJ/W,OAAOC,QAAQ8W,GAAa7W,SAAQ,+BAAE45B,EAAF,KAAWM,EAAX,mBACnCA,QADmC,IACnCA,OADmC,EACnCA,EAAUj9B,KAAI,SAACk9B,EAASr7B,GAAV,OACZ,SAACs7B,GAAD,CAA8BnzB,KAAM8Q,KAAKsiB,MAAMT,GAAUO,QAASA,EAASr7B,MAAOA,EAAO41B,UAAWA,EAAWqF,UAAWA,EAAWO,SAAUN,EAAgBO,YAAaN,EAAmBx2B,SAAUA,GAAem2B,EAAU96B,EADtN,GADqB,KAKrC,SAACs7B,GAAD,CAA8B1F,UAAWA,EAAWqF,UAAWA,EAAWO,SAAUN,EAAgBO,YAAaN,EAAmBx2B,SAAUA,MAEjJ,CAYD,SAAS22B,GAAT,GAA2J,IAAD,EAAlHnzB,EAAkH,EAAlHA,KAAMkzB,EAA4G,EAA5GA,QAASr7B,EAAmG,EAAnGA,MAAO41B,EAA4F,EAA5FA,UAAWqF,EAAiF,EAAjFA,UAAWO,EAAsE,EAAtEA,SAAUC,EAA4D,EAA5DA,YAAa92B,EAA+C,EAA/CA,SACjG9D,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACAgH,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFnJ,GAAWyG,EAAAA,EAAAA,cAAY,SAACU,GAAD,OAA6BsC,QAAmB/H,IAAVJ,GAAwBw7B,EAASrzB,EAAMnI,EAAP,OAAc6F,QAAd,IAAcA,EAAAA,EAAO,EAA3F,GAA+F,CAAC21B,EAAUrzB,EAAMnI,IACvI07B,EAAc,CAAEz0B,EAAG,EAAGqN,UAAW,GAAInO,SAAU,EAAGsO,WAAY,GAE9DknB,GAAmCnG,EAAAA,GAAAA,IAAa3tB,EAAK4tB,aAAN,OAAoBttB,QAApB,IAAoBA,EAAAA,EAAQ,IAC3EyzB,EAAgD,OAAjB,OAAnBD,QAAmB,IAAnBA,GAAA,UAAAA,EAAqBlpB,YAArB,eAA2ByZ,MAE7C,OAAO,UAACxiB,GAAA,EAAD,CAAa1H,GAAI,CAAE,4BAA6B,CAAEquB,SAAU,IAAM5qB,MAAO,QAAzE,YACF41B,KAAalzB,QAAmB/H,IAAVJ,IAAwB,SAAC6I,EAAA,EAAD,CAAQ7G,GAAI05B,EAAar8B,MAAOg8B,EAAQ12B,SAAW,YAAc,UAAWsE,QAAS,kBAAMwyB,EAAYtzB,EAAMnI,GAAQq7B,EAAQ12B,SAAxC,EAAmDA,SAAUA,EAAlJ,SAC9C02B,EAAQ12B,UAAW,SAACyE,GAAA,EAAD,KAA2B,SAACD,GAAA,EAAD,OAEjD,SAACwsB,GAAA,EAAD,CAA4BkG,kBAAgB,EAAC/O,mBAAoB3kB,EAAMytB,UAAW,SAACnf,GAAD,OAAYmf,EAAUnf,EAAQtO,EAAMnI,EAApC,EAA4CkD,YAAarC,EAAE,uCAC7I,SAACwT,GAAA,GAAD,CAAqCrS,GAAI,CAAEsS,UAAW,IAAKnO,SAAU,GAArE,UACE,SAACkO,GAAA,GAAD,CACEE,OAAK,EACL5P,UAAWwD,GAAQxD,EACnBlI,MAAK,OAAE4+B,QAAF,IAAEA,OAAF,EAAEA,EAAS5+B,MAChBsX,YAAY,aACZrV,SAAUA,EACVsD,GAAI,CAAE+D,GAAI,GACVE,WAAY,CAAEjE,GAAI,CAAEkE,UAAW,UAC/BsO,aAAconB,EAAY,SAAMx7B,QAGjC+H,QAAmB/H,IAAVJ,IAAwB,SAAC6I,EAAA,EAAD,CAAQ7G,GAAI05B,EAAar8B,MAAM,QAAQ4J,QAAS,kBAAMgyB,EAAU9yB,EAAMnI,EAAtB,EAA8B2E,SAAUA,EAAxF,UAClC,SAACm3B,GAAA,EAAD,CAAejL,SAAS,cAG7B,CCzGc,SAASkL,GAAT,GAAuE,IAAD,IAA5Cp3B,SAAAA,OAA4C,SAC3E9D,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EAER,EAAgEwiB,IADnB5b,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAavJ,KACG2Z,EAAxB,EAAQyL,aAAgBzL,YAAe4L,EAAvC,EAAuCA,qBACjC3L,GAAiB7S,EAAAA,EAAAA,cAAY,SAAC4S,GAAD,OAA8B4L,EAAqB,CAAE5L,YAAAA,GAArD,GAAqE,CAAC4L,IAEzG,OAAO,UAAC7hB,EAAA,EAAD,YACL,SAACsP,EAAA,EAAD,WACE,UAACnG,EAAA,EAAD,CAAajJ,GAAI,CAAE0D,QAAS,OAAQsB,IAAK,EAAGqO,eAAgB,iBAA5D,WACE,SAAChJ,EAAA,EAAD,UAAaxL,EAAb,iDACA,SAACuL,GAAA,EAAD,CAAatF,OAAO,SAACuF,EAAA,EAAD,UAAaxL,EAAb,0DAGxB,SAACiB,EAAA,EAAD,CAAK4D,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,GAAhD,UACE,SAACwzB,GAAD,CAA8BziB,YAAaA,EAAaC,eAAgBA,EAAgBrT,SAAUA,QAGvG,C,0FCNK+J,GAA0BC,EAAAA,MAAW,kBAAM,6BAAN,IAE5B,SAASqtB,GAAT,GAAoE,IAAD,IAA5Cr3B,SAAAA,OAA4C,SACxE9D,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACkByiB,GAAmB7b,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAavJ,IACrB,EAAoEilB,GAAgBC,GAA5D2Y,EAAxB,EAAQzY,aAAgByY,gBAAmBtY,EAA3C,EAA2CA,qBACnC5S,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAAgCmrB,EAAAA,EAAAA,IAAa,GAA7C,eAAO9sB,EAAP,KAAa4U,EAAb,KAAqB/T,EAArB,KACA,GAA8DpL,EAAAA,EAAAA,UAASkM,EAASorB,gBAAgB7zB,OAAhG,eAA4B8zB,EAA5B,KAASC,kBAA4CC,EAArD,MACA92B,EAAAA,EAAAA,YAAU,kBAAMuL,EAASorB,gBAAgBzY,QAAO,SAACxV,EAAGquB,GAAJ,OAAWD,EAAMC,EAAjB,GAAtC,GAA6D,CAACxrB,EAAUurB,IAElF,IAAMD,GAAoBn+B,EAAAA,EAAAA,UAAQ,kBAAM,QAAI,IAAI0d,IAAIwgB,IAAwBvwB,QAAO,SAAA2wB,GAAE,OAAIzrB,EAASsa,MAAM/iB,IAAIk0B,EAAvB,GAAnD,GAAgF,CAACzrB,EAAUqrB,IACvHK,GAAUt3B,EAAAA,EAAAA,cAAY,SAACk3B,GAAD,OAAuCtrB,EAASorB,gBAAgB/6B,IAAI,CAAEi7B,kBAAAA,GAAtE,GAA4F,CAACtrB,IAEnH2rB,GAAcv3B,EAAAA,EAAAA,cAAY,SAACw3B,EAAWC,GAC1C,IAAMC,GAAG,QAAOR,GACZp8B,EAAU48B,EAAIF,GAClBE,EAAI7B,OAAO2B,EAAW,GACtBE,EAAI7B,OAAO4B,EAAS,EAAG38B,GACvBw8B,EAAQI,EACT,GAAE,CAACR,EAAmBI,IACjBK,GAAa33B,EAAAA,EAAAA,cAAY,SAACw3B,GAC9B,IAAME,GAAG,QAAOR,GAChBQ,EAAI7B,OAAO2B,EAAW,GACtBF,EAAQI,EACT,GAAE,CAACR,EAAmBI,IACjBM,GAAU53B,EAAAA,EAAAA,cAAY,SAACq3B,GAAD,OAAsBC,EAAQ,GAAD,gBAAKJ,GAAL,CAAwBG,IAArD,GAA2D,CAACH,EAAmBI,IACrGO,GAAY73B,EAAAA,EAAAA,cAAY,kBAAMs3B,EAAQ,GAAd,GAAmB,CAACA,IAE5CQ,GAAW/+B,EAAAA,EAAAA,UAAQ,WACvB,IAAI++B,EAAWZ,EAAkB78B,OAC3BQ,EAAQq8B,EAAkBa,QAAQ5Z,GAExC,OADItjB,GAAS,IAAGi9B,EAAWj9B,GACpBi9B,CACR,GAAE,CAAC3Z,EAAc+Y,IACZc,GAAqBj/B,EAAAA,EAAAA,UAAQ,WACjC,OAAO6S,EAASsa,MAAMjkB,KAAK5H,OAAS,EAAIy9B,CACzC,GAAE,CAACA,EAAUlsB,IACRqsB,GAAcl/B,EAAAA,EAAAA,UAAQ,WAC1B,OAAO6S,EAASsa,MAAMjkB,KAAK5H,OAAS68B,EAAkB78B,MACvD,GAAE,CAAC68B,EAAmBtrB,IAEvB,OAAO,UAACjP,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAzB,WACL,SAAC+I,GAAA,EAAD,CAAcC,KAAMZ,EAAMa,QAASA,EAASmgB,eAAgB,CAAEpF,SAAU,MAAxE,UAAgF,UAACngB,EAAA,EAAD,YAC9E,SAACI,EAAA,EAAD,WACE,UAACmL,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAACF,GAAA,GAAD,CAAMG,MAAI,EAACpQ,SAAU,EAArB,UACE,SAACkG,EAAA,EAAD,CAAYlN,QAAQ,KAApB,SAA0B0B,EAA1B,oDAEF,SAACuV,GAAA,GAAD,CAAMG,MAAI,EAACvU,GAAI,CAAE0O,IAAK,GAAtB,UACE,SAACP,EAAA,EAAD,CAAalH,QAASgH,YAI5B,SAACzG,EAAA,EAAD,KACA,UAACyB,EAAA,EAAD,YACE,SAACmG,EAAA,EAAD,CAAWpP,GAAI,CAAE0O,GAAI,GAArB,UACE,UAACzF,EAAA,EAAD,YACE,SAACoB,EAAA,EAAD,CAAYia,cAAY,EAAxB,UAAyB,SAACN,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,0BAArB,mKACzB,SAAC5Z,EAAA,EAAD,CAAYia,cAAY,EAAxB,UAAyB,SAACN,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,0BAArB,uKAG7B,UAACnkB,EAAA,EAAD,CAAK4D,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAhD,UACGq1B,EAAkBl+B,KAAI,SAACq+B,EAAIhxB,GAAL,OACrB,SAAC6xB,GAAD,CAAqB/Z,aAAckZ,EAAIc,KAAM9xB,EAAI,EAAG+xB,QAASlB,EAAkB78B,OAAQg+B,QAAS,SAACjX,GAAD,OAASA,GAAOmW,EAAYlxB,EAAG+a,EAAM,EAArC,EAAyCkX,SAAU,kBAAMX,EAAWtxB,EAAjB,EAAqByxB,SAAUA,GAAjKT,EADI,KAEvB,UAAC16B,EAAA,EAAD,CAAKE,GAAI,CAAE0D,QAAS,OAAQsB,IAAK,GAAjC,WACE,SAAC02B,GAAD,CAASC,MAAOZ,EAAS7e,KAAMme,KAC/B,SAACxzB,EAAA,EAAD,CAAQxJ,MAAM,QAAQ4J,QAAS+zB,EAAW9zB,WAAW,SAACwL,GAAA,EAAD,IAArD,UAAiE,SAACsR,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,8BAArB,+BAEhEkX,IAAsB,SAAC7zB,EAAA,EAAD,CAASjK,MAAM,UAAf,UAAyB,SAACgN,EAAA,EAAD,WAAY,UAAC2Z,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,6BAA6BtL,MAAOyiB,EAAzD,mCAA2F,4BAAS,CAAEziB,MAAOyiB,KAA7G,0CAIpE,UAAC1zB,GAAA,EAAD,CAAa1H,GAAI,CAAE0D,QAAS,OAAQD,MAAO,QAA3C,WACE,SAACoD,EAAA,EAAD,CAAQ7G,GAAI,CAAEmE,SAAU,GAAK8C,QAAS,kBAAM0a,EAAqB,CAAEsY,iBAAkBA,GAA/C,EAAmEt3B,SAAUA,EAAUuE,UAAW+yB,GAAkB,SAAC9yB,GAAA,EAAD,KAAe,SAACC,GAAA,EAAD,IAA0B/J,MAAO48B,EAAkB,UAAY,YAAxO,UACE,UAACn6B,EAAA,EAAD,YACE,2BAAM,SAACkkB,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,oBAArB,sCACLgW,IAAmB,SAAC3yB,EAAA,EAAD,WAAS,UAAC0c,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,uBAAuBtL,MAAOwiB,EAAnD,yBAAkF,4BAAS,CAAExiB,MAAOwiB,KAApG,wBAGhClB,IAAmB,SAACpzB,EAAA,EAAD,CAAQ7G,GAAI,CAAEyS,WAAY,GAAKpV,MAAM,OAAO4J,QAAS+a,EAAQrf,SAAUA,EAAvE,UAAiF,SAACohB,GAAA,EAAD,WAG1G,CAED,I,GACA,SAASsX,GAAT,GAOI,IAPkB/Z,EAOnB,EAPmBA,aAAcga,EAOjC,EAPiCA,KAAMC,EAOvC,EAPuCA,QAASC,EAOhD,EAPgDA,QAASC,EAOzD,EAPyDA,SAAUR,EAOnE,EAPmEA,SAQ5Dp8B,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACAkQ,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACFpJ,GAAYi2B,EAAAA,EAAAA,GAAata,GACzBra,GAAUgG,EAAAA,EAAAA,KAChB,IAAKtH,EAAW,OAAO,KACvB,IAAQk2B,EAAsCl2B,EAAtCk2B,eAAgB7O,EAAsBrnB,EAAtBqnB,kBACxB,OAAO,UAAC5d,EAAA,EAAD,CAAWpP,GAAI,CAAEiF,EAAG,GAApB,WACL,UAACnF,EAAA,EAAD,CAAKE,GAAI,CAAEkJ,GAAI,EAAGxF,QAAS,OAAQ2P,eAAgB,gBAAiBrO,IAAK,GAAzE,WACE,SAACsC,EAAA,EAAD,CAASjK,MAAM,OAAf,UACE,UAACgN,EAAA,EAAD,eAAcixB,QAEhB,SAACh0B,EAAA,EAAD,CAAStH,GAAI,CAAEmE,SAAU,GAAK9G,MAAO49B,IAAcK,EAAO,EAAK,UAAaA,EAAO,EAAKL,EAAW,QAAU,UAA7G,UACE,SAAC5wB,EAAA,EAAD,UAAa4wB,IAAcK,EAAO,GAAK,SAACtX,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,gCAArB,+BAClCqX,EAAO,EAAKL,GAAW,SAACjX,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,gCAArB,kCACxB,SAACD,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,+BAArB,gCAEN,SAACnkB,EAAA,EAAD,WACE,UAAC4H,GAAA,EAAD,CAAa1H,GAAI,CAAEmE,SAAU,GAAK4C,KAAK,QAAvC,WACE,SAACsL,GAAA,GAAD,WACE,SAACA,GAAA,GAAD,CAAmB3V,SAAU8+B,EAAS/gC,MAAO6gC,EAE3Cr3B,WAAY,CAAEO,IAAK,EAAGC,IAAK82B,EAASv7B,GAAI,CAAEkE,UAAW,WACrDlE,GAAI,CAAEyD,MAAO,OAAQ6H,OAAQ,OAAQtH,GAAI,QAE7C,SAAC6C,EAAA,EAAD,CAAQlE,SAAmB,IAAT24B,EAAYr0B,QAAS,kBAAMu0B,EAAQ,EAAd,EAAvC,UACE,SAACM,GAAA,EAAD,OAEF,SAACj1B,EAAA,EAAD,CAAQlE,SAAmB,IAAT24B,EAAYr0B,QAAS,kBAAMu0B,EAAQF,EAAO,EAArB,EAAvC,UACE,SAACS,GAAA,EAAD,OAEF,SAACl1B,EAAA,EAAD,CAAQlE,SAAU24B,IAASC,EAASt0B,QAAS,kBAAMu0B,EAAQF,EAAO,EAArB,EAA7C,UACE,SAACU,GAAA,EAAD,OAEF,SAACn1B,EAAA,EAAD,CAAQlE,SAAU24B,IAASC,EAASt0B,QAAS,kBAAMu0B,EAAQD,EAAd,EAA7C,UACE,SAACU,GAAA,EAAD,OAEF,SAACp1B,EAAA,EAAD,CAAQxJ,MAAM,QAAQ4J,QAASw0B,EAA/B,UACE,SAACS,GAAA,EAAD,eAKR,UAAC9nB,GAAA,GAAD,CAAMC,WAAS,EAACuB,QAAS,EAAGtB,QAAS,EAArC,WACE,SAACF,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UACE,SAACqoB,GAAA,EAAD,CAAmB7a,aAAcA,EAAcra,QAASA,OAE1D,SAACmN,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UAAkB,SAACsoB,GAAA,EAAD,CAAgBjR,SAAU0Q,MAC3C78B,OAAOC,QAAQ+tB,GAAmB7wB,KAAI,+BAAEqmB,EAAF,KAAW6Z,EAAX,YAAoB,SAACjoB,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UAAiC,SAACsd,GAAA,EAAD,CAAkB5O,QAASA,EAAS6O,YAAatiB,EAASkJ,KAAK3R,IAAI+1B,MAA7E7Z,EAA3C,SAI5C,CACD,SAASkZ,GAAT,GAAgG,IAA7EC,EAA4E,EAA5EA,MAAOzf,EAAqE,EAArEA,KAChBrd,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACR,GAAgCq7B,EAAAA,EAAAA,IAAa,GAA7C,eAAO9sB,EAAP,KAAa4U,EAAb,KAAqB/T,EAArB,KACMpE,GAAS1G,EAAAA,EAAAA,cAAY,SAACm5B,GAC1B,QAAKA,IACGpgB,EAAKte,SAAS0+B,EAAKlgC,IAC5B,GAAE,CAAC8f,IACJ,OAAO,iCACL,SAAC,EAAAhP,SAAD,CAAUC,UAAU,EAApB,UACE,SAAC,GAAD,CAAyBC,KAAMA,EAAMC,OAAQY,EAASX,SAAUquB,EAAO9xB,OAAQA,OAEjF,SAAChD,EAAA,EAAD,CAAQC,WAAS,EAAC9G,GAAI,CAAEsL,OAxEX,IAwE+BjO,MAAM,OAAO4J,QAAS+a,EAAQ9a,WAAW,SAACq1B,GAAA,EAAD,IAArF,UACE,SAACvY,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,wBAArB,uCAGL,CC7Kc,SAASuY,GAAT,GAAkG,IAAD,IAA1E75B,SAAAA,OAA0E,SAAxD85B,EAAwD,EAAxDA,UAC9C59B,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACkByiB,GAAmB7b,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAavJ,IACrB,EAAoEilB,GAAgBC,GAA5Dob,EAAxB,EAAQlb,aAAgBkb,gBAAmB/a,EAA3C,EAA2CA,qBACnC5S,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACF4tB,GAAiBzgC,EAAAA,EAAAA,UAAQ,kBAAMugC,GAAa1tB,EAASkJ,KAAK5P,OAAOyV,QAAO,SAAC/b,EAAGqa,GAAJ,OAAYra,GAAMqa,EAAIsH,SAAWtH,EAAIiM,WAAa/G,EAAgB,EAAI,EAAtE,GAA0E,EAAzH,GAA6H,CAACvS,EAAU0tB,EAAWnb,IAClL,OAAO,SAACza,EAAA,EAAD,CAAQC,WAAS,EAACG,QAAS,kBAAM0a,EAAqB,CAAE+a,iBAAkBA,GAA/C,EAAmE/5B,UAAWg6B,GAAkBh6B,EAAUuE,UAAWw1B,GAAkB,SAACv1B,GAAA,EAAD,KAAe,SAACC,GAAA,EAAD,IAA0B/J,MAAOq/B,EAAkB,UAAY,YAAhP,UACL,UAAC58B,EAAA,EAAD,YACE,2BAAM,SAACkkB,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,oBAAoBtL,MAAOgkB,EAAhD,sCACLD,IAAmB,SAACp1B,EAAA,EAAD,WAAS,UAAC0c,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,uBAAuBtL,MAAOgkB,EAAnD,oBAAyE,4BAAS,CAAEhkB,MAAOgkB,KAA3F,+BAGlC,CClBc,SAASC,KACtB,IAAQ/9B,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACR,OAAO,SAAC0oB,GAAA,EAAD,CAAOC,SAAS,QAAQrqB,QAAQ,SAAS8J,QAAS,kBAAMomB,OAAOhF,SAASwU,QAAtB,EAAgC78B,GAAI,CAC3F,sBAAuB,CACrBmE,SAAU,EACVuyB,OAAQ,YAHL,SAKH73B,EALG,yCAMR,C,0CCDKi+B,IAAUC,EAAAA,GAAAA,KAAgB92B,EAAAA,GAAAA,IAAU,CAAEiV,KAAI,oBAAMnI,GAAAA,GAAAA,KAAcA,GAAAA,GAAAA,WACvDiqB,GAAc,CACzB5gB,KAAKb,EAAAA,GAAAA,GAAa,GAAD,gBAAKhb,GAAAA,IAAL,QAAyBK,GAAAA,KAAiB,SAAAxE,GAAG,OAAI0gC,GAAQ5hB,IAAI9e,EAAhB,IAC9DinB,QAAQlI,EAAAA,GAAAA,IAAUpI,GAAAA,GAAAA,QAAc,SAACpW,EAAGP,GAAJ,OAAY0gC,GAAQ5hB,IAAI9e,EAAxB,KAG3B,SAAS6gC,GAAiBhlB,EAAyBwN,EAAiCyX,GACzF,IADiI,EAC3H5hB,EAA0B,CAC9Bd,KAAM,CAAC,EACPnS,OAAQ,CAAE80B,OAAQ,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,QAAS,GAAIC,MAAO,KAE7Dn4B,EAAO,IAAIwU,IALgH,WAO/G3B,GAP+G,IAOjI,2BAAwB,CAAC,IAAD,EAAbmE,EAAa,QAChBohB,EAActU,GAAAA,GAAAA,cAAuB9M,EAAI+L,YAAa/L,EAAIjd,OAAQgf,KAAK1Z,IAAI0Z,KAAK3Z,IAAIihB,EAAsC,EAAbrJ,EAAIjd,QAAaid,EAAI7R,QAElI1E,EAA0B,CAC9B6V,GAAIU,EAAIV,GAAItc,IAAKgd,EAAI2E,OACrB1Y,QAAO,yBACJ+T,EAAI2E,OAAS,IADV,UAEH3E,EAAI+L,YAAc/L,EAAI+L,YAAYsV,SAAS,KAAOD,EAAc,IAAMA,GAFnE,GAGDx+B,OAAOqc,YAAYe,EAAIgM,SAASjsB,KAAI,SAAAuhC,GAAO,MAC5C,CAACA,EAAQthC,IAAKshC,EAAQthC,IAAIqhC,SAAS,KAAOC,EAAQC,cAAgB,IAAMD,EAAQC,cADpC,cAI3C93B,EAAKwC,OAAO,IACnBiT,EAAOjT,OAAO+T,EAAIoG,SAASrC,KAAKta,GAChC7G,OAAOoG,KAAKS,EAAKwC,QAAQ4R,SAAQ,SAAApB,GAAC,OAAIzT,EAAK4U,IAAInB,EAAb,GACnC,CAtBgI,+BAwBjI,GADAyC,EAAOd,MAAOe,EAAAA,GAAAA,IAAa,QAAInW,IAAO,SAAAzI,GAAC,OAAI,CAAJ,IACnCugC,EACF,cAAoBl+B,OAAOqJ,OAAOiT,EAAOjT,QAAzC,gBAAgB,KACR8X,KAAK,CAAEzE,GAAI,GAAIrT,OAAQ,CAAC,GADhC,CAEF,OAAOiT,CACR,CCIc,SAASsiB,KAAY,IAAD,IACzB/+B,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACR,GAA0D4G,EAAAA,EAAAA,YAAWC,EAAAA,GAA7DC,UAAkB2b,EAA1B,EAAqBllB,IAAmByhC,EAAxC,EAAwCA,YAChC9uB,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAAsDtJ,EAAAA,EAAAA,YAAW+G,GAAzDsxB,EAAR,EAAQA,aAActN,EAAtB,EAAsBA,YAAasE,EAAnC,EAAmCA,eAEnC,GAAsCjyB,EAAAA,EAAAA,UAAS,CAAEpF,KAAM,WAAY2oB,OAAQ,EAAGE,OAAQ,EAAGD,QAAS,EAAGE,MAAO,IAA5G,eAAOwX,EAAP,KAAoBC,EAApB,KACMpX,EAAwC,aAArBmX,EAAYtgC,KAErC,GAAkCwkB,EAAAA,GAAAA,KAAlC,eAAOwa,EAAP,KAAkBwB,EAAlB,KAEA,GAA0Ep7B,EAAAA,EAAAA,UAASkM,EAASorB,gBAAgB7zB,OAA5G,sBAAS+zB,EAAT,EAASA,kBAAT,IAA4B6D,QAAAA,OAA5B,MAAsCC,GAAAA,EAAtC,EAAoDC,EAApD,MACA56B,EAAAA,EAAAA,YAAU,kBAAMuL,EAASorB,gBAAgBzY,QAAO,SAACxV,EAAGquB,GAAJ,OAAW6D,EAAmB7D,EAA9B,GAAtC,GAA0E,CAACxrB,EAAUqvB,IAE/F,IAAMC,EAAaH,EAAUC,GAAAA,EAAaA,GAAAA,EAAaD,EACjDI,GAAgBn7B,EAAAA,EAAAA,cAAY,SAAA+6B,GAAO,OAAInvB,EAASorB,gBAAgB/6B,IAAI,CAAE8+B,QAAAA,GAAnC,GAA+C,CAACnvB,IAEnFnJ,GAAoB24B,EAAAA,EAAAA,GAAoBjd,GACxCkd,GAAkBvxB,EAAAA,EAAAA,MAGxBzJ,EAAAA,EAAAA,YAAU,WACRw6B,EAAe,CAAEvgC,KAAM,WAAY2oB,OAAQ,EAAGE,OAAQ,EAAGD,QAAS,EAAGE,MAAO,GAC7E,GAAE,CAACjF,IAEJ,IAAMmd,IAAaviC,EAAAA,EAAAA,UAAQ,kBAAO6S,EAASkJ,KAAK5P,OAAO7K,MAA5B,GAAoC,CAACuR,IAEhE,GAA+CsS,GAAgBC,GAAvDE,GAAR,GAAQA,aAAcG,GAAtB,GAAsBA,qBACdiQ,GAA8GpQ,GAA9GoQ,SAAU9G,GAAoGtJ,GAApGsJ,mBAAoBrF,GAAgFjE,GAAhFiE,wBAAyByX,GAAuD1b,GAAvD0b,aAAcwB,GAAyCld,GAAzCkd,gBAAiBr8B,GAAwBmf,GAAxBnf,SAAUC,GAAckf,GAAdlf,UACxG,GAAoEwsB,GAAexN,GAAnF,MAAQyN,YAAe1Q,GAAvB,GAAuBA,OAAQsgB,GAA/B,GAA+BA,UAAa1P,GAA5C,GAA4CA,oBACtC2P,IAAWC,EAAAA,EAAAA,GAAYvd,EAAcmE,IAC3C,oBAAyCmZ,SAAzC,IAAyCA,QAAzC,EAAyCA,GAAWtd,UAApD,QAAqF,CAAC,EAA9EzU,GAAR,GAAQA,eAAwBhH,GAAhC,GAAwB4O,OAClBqqB,GAAyBhU,KAAsB0I,EAAAA,GAAAA,IAAY,OAAC3tB,SAAD,IAACA,QAAD,EAACA,GAAM4tB,aAAc3I,IAChFiU,GAAO,CAAC,KAAM,MAAMnhC,UAASohC,EAAAA,GAAAA,OAGnCx7B,EAAAA,EAAAA,YAAU,kBACRuL,EAASkJ,KAAKmK,UAAU6b,EADhB,GAER,CAACA,EAAclvB,IAGjB,IAAMkwB,IAAclvB,EAAAA,EAAAA,SAAO,WAAS,KAEpCvM,EAAAA,EAAAA,YAAU,kBAAM,kBAAMy7B,GAAYhvB,SAAlB,CAAN,GAAmC,IAC7C,QAAkCpN,EAAAA,EAAAA,WAAS,GAA3C,iBAAOq8B,GAAP,MAAkBC,GAAlB,MACMC,IAAiBj8B,EAAAA,EAAAA,cAAW,yBAAC,0GA+ExBk8B,GAGAC,GAGAC,GAOAC,GA5FwB,8GA4FxBA,GA5FwB,WA6F/B,IAAM31B,EAAS41B,EAAepM,MAC9B,OAAQxpB,EAAqB,CAC3B61B,QAAS,UACTjmB,UAAW4lB,KAAgBx1B,OAAAA,QAFZzL,CAIlB,EAbQmhC,GArFwB,WAsF/B,MAAwBI,EAAgBC,OAAhCC,EAAR,EAAQA,KAAMplC,EAAd,EAAcA,MACd,OAAOolC,OAAOzhC,EAAY,CACxBshC,QAAS,QAASI,SAAUC,EAC5BtmB,UAAW4lB,KAAgBx1B,OAAQpP,EAEtC,EATQ6kC,GAlFwB,WAmF/B,MAAO,CAAEI,QAAS,QAAS71B,YAAQzL,EAAW0hC,SAAUC,EAAgBtmB,UAAW4lB,KACpF,EALQA,GA/EwB,WAgF/B,OAAO3iB,EAAKsjB,YAAYtB,EAAkB,GAAG76B,GAC9C,EAhFOie,EAA4LN,GAA5LM,gBAAiB8P,EAA2KpQ,GAA3KoQ,SAAU7b,EAAiKyL,GAAjKzL,YAAa1V,EAAoJmhB,GAApJnhB,aAAcyqB,EAAsItJ,GAAtIsJ,mBAAoBrF,EAAkHjE,GAAlHiE,wBAAyBiX,EAAyFlb,GAAzFkb,gBAAiBzC,EAAwEzY,GAAxEyY,gBAAiBiD,EAAuD1b,GAAvD0b,aAAcwB,EAAyCld,GAAzCkd,gBAAiBr8B,EAAwBmf,GAAxBnf,SAAUC,EAAckf,GAAdlf,UACjLgf,GAAiBwJ,EAFW,wDAI7BmV,EAA0C,IAAIrmB,IAC9CqgB,KACIj8B,EAAQq8B,EAAkBa,QAAQ5Z,IAC5B,EAAG+Y,EAAkBpgB,SAAQ,SAAAimB,GAAE,OAAID,EAAajmB,KAAIwT,EAAAA,EAAAA,IAAoB0S,GAAzC,IACtC7F,EAAkB9b,MAAM,EAAGvgB,GAAOic,SAAQ,SAAAimB,GAAE,OAAID,EAAajmB,KAAIwT,EAAAA,EAAAA,IAAoB0S,GAAzC,KAE7CC,EAAepxB,EAASkJ,KAAK5P,OAAOwB,QAAO,SAAAuS,GAC/C,GAAIA,EAAI7R,MAAQlI,EAAU,OAAO,EACjC,GAAI+Z,EAAI7R,MAAQjI,EAAW,OAAO,EAClC,IAAM89B,EAAY//B,EAAa+b,EAAIoG,SACnC,QAAa,OAAT4d,QAAS,IAATA,GAAAA,EAAW5iC,SAAW4iC,EAAUxiC,SAASwe,EAAI+L,gBAG7C/L,EAAIiM,YAAamF,EAAAA,EAAAA,IAAoBlM,MAErClF,EAAIsH,UAAYgZ,OAChBtgB,EAAIiM,WAAa4R,MACjB7d,EAAIiM,UAAY4R,GAAmBgG,EAAa9lB,IAAIiC,EAAIiM,YAE7D,IACKgY,EAAQpD,GAAiBkD,EAAc1a,EAAyByX,GAxBrC,WA0BVoD,EAAAA,EAAAA,GAAYvxB,EAAUuS,EAAcmE,EAAyB,IA1BnD,WA0B3BmZ,EA1B2B,6DA4B3B2B,EA5B2B,WA4BdC,EAAAA,GAAAA,IAAc5B,EAASA,SAAUtd,GAAcA,UA5BjC,aA4Bd,EAA8E7M,OAAO5O,KAAM,GA5B7E,sDA8BjC7G,OAAOyhC,OAAOF,GAAYG,EAAAA,GAAAA,IAAU,CAACH,EAAYvD,MAC7C2D,GAAoCnN,EAAAA,GAAAA,IAAY,UAAC+M,EAAW78B,eAAZ,QAAuB,CAAC,EAAGonB,GA/B9C,mDAyGjC,IAxEM8V,EAAaD,EACbE,EAAqD7hC,OAAOC,QAAQ8W,GACvE7W,SAAQ,+BAAE45B,EAAF,iBAEJjvB,QAAO,SAAAwvB,GAAO,OAAKA,EAAQ12B,QAAb,IACdxG,KAAI,SAAAk9B,GAAY,IAAD,IACRyH,GAAsBtN,EAAAA,GAAAA,IAAY,UAAC+M,EAAW78B,eAAZ,QAAuB,CAAC,EAAGuT,KAAKsiB,MAAMT,IAE9E,MAAO,CAAEr+B,MAAOqmC,EAAY9oB,QADc,OAA1B,UAAA8oB,EAAWrwB,YAAX,eAAiByZ,MAAemP,EAAQ5+B,MAAQ,IAAM4+B,EAAQ5+B,MAE/E,GAPI,IASRoP,QAAO,SAAAgP,GAAC,OAAIA,EAAEpe,OAASoe,EAAEb,SAAW/C,GAA5B,IAEX6oB,OAAa1/B,GAEP2iC,EAAY,IAAIC,SAAc,SAAA90B,GAAC,OAAI+yB,GAAYhvB,QAAU/D,CAA1B,IAEjC+0B,EAlD6B,mBAkDNJ,EAAY1kC,KAAI,SAAA0c,GAAC,OAAIA,EAAEpe,KAAN,KAlDX,CAkDyBkmC,IAAoC1oB,EAAOooB,EAC/Fa,EAAWrpB,GAAmBC,GAAWgK,EAAiB9iB,OAAOqJ,OAAOg4B,EAAMh4B,QAAQnJ,SAAQ,SAAA2Z,GAAC,OAAIA,EAAE1c,KAAI,SAAA0c,GAAC,OAAIA,EAAEzZ,GAAN,GAAX,KAA0BihC,GAEzHroB,EArD2B,mBAqDb6oB,EAAY1kC,KAAI,SAAA0c,GAAC,OAAIA,EAAEb,OAAN,KArDJ,EAqDqB/C,MAChDkR,EAAoC,CAAEC,OAAQ,EAAGE,OAAQ,EAAGD,QAAS,EAAGE,MAAOtI,IAAKuI,UAAWY,YAAYC,QAC3G8Z,EAA2BvP,IAAY4B,EAAAA,GAAAA,IAAY,UAAC+M,EAAW78B,eAAZ,QAAuB,CAAC,EAAGkuB,MAElFqP,EAAiB9gB,KAAKghB,GACtBnpB,EAAQmI,MAAMlL,MAGVmsB,EAAenpB,EAErBvB,EAAQsC,GADJtC,GAAQ2qB,EAAAA,GAAAA,IAASJ,EAAkBV,GAAY,kBAAyB,SAAzB,SAAGp6B,KAAH,SACrB2b,GA/DG,EAgEd/J,GAASrB,EAAOsB,EAASC,EAAMymB,EAAiB5c,EAAiB,CAClFtJ,UAAU,EAAME,eAAe,EAAMH,gBAAgB,EAAME,YAAY,IADtE/B,EAhE8B,EAgE9BA,MAAOuB,EAhEuB,EAgEvBA,KAGVvB,GAAQ2qB,EAAAA,GAAAA,IAAS3qB,EAAO,CAAC,GAAG,SAAA/Z,GAAC,OAAI,CAAJ,IAEvB42B,EAAe4N,EAAkBzqB,EAAM2c,WAAQj1B,EACjD0gC,EAAyBpoB,EAAM2c,MAE7B3W,EAAO,CAAEsjB,YAAa3K,MAAMqJ,GAAiB7O,KAAK,GAAG1zB,KAAI,SAAAQ,GAAC,MAAK,CAAE6Q,IAAK,GAAI3J,KAAMoR,IAAtB,KAE1D8qB,EAAiB,KAAYuB,EAAwC,GAAbjD,EACxDsB,EAAkBuB,EAASK,OAAOC,YAAa/B,EAAkC,GACjFgC,EAAwB,GAAIC,EAAmB,IAAI9nB,IACnD+nB,GAAoB,GAuBpB7iB,GAAUpI,EACbva,KAAI,SAAC1B,EAAO+O,GAAR,MAAe,CAAE/O,MAAAA,EAAO+J,IAAKwT,EAAQxO,GAArC,IACJK,QAAO,SAAAgP,GAAC,OAAIA,EAAErU,KAAOyQ,GAAb,IAEL2sB,GAA2C,GAxGhB,YAyGxBp4B,GACP,IAAMq4B,EAAS,IAAIC,OAAO,IAAIC,IAAI,mBAClCF,EAAOG,iBAAiB,SAAS,SAAArlC,GAC/BslC,QAAQC,MAAM,yBACd/C,IAAa,GACbF,GAAYhvB,SACb,IAED,IAAMkyB,EAAe,CACnBzC,QAAS,QACThkB,GAAIlS,EAAGyO,KAAAA,EACP6S,mBAAoBgU,EACpBlN,SAAU2B,EACV6O,UAAW1D,EACX5f,QAAAA,IAGF,GADA+iB,EAAOQ,YAAYF,OAAO/jC,GAChB,IAANoL,EAAS,CACX,IAAM84B,EAA8B,CAAE5C,QAAS,QAASvnB,UAAW2J,EAAiB7J,KAAM,CAACA,EAAMmpB,IACjGS,EAAOQ,YAAYC,OAAclkC,EAClC,CACD,IAAImkC,OAAqC,EACnCC,EAAY,IAAIxB,SAAwB,SAAA90B,GAAC,OAAIq2B,EAAWr2B,CAAf,IAC/C21B,EAAOY,UAAP,2CAAmB,yGAAS58B,EAAT,EAASA,KAC1Bs5B,IAAa,GADI,KAETt5B,EAAK65B,QAFI,OAGV,YAHU,OAaV,UAbU,QAoBV,YApBU,QAuBV,aAvBU,QA2BV,UA3BU,+BAIbvZ,EAAOC,QAAUvgB,EAAKugB,OACtBD,EAAOG,QAAUzgB,EAAKygB,OACtBH,EAAOE,SAAWxgB,EAAKwgB,QACnBxgB,EAAKm6B,cACPtjB,EAAKsjB,YAActjB,EAAKsjB,YAAYn2B,QAAO,qBAAG2D,MAAkB3H,EAAK68B,MAA1B,KAC3C,EAAAhmB,EAAKsjB,aAAY7f,KAAjB,iBAAyBta,EAAKm6B,YAAY7jC,KAAI,SAAA0H,GAAG,MAAK,CAAE2J,IAAK3H,EAAK68B,OAAQ7+B,IAAAA,EAAzB,MACjD6Y,EAAKsjB,YAAY3gC,MAAK,SAAC0C,EAAGC,GAAJ,OAAUA,EAAE6B,IAAM9B,EAAE8B,GAApB,IAAyBm1B,OAAO0F,IAV3C,oCAcT74B,EAAKgE,QACP41B,EAAetf,KAAKta,EAAKgE,QACzB63B,EAAiB1nB,IAAInU,EAAK6V,KACrBgmB,EAAiBjhB,OAAO5a,EAAK6V,IACpC+lB,EAAYthB,KAAKta,EAAK6V,IAlBT,oCAqBb+lB,EAAYthB,KAAKta,EAAK6V,IArBT,oCAwBbmmB,EAAOc,YACPJ,EAAS18B,GAzBI,4CA4BeA,EAAKqa,OA5BpB,GA4BN0iB,EA5BM,KA4BEC,EA5BF,KA6Bb1c,EAAOI,MAAQsc,EACf1c,EAAOE,SAAWwc,EAAYD,EA9BjB,2BAgCNX,QAAQa,IAAI,QAASj9B,GAhCf,YAkCV47B,EAAYjkC,OAlCF,oBAmCTke,EAAK+lB,EAAYpO,MAAQwO,EAASF,GAAQjmB,GAC5CqnB,OApCW,EAqCXtD,EAAejiC,OAAS8jC,KAC1ByB,EAAOxD,OACMmC,EAAiBvnB,IAAIuB,KAAKqnB,EAAOzD,MAE3CyD,IAAMA,EAAOvD,OACduD,EA1CW,iBA0CLlB,EAAOQ,YAAYU,GA1Cd,+BA4CbtB,EAAYthB,KAAKzE,GACb+lB,EAAYjkC,SAAW,EAAI6gC,GAAa,WAC1C,IAAMqB,EAAyB,CAAEA,QAAS,YAC1CiC,GAAQ1nB,SAAQ,SAAA4nB,GAAM,OAAIA,EAAOQ,YAAY3C,EAAvB,GAFmB,CAAC,GA7C/B,yFAAnB,sDAsDAiC,GAAQxhB,KAAK0hB,GACbd,EAAUiC,MAAK,kBAAMnB,EAAOc,WAAb,IACff,GAAczhB,KAAKqiB,EAxLY,EAyGxBh5B,GAAI,EAAGA,GAAI60B,EAAY70B,KAAM,GAA7BA,IAiFT,IAASA,GAAI,EAAGA,GAAI,EAAGA,KACrBi4B,EAAYthB,KAAZ,MAAAshB,GAAW,SAAShkB,EAAAA,GAAAA,IAAM,EAAG4gB,EAAa,KA3LX,OA6L3B4E,GAAaC,aAAY,kBAAMlF,GAAe,SAAEvgC,KAAM,UAAa0oB,GAA1C,GAAqD,KA7LnD,UA8LX6a,QAAQmC,IAAI,CAACnC,QAAQoC,IAAIxB,IAAgBb,IA9L9B,QA8L3BsC,GA9L2B,OA+LjCC,cAAcL,IACdhE,GAAYhvB,QAAU,WAAS,EAE1BozB,IAMClC,IACIoC,GAAW/kB,GAAU6kB,GAAQlnC,KAAI,SAAA0c,GAAC,OAAIA,EAAE0qB,QAAN,KACpC19B,GAAO7G,OAAOqJ,OAAOk7B,IACK,OAA1B,WAAA3C,EAAWnwB,YAAX,iBAAiByZ,QACnBrkB,GAAOA,GAAK1J,KAAI,kBAAmC,CAAE1B,MAAe,IAApD,EAAGA,MAAsDmkB,KAAzD,EAAUA,KAAqD+R,YAA/D,EAAgBA,YAAhB,KACiB,OAA/B,WAAAwQ,EAAgB1wB,YAAhB,iBAAsByZ,QACxBrkB,GAAOA,GAAK1J,KAAI,gBAAG1B,EAAH,EAAGA,MAAOmkB,EAAV,EAAUA,KAAV,MAAmC,CAAEnkB,MAAAA,EAAOmkB,KAAoB,KAAd,OAACA,QAAD,IAACA,EAAAA,EAAQ,GAAU+R,YAArE,EAAgBA,YAAhB,KAClBmN,EAAa,CACX7J,UAAW2M,EACX5M,SAAUmN,EACVt7B,KAAAA,MAGEwY,GAASD,GAAYilB,GAAQlnC,KAAI,SAAA0c,GAAC,OAAIA,EAAEwF,MAAN,IAAeqgB,GAEvDzP,GAAoB,CAAE5Q,OAAQA,GAAOliB,KAAI,SAAA0iB,GAAK,OAAIA,EAAM8R,WAAV,IAAwBgO,UAAW6E,KAAKnc,UApBtFlB,EAAOC,OAAS,EAChBD,EAAOG,OAAS,EAChBH,EAAOE,QAAU,EACjBF,EAAOI,MAAQ,GAmBjByX,GAAe,oBAAK7X,GAAN,IAAc1oB,KAAM,WAAYgpB,WAAYW,YAAYC,SAzNrC,4CA0NhC,CAAC/F,EAAcvS,EAAUkgB,GAAqBoP,EAAY7c,GAAc6Y,EAAmByD,IAExFpX,GAAa,iBAAG7Z,SAAH,IAAGA,QAAH,EAAGA,GAAgBnG,YAAnB,QAA2B,iBAExCmrB,IAAc1uB,EAAAA,EAAAA,cAAY,SAAAyuB,GAC9BjQ,GAAqB,CAAEiQ,SAAAA,IACvBkM,OAAa1/B,EACd,GAAE,CAACujB,GAAsBmc,IACpBjc,IAA0C3lB,EAAAA,EAAAA,UAAQ,WACtD,OAAO2J,IAAQ+4B,IAAY,CAAE/4B,KAAAA,GAAM+4B,SAAAA,GACpC,GAAE,CAAC/4B,GAAM+4B,KAEJ6E,IAAiB,SAAC9P,GAAA,EAAD,CACrB7I,mBAAoBA,GACpB8I,UAAW,SAAAnf,GAAM,OAAIkN,GAAqB,CAAEmJ,mBAAoBrW,GAA/C,EACjB9R,WAAYikB,IAGR8c,IAAYvgC,EAAAA,EAAAA,cAAY,SAACnF,GAAD,OAAW,UAACgmB,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,kBAAkBtL,MAAO3a,EAAQ,EAAtD,oBAAiE,CAAE2a,MAAO3a,EAAQ,KAA7F,GAA2G,CAACa,IACpI8kC,IAAYxgC,EAAAA,EAAAA,cAAY,SAACnF,GAAD,iBAAeA,EAAQ,EAAvB,GAA4B,IAC1D,OAAO,UAAC8B,EAAA,EAAD,CAAK4D,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAhD,UACJy5B,KAAc,SAAClX,GAAA,EAAD,CAAOC,SAAS,UAAUrqB,QAAQ,SAAlC,UAA2C,UAAC6mB,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,UAArB,kGAAmH,SAAC2f,GAAA,EAAD,CAAM/jC,UAAWgkC,EAAAA,GAAYtJ,GAAG,aAAhC,uBAAnH,2BAEzD1Y,KAAe,UAAC/b,EAAA,WAAD,CAAsBrL,MAAOonB,GAA7B,WAEd,UAACzN,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WAEE,SAACF,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAI6W,GAAI,EAAGxV,GAAI,EAAGzR,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAA5E,UAEE,SAAClF,EAAA,EAAD,WAAK,SAACgkC,GAAA,EAAD,CAAexiB,aAAcA,EAAckd,gBAAiBA,SAInE,UAACpqB,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAI6W,GAAI,EAAGxV,GAAI,EAAGzR,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAA5E,WACE,UAACoK,EAAA,EAAD,YACE,UAACnG,EAAA,EAAD,YACE,SAACoB,EAAA,EAAD,CAAYia,cAAY,EAAxB,SAA0BzlB,EAA1B,yCACA,SAAC6qB,GAAA,EAAD,CAAkBC,UAAU,MAAM7kB,OAAO,UAAChF,EAAA,EAAD,YACvC,SAACuK,EAAA,EAAD,CAAYlN,QAAQ,KAApB,SAA0B0B,EAA1B,yDACA,SAACwL,EAAA,EAAD,UAAaxL,EAAb,0DAFF,UAIE,SAACiB,EAAA,EAAD,WACE,SAAC0lB,GAAD,CAAuBC,wBAAyBA,GAAyBC,2BAA4B,SAAAD,GAAuB,OAAI9D,GAAqB,CAAE8D,wBAAAA,GAA3B,EAAuD9iB,SAAUikB,YAKnM,SAACyR,GAAD,CAAuB11B,SAAUikB,QAEnC,SAAChB,GAAD,QAIF,UAACxR,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAI6W,GAAI,EAAGxV,GAAI,EAAGzR,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAA5E,WACE,SAAC4c,GAAD,CAAmBjf,SAAUikB,KAG7B,SAAC4V,GAAD,CAAa75B,SAAUikB,EAAkB6V,UAAWA,KAGpD,SAACzC,GAAD,CAAar3B,SAAUikB,KAEvB,SAAC/f,EAAA,EAAD,CACEC,WAAS,EACTI,UAAWg2B,IAAe,SAAC/1B,GAAA,EAAD,KAAe,SAACC,GAAA,EAAD,IACzC/J,MAAO6/B,GAAe,UAAY,YAClCj2B,QAAS,kBAAM0a,GAAqB,CAAEub,cAAeA,IAA5C,EACTv6B,SAAUikB,EALZ,SAOG/nB,EAPH,uCAUA,UAACuQ,EAAA,EAAD,YACE,SAACnG,EAAA,EAAD,UAAcpK,EAAd,sCACA,SAACuD,GAAA,EAAD,CAAqBC,SAAUA,GAAUC,UAAWA,GAClDC,OAAQ,SAAAF,GAAQ,OAAIsf,GAAqB,CAAEtf,SAAAA,GAA3B,EAChBG,QAAS,SAAAF,GAAS,OAAIqf,GAAqB,CAAErf,UAAAA,GAA3B,EAClBG,QAAS,SAACJ,EAAUC,GAAX,OAAyBqf,GAAqB,CAAEtf,SAAAA,EAAUC,UAAAA,GAA1D,EACTK,SAAUikB,QAKd,SAACmT,GAAD,CAAgBp3B,SAAUikB,UAK7BmY,IAAQ0E,IACT,UAAC/7B,GAAA,EAAD,YACIq3B,IAAQ0E,IACV,UAACl8B,GAAA,EAAD,CAAgB5E,SAAUikB,IAAqBtF,EAC7Cxc,OAAO,UAACkf,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,QAAQtL,MAAO+lB,GAApC,UACJ,CAAE/lB,MAAO+lB,IADL,aADT,WAIE,SAAC1jC,GAAA,EAAD,WACE,SAACqP,EAAA,EAAD,CAAYlN,QAAQ,UAAUE,MAAM,YAApC,SACGwB,EAAE,0BAGP,SAAC2I,EAAA,EAAD,IACCu8B,GAAAA,EAAAA,KAAwB,SAAAnnC,GAAC,OAAI,SAAC5B,GAAA,EAAD,CAC5BiM,QAAS,kBAAM0a,GAAqB,CAAE+c,gBAAiB9hC,GAA9C,EADmB,UAE5B,UAAConB,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,QAAQtL,MAAO/b,EAApC,UACG,CAAE+b,MAAO/b,GADZ,cAF2CA,EAAnB,QAO5B,UAAC2K,GAAA,EAAD,CAAgB5E,SAAUikB,IAAqBtF,EAC7CthB,GAAI,CAAEgH,aAAc,mBACpBlC,OAAO,UAACkf,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,SAAStL,MAAO0lB,EAArC,UACJ,CAAE1lB,MAAO0lB,GADL,cAFT,WAKE,SAACrjC,GAAA,EAAD,WACE,SAACqP,EAAA,EAAD,CAAYlN,QAAQ,UAAUE,MAAM,YAApC,SACGwB,EAAE,2BAGP,SAAC2I,EAAA,EAAD,KACCiW,EAAAA,GAAAA,IAAM,EAAG0gB,GAAAA,GAAY7b,UAAUnmB,KAAI,SAAAS,GAAC,OAAI,SAAC5B,GAAA,EAAD,CACvCiM,QAAS,kBAAMq3B,EAAc1hC,EAApB,EAD8B,UAEvC,UAAConB,GAAA,EAAD,CAAOnlB,EAAGA,EAAGolB,QAAQ,SAAStL,MAAO/b,EAArC,UACG,CAAE+b,MAAO/b,GADZ,eAFsDA,EAAnB,QAOvC,SAAC8sB,GAAA,EAAD,CAAkBC,UAAU,MAAM7kB,MAAQgmB,GAA8C,GAAzBjsB,EAAE,qBAAjE,UACE,2BACE,SAACgI,EAAA,EAAD,CACElE,UAAW2e,IAAiBwJ,KAAuBgU,IAA0BA,GAAuB3vB,QACpG9R,MAAOupB,EAAmB,QAAU,UACpC3f,QAAS2f,EAAmB,kBAAMqY,GAAYhvB,SAAlB,EAA8BmvB,GAC1Dl4B,UAAW0f,GAAmB,SAACsV,GAAA,EAAD,KAAY,SAAC8H,EAAA,EAAD,IAC1ChkC,GAAI,CAAEgH,aAAc,mBALtB,SAMqBnI,EAAnB+nB,EAAqB,wBAA6B,0CAIzDsY,KAAa,SAACtC,GAAD,MACXtb,IAAgB,SAAC4E,GAAD,CAAkBC,OAAQ4X,EAAarX,cAAAA,GAAegY,gBAAAA,MACzE,SAAC5+B,EAAA,EAAD,WACE,SAAC6xB,GAAD,CAAWhvB,SAAUikB,IAAqBkE,GAAoB8G,SAAUA,GAAUC,YAAaA,GAAaC,aAAchH,QAE5H,SAAC1b,EAAA,EAAD,WACE,UAACnG,EAAA,EAAD,YACE,UAACnJ,EAAA,EAAD,CAAK4D,QAAQ,OAAOC,WAAW,SAASqB,IAAK,EAAG0J,GAAI,EAApD,WACE,SAACrE,EAAA,EAAD,CAAYrK,GAAI,CAAEmE,SAAU,GAA5B,SACGka,IAAS,wCAAc,4BAASA,GAAO7gB,QAAUgzB,EAAcA,EAAYhzB,OAAS,KAA3E,wBAA6GkpB,GAA7G,OAAgIiY,KAAa,oDAA0B,4BAAU,IAAI6E,KAAK7E,IAAY5X,0BAC5M,wEAEN,SAAClgB,EAAA,EAAD,CAAQlE,UAAW0b,GAAO7gB,OAAQH,MAAM,QAAQ4J,QAAS,WAAQ6tB,OAAe12B,GAAY6wB,GAAoB,CAAE5Q,OAAQ,GAAIsgB,UAAW,GAAM,EAA/I,8BAEF,UAACvqB,GAAA,GAAD,CAAMC,WAAS,EAAC3Q,QAAQ,OAAO4Q,QAAS,EAAxC,WACE,SAACF,GAAA,GAAD,CAAMG,MAAI,EAAV,UAAW,SAAC,KAAD,CAAexN,KAAK,aAC/B,SAACqN,GAAA,GAAD,CAAMG,MAAI,EAAV,UAAW,SAAC,KAAD,CAAgBxN,KAAK,aAChC,SAACqN,GAAA,GAAD,CAAMG,MAAI,EAACpQ,SAAU,KACrB,SAACiQ,GAAA,GAAD,CAAMG,MAAI,EAAV,UAAW,UAAC0vB,GAAA,EAAD,CAAwBC,WAAS,EAACzpC,MAAOojC,EAAanhC,SAAU,SAAC41B,EAAI11B,GAAL,OAAWgJ,EAAkB,CAAEi4B,YAAajhC,GAA5C,EAAkDmK,KAAK,QAAvH,WACT,SAACo9B,GAAA,EAAD,CAAc1pC,OAAO,EAAOkI,UAAWk7B,EAAvC,8BACA,SAACsG,GAAA,EAAD,CAAc1pC,OAAO,EAAMkI,SAAUk7B,EAArC,gDAKR,UAACjmB,GAA0BwsB,SAA3B,CAAoC3pC,MAAOqwB,GAA3C,UACG0F,IAAe,SAAC6T,GAAD,CAAWhmB,OAAQmS,EAAalP,aAAcA,EAAczb,KAAMA,GAAMg4B,YAAaA,EAAal7B,WAAYikB,EAAkB0d,SAAUZ,GAAWa,UAAWzP,KAChL,SAACuP,GAAD,CAAWhmB,OAAQA,GAAQiD,aAAcA,EAAczb,KAAMA,GAAMg4B,YAAaA,EAAal7B,WAAYikB,EAAkB0d,SAAUX,aAI5I,CACD,SAASU,GAAT,GAQI,IARiBhmB,EAQlB,EARkBA,OAAQkmB,EAQ1B,EAR0BA,UAAWjjB,EAQrC,EARqCA,aAAczb,EAQnD,EARmDA,KAAMg4B,EAQzD,EARyDA,YAAal7B,EAQtE,EARsEA,SAAU2hC,EAQhF,EARgFA,SAS3EE,GAAcrhC,EAAAA,EAAAA,cAAY,SAACnF,GAC/B,GAAIumC,EAAW,CACb,IAAME,GAAO,QAAOpmB,GACpBomB,EAAQzL,OAAOh7B,EAAO,GACtBumC,EAAUE,EACX,CACF,GACD,CAACpmB,EAAQkmB,IAaT,OAXaroC,EAAAA,EAAAA,UAAQ,kBAAM,SAAC,EAAAgR,SAAD,CAAUC,UAAU,SAACqB,EAAA,EAAD,CAAUrR,QAAQ,cAAcsG,MAAM,OAAO6H,OAAQ,MAAzE,gBACxB+S,QADwB,IACxBA,OADwB,EACxBA,EAAQliB,KAAI,SAAC0iB,EAAO7gB,GAAR,OAAkBsjB,GAAgBzb,IAAQ,SAAC6+B,GAAD,CAErDpjB,aAAcA,EACdzC,MAAOA,EACPjI,QAAS/Q,EAJ4C,UAMrD,SAAC8+B,GAAD,CAAkB3mC,MAAOA,EAAOjC,MAAOuoC,EAAStmC,GAAQ6gB,MAAOA,EAAOgf,YAAaA,EAAal7B,SAAUA,EAAU6hC,YAAaD,EAAYC,OAAcpmC,KALtJJ,EAAQ6gB,EAAM+lB,OADR,KADM,GAUR,CAACvmB,EAAQiD,EAAczb,EAAMg4B,EAAal7B,EAAU2hC,EAAUE,EAAaD,GAEzF,CACD,SAASI,GAAT,GAOI,IAPwB3mC,EAOzB,EAPyBA,MAAOjC,EAOhC,EAPgCA,MAAO8iB,EAOvC,EAPuCA,MAAOgf,EAO9C,EAP8CA,YAAal7B,EAO3D,EAP2DA,SAAU6hC,EAOrE,EAPqEA,YAQ9D3lC,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACFwpB,GAAWwc,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAO7hC,EAAAA,EAAAA,cAAY,WACvB,IAAM8hC,EAAQ5c,EAAS6c,SAAS7E,MAAM,KACtC4E,EAAM5R,MACNyR,EAAS,GAAD,OAAIG,EAAML,KAAK,KAAf,gBAAmC,CAAEv9B,MAAO,CAAEwX,MAAAA,IACvD,GAAE,CAACimB,EAAUjmB,EAAOwJ,EAAS6c,WAE9B,OAAO,SAACtY,GAAD,CAAkB7wB,MAAOA,EAAO8wB,aAAcgR,EAAal7B,SAAUA,EAC1EoqB,kBAAkB,iCAChB,SAAClmB,EAAA,EAAD,CAAQxJ,MAAM,OAAO0J,KAAK,QAAQG,WAAW,SAACi+B,EAAA,EAAD,IAAal+B,QAAS+9B,EAAnE,SAA0EnmC,EAAE,uBAC3E2lC,IAAe,SAAC39B,EAAA,EAAD,CAAQxJ,MAAM,QAAQ0J,KAAK,QAAQG,WAAW,SAAC4yB,GAAA,EAAD,IAAmB7yB,QAAS,kBAAMu9B,EAAYxmC,EAAlB,EAA1E,SAAqGa,EAAE,2BAG5H,CAQD,SAAS6lC,GAAT,GAA+E,IAAjDvkC,EAAgD,EAAhDA,SAAUmhB,EAAsC,EAAtCA,aAAczC,EAAwB,EAAxBA,MAAOjI,EAAiB,EAAjBA,QACnD7H,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACgB0W,EAA8BpE,GAAgBC,GAA9DE,aAAgBiE,wBAExB,GAA0BxD,EAAAA,GAAAA,KAA1B,eAAOmjB,EAAP,KAAcC,EAAd,MACA7hC,EAAAA,EAAAA,YAAU,kBAAMuL,EAASkJ,KAAKmK,WAAU,SAAC1G,GAAD,OAAQmD,EAAMjhB,SAAS8d,IAAO2pB,GAA9B,GAA9B,GAAyE,CAACt2B,EAAU8P,EAAOwmB,IACrG,IAAMC,GAAappC,EAAAA,EAAAA,UAAQ,kBAAMkpC,GAASvmB,EAAM1iB,KAAI,SAAAqN,GAAC,OAAIuF,EAASkJ,KAAK3R,IAAIkD,EAAtB,GAA1B,GAAsD,CAAC47B,EAAOvmB,EAAO9P,IAC1F6vB,GAAWC,EAAAA,EAAAA,GAAYvd,EAAcmE,EAAyB6f,GAC9DC,GAAgBrpC,EAAAA,EAAAA,UAAQ,kBAAM0iC,GAAa,CAAE/4B,KAAM+4B,EAAStd,GAAe7M,OAAQmqB,SAAAA,EAAUhoB,QAAAA,EAArE,GAAiF,CAACgoB,EAAUhoB,EAAS0K,IACnI,OAAKikB,GACE,SAACz/B,EAAA,WAAD,CAAsBrL,MAAO8qC,EAA7B,SACJplC,IAFwB,IAI5B,C,+KC7hBc,SAASqlC,GAAT,GAAyF,IAA3DC,EAA0D,EAA1DA,MAAOta,EAAmD,EAAnDA,SAC1CtsB,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACR,GAA+Bq7B,EAAAA,EAAAA,IAAa,GAA5C,eAAO9sB,EAAP,KAAas4B,EAAb,KAAqBr4B,EAArB,KAEA,OAAO,iCACL,SAACU,GAAA,EAAD,CAAcC,KAAMZ,EAAMa,QAASZ,EAAQ+gB,eAAgB,CAAEpF,SAAU,MAAvE,UACE,SAAC2c,GAAD,CAAgBF,MAAOA,EAAOta,SAAUA,EAAU9d,OAAQA,OAE5D,SAAC,KAAD,CAASvI,OAAO,SAACuF,EAAA,EAAD,UAAaxL,EAAb,0CAAgD8qB,UAAU,MAAMic,OAAK,EAArF,UACE,SAAC/+B,EAAA,EAAD,CAAQxJ,MAAM,OAAO0J,KAAK,QAAQE,QAASy+B,EAA3C,UAAoD,SAACG,GAAA,EAAD,UAGzD,CACD,SAASF,GAAT,GAAiH,IAAvFF,EAAsF,EAAtFA,MAAOta,EAA+E,EAA/EA,SAAU9d,EAAqE,EAArEA,OACjC0B,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAAgEtJ,EAAAA,EAAAA,YAAWC,EAAAA,GAAnEC,UAAkB2b,EAA1B,EAAqBllB,IAAmB4wB,EAAxC,EAAwCA,kBAChBvH,EAA8BpE,GAAgBC,GAA9DE,aAAgBiE,wBACV7O,GAAYnR,EAAAA,EAAAA,YAAWK,EAAAA,GAA7BD,KACFgZ,GAAQ3iB,EAAAA,EAAAA,UAAQ,WACpB,IAAM4pC,EAAS/2B,EAASkJ,KAAK3R,IAAd,OAAkBm/B,QAAlB,IAAkBA,EAAAA,EAAS,IACpCM,GAAS5qB,EAAAA,GAAAA,IAAU6R,GAAmB,SAACtR,EAAID,GAAL,OAAcA,KAAI,OAAKqqB,QAAL,IAAKA,OAAL,EAAKA,EAAQtjB,SAAUsjB,EAAS/2B,EAASkJ,KAAK3R,IAAIoV,EAApE,IAC5C,OAAO1c,OAAOqJ,OAAO09B,GAAQl8B,QAAO,SAAA9H,GAAC,OAAIA,CAAJ,GACtC,GAAE,CAACgN,EAAUie,EAAmByY,IAC3B7G,GAAWC,EAAAA,EAAAA,GAAYvd,EAAcmE,EAAyB5G,EAAOsM,EAAWpc,EAAS0e,QAAQnnB,IAAI6kB,QAAY/sB,GACjH4nC,GAAoB9pC,EAAAA,EAAAA,UAAQ,kBAAM0iC,GAAa,CAAE/4B,KAAM+4B,EAAStd,GAAe7M,OAAQmqB,SAAAA,EAAUhoB,QAAAA,EAArE,GAAiF,CAAC0K,EAAcsd,EAAUhoB,IAC5I,OAAO,SAAC,EAAA1J,SAAD,CAAUC,UAAU,SAACqB,EAAA,EAAD,CAAUrR,QAAQ,cAAcsG,MAAM,OAAO6H,OAAQ,MAAzE,SACJ06B,IAAqB,SAAClgC,EAAA,WAAD,CAAsBrL,MAAOurC,EAA7B,UACpB,SAACpZ,GAAD,CAAkBC,cAAc,EAAME,kBAAkB,iCAAE,SAAC,KAAD,CAAehmB,KAAK,WAAU,SAAC,KAAD,CAAgBA,KAAK,aAAe+lB,mBAAmB,+BAAE,SAACjmB,EAAA,EAAD,CAAQE,KAAK,QAAQ1J,MAAM,QAAQ4J,QAASoG,EAA5C,UAAqD,SAAC6uB,GAAA,EAAD,aAG3M,CC7BD,IAAM+J,GAAe,CAAEnyB,GAAI,EAAG6W,GAAI,EAAG5W,GAAI,EAAGoB,GAAI,GAAIyV,GAAI,IAElDsb,IAAwBC,EAAAA,EAAAA,OAAK,kBAAM,8BAAN,IAEpB,SAASC,GAAT,GACgF,IADnDC,EACkD,EADlDA,WAAY7jB,EACsC,EADtCA,QAASpV,EAC6B,EAD7BA,KAAMa,EACuB,EADvBA,QAE7DpP,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACAkQ,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACFu3B,GAAenjC,EAAAA,EAAAA,cAAY,SAACuY,GAChC2qB,EAAW3qB,GACXzN,GACD,GAAE,CAACo4B,EAAYp4B,IACVs4B,GAAsBpjC,EAAAA,EAAAA,cAAY,SAACkE,EAAOtC,GAAR,gBAAC,oBAAwBsC,GAAUtC,GAAnC,IAA2CyhC,SAAU,CAAChkB,IAAtD,GAAmE,CAACA,IAE5G,GAAoFikB,EAAAA,EAAAA,YAAWF,GAAD,SAAC,YAA0BG,EAAAA,GAAAA,OAA3B,IAAkDF,SAAU,CAAChkB,MAA3J,eAAOmkB,EAAP,KAAqBC,EAArB,KAEA,GAA+B3kB,EAAAA,GAAAA,KAA/B,eAAOC,EAAP,KAAgBC,EAAhB,MACA3e,EAAAA,EAAAA,YAAU,WAAQ,OAAOuL,EAASkJ,KAAKmK,UAAUD,EAAc,GAAE,CAACpT,EAAUoT,IAE5E,IAAM0kB,GAAO7H,EAAAA,GAAAA,KAEP8H,GAAgB5qC,EAAAA,EAAAA,UAAQ,kBAAM6qC,EAAAA,GAAAA,KAAN,GAA+B,IACvDC,GAAY9qC,EAAAA,EAAAA,UAAQ,WACxB,IAAM+qC,GAAaC,EAAAA,GAAAA,GAAeP,EAAcG,GAChD,OAAO5kB,GAAWnT,EAASkJ,KAAK5P,OAAOwB,OAAOo9B,GAAY9qC,KAAI,SAAAigB,GAAG,OAAIA,EAAIV,EAAR,IAAY6C,MAAM,EAAG0nB,GAAaY,GACpG,GAAE,CAAC3kB,EAASnT,EAAU+3B,EAAeH,EAAcE,IAEpD,OAAO,SAAC94B,GAAA,EAAD,CAAcC,KAAMZ,EAAMa,QAASA,EAASmgB,eAAgB,CAAEpF,SAAU,MAAxE,UACL,UAACngB,EAAA,EAAD,YACE,UAACI,EAAA,EAAD,CAAajJ,GAAI,CAAE2X,GAAI,EAAGjU,QAAS,OAAQ2P,eAAgB,gBAAiB1P,WAAY,UAAxF,WACE,UAAC0G,EAAA,EAAD,CAAYlN,QAAQ,KAApB,UAA0BqlB,GAAU,SAACnT,GAAA,EAAD,CAAS7B,IAAK0a,GAAAA,EAAAA,KAAY1F,KAAe,KAA7E,IAAoF3jB,EAApF,4CACA,SAACsP,EAAA,EAAD,CAAalH,QAASgH,QAExB,SAACzG,EAAA,EAAD,KACA,UAACyB,EAAA,EAAD,YACE,SAAC,EAAAiE,SAAD,CAAUC,UAAU,SAACqB,EAAA,EAAD,CAAUrR,QAAQ,cAAcsG,MAAM,OAAO6H,OAAQ,MAAzE,UACE,SAAC46B,GAAD,CAAuBS,aAAcA,EAAcC,qBAAsBA,EAAsBO,mBAAiB,OAElH,SAACrnC,EAAA,EAAD,CAAKy4B,GAAI,EAAT,UACE,SAAC,EAAArrB,SAAD,CAAUC,UAAU,SAACqB,EAAA,EAAD,CAAUrR,QAAQ,cAAcsG,MAAM,OAAO6H,OAAQ,MAAzE,UACE,SAAC8I,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGsB,QAAS,CAAE9B,GAAI,EAAGC,GAAI,EAAGoB,GAAI,GAAzD,SACG6xB,EAAU7qC,KAAI,SAAAuf,GAAE,OACf,SAACtH,GAAA,GAAD,CAAMG,MAAI,EAAUT,GAAI,EAAxB,UACE,SAACwa,GAAA,EAAD,CACE3G,WAAYjM,EACZ0rB,cAAc,SAAC5B,GAAD,CAAoBC,MAAO/pB,IACzCzU,QAASq/B,KAJG5qB,EADD,iBAc9B,C,6DClDK2rB,IAAgBC,EAAAA,GAAAA,IAAkB,QAAIC,EAAAA,KAE7B,SAASC,GAAT,GAAgL,IAArJnB,EAAoJ,EAApJA,WAAYoB,EAAwI,EAAxIA,cAAer6B,EAAyH,EAAzHA,KAAMa,EAAmH,EAAnHA,QACjEpP,GAAMC,EAAAA,EAAAA,GAAe,CAAC,iBAAkB,cAAe,oBAAvDD,EACAkQ,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACFu3B,GAAenjC,EAAAA,EAAAA,cAAY,SAACuY,GAChC2qB,EAAW3qB,GACXzN,GACD,GAAE,CAACo4B,EAAYp4B,IAEhB,GAA+BgU,EAAAA,GAAAA,KAA/B,eAAOC,EAAP,KAAgBC,EAAhB,MACA3e,EAAAA,EAAAA,YAAU,kBAAMuL,EAAS0e,QAAQrL,UAAUD,EAAjC,GAA+C,CAACA,EAAapT,IAEvE,IAAM24B,GAAe/oC,EAAAA,EAAAA,IAAW,kBAAM4sB,GAAAA,EAAAA,MAAN,GAA0B,IAE1D,GAA4B1oB,EAAAA,EAAAA,UAAmB,CAAC,EAAG,EAAG,IAAtD,eAAO1D,EAAP,KAAewoC,EAAf,KACA,GAAoC9kC,EAAAA,EAAAA,UAAS,IAA7C,eAAO+kC,EAAP,KAAmBC,EAAnB,KACMC,GAAqBC,EAAAA,EAAAA,kBAAiBH,GAEtCI,GAAe9rC,EAAAA,EAAAA,UAAQ,oCAAOwrC,GAAgBxlB,GAAWnT,EAAS0e,QAAQplB,OAC7EwB,QAAOq9B,EAAAA,GAAAA,GAAe,CAAEe,WAAYR,EAAetoC,OAAAA,EAAQuH,KAAMohC,IAAsBI,EAAAA,GAAAA,IAAoBR,KAC3GroC,MAAK8oC,EAAAA,GAAAA,GAAY,UAACC,GAAAA,GAAAA,aAAD,QAA2B,IAAI,GAAOC,EAAAA,GAAAA,IAAkBX,KACzEvrC,KAAI,SAAAivB,GAAM,OAAIA,EAAO1P,EAAX,WAHgB,QAGG,EAHH,GAIzB,CAACwG,EAASnT,EAAU24B,EAAcvoC,EAAQsoC,EAAeK,IAE7D,OAAO,SAAC/5B,GAAA,EAAD,CAAcC,KAAMZ,EAAMa,QAASA,EAAnC,UACL,UAACpF,EAAA,EAAD,YACE,SAACI,EAAA,EAAD,CAAajJ,GAAI,CAAE2X,GAAI,GAAvB,UACE,UAACvD,GAAA,GAAD,CAAMC,WAAS,EAAf,WACE,SAACD,GAAA,GAAD,CAAMG,MAAI,EAACpQ,SAAU,EAArB,UACE,UAACkG,EAAA,EAAD,CAAYlN,QAAQ,KAApB,UAA0BsqC,GAAgB,SAACp4B,GAAA,EAAD,CAAS7B,IAAK0a,GAAAA,EAAAA,YAAmBuf,KAAqB,KAAhG,IAAuG5oC,EAAvG,gEAEF,SAACuV,GAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAACpG,EAAA,EAAD,CAAalH,QAASgH,YAI5B,SAACzG,EAAA,EAAD,KACA,UAACyB,EAAA,EAAD,YACE,UAACmL,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAG5F,GAAI,EAAhC,WACE,SAAC0F,GAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAAC0vB,GAAA,EAAD,CAAwBjkC,GAAI,CAAEsL,OAAQ,QAAU7Q,MAAO0E,EAAQ4H,KAAK,QAApE,SACGwgC,EAAAA,GAAAA,KAAgB,SAAAe,GAAI,OAAI,SAACnE,GAAA,EAAD,CAAyB1pC,MAAO6tC,EAAMrhC,QAAS,kBAAM0gC,EAAUN,GAAcloC,EAAQmpC,GAAtC,EAA/C,UACvB,UAACxoC,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAzB,WAA4B,4BAASsjC,KAAc,SAAC,KAAD,CAAcpoC,MAAO,QAD9BooC,EAAvB,SAKzB,SAACl0B,GAAA,GAAD,CAAMG,MAAI,EAACpQ,SAAU,EAArB,UACE,SAACjH,GAAA,EAAD,CACEqrC,WAAS,EACTxhC,KAAK,QACLtM,MAAOmtC,EACPlrC,SAAU,SAAC0G,GAAD,OAAyCykC,EAAczkC,EAAEqR,OAAOha,MAAhE,EACVsB,MAAO8C,EAAE,0BACTmB,GAAI,CAAEsL,OAAQ,QACdk9B,WAAY,CACVxoC,GAAI,CAAEsL,OAAQ,iBAKtB,SAAC8I,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACG0zB,EAAa7rC,KAAI,SAAAgvB,GAAQ,OACxB,SAAC/W,GAAA,GAAD,CAAMG,MAAI,EAAgBT,GAAI,EAAG6W,GAAI,EAAG5W,GAAI,EAAGoB,GAAI,EAAnD,UACE,SAACszB,GAAA,EAAD,CACEtd,SAAUA,EACVlkB,QAASq/B,EACTc,cAAc,SAAC5B,GAAD,CAAoBra,SAAUA,OAJhCA,EADQ,aAYnC,CChED,IAAMud,IAAevC,EAAAA,EAAAA,OAAK,kBAAM,8BAAN,IAEX,SAASwC,KAAoB,IAAD,EACzC,GAA6EljC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxF,IAAQC,UAAak2B,EAArB,EAAqBA,eAAqBva,EAA1C,EAAqCllB,IAAqByQ,EAA1D,EAA0DA,eAClC4Y,EAA8BpE,GAAgBC,GAA9DE,aAAgBiE,wBACxB,GAA2BhgB,EAAAA,EAAAA,YAAWK,EAAAA,GAA9B84B,EAAR,EAAQA,SAAU/4B,EAAlB,EAAkBA,KACZylB,EAAW,UAAGsT,EAAStd,UAAZ,aAAG,EAAwBgK,YAC5C,GAAgCzoB,EAAAA,EAAAA,UAAS,IAAzC,eAAOsoB,EAAP,KAAiByd,EAAjB,KACMC,GAAa1lC,EAAAA,EAAAA,cAAY,kBAAMylC,EAAY/M,EAAlB,GAAmC,CAACA,IAC7DiN,GAAa3lC,EAAAA,EAAAA,cAAY,kBAAMylC,EAAY,GAAlB,GAAuB,KAGtDplC,EAAAA,EAAAA,YAAU,WACJ2nB,GAAYA,IAAa0Q,GAC3B+M,EAAY/M,EACf,GAAE,CAAC1Q,EAAU0Q,IAEd,IAAMjhC,GAAQoB,EAAAA,GAAAA,KACR+sC,GAAaC,EAAAA,GAAAA,GAAcpuC,EAAMquC,YAAYC,GAAG,OAEhDC,GAAYjtC,EAAAA,EAAAA,UAAQ,kBAAMovB,GAAeA,EAAYnK,SAAS3jB,OAAS,IAAK,SAAC4R,EAAA,EAAD,WAAW,SAACnG,EAAA,EAAD,WAAa,SAACE,GAAA,EAAD,CAAiBC,SAAUkiB,EAAYnK,cAAvH,GAA+J,CAACmK,IAClL8d,GAAaC,EAAAA,GAAAA,GAAY/nB,GAAzB8nB,SACFE,GAAmBvB,EAAAA,EAAAA,kBAAiBqB,GACpCG,GAAgBrtC,EAAAA,EAAAA,UAAQ,kBAAM,IAAI0d,IAAI0vB,EAAd,GAAiC,CAACA,IAChE,OAAO,UAACxpC,EAAA,EAAD,YACL,SAAC,EAAAoN,SAAD,CAAUC,UAAU,EAApB,UACE,SAACu7B,GAAD,CACEvd,SAAUA,EACVqe,QAAM,EACNv7B,QAAS66B,EACT1B,cAAc,SAACqC,GAAD,CAAuBhC,cAAe56B,EAAe46B,qBAGvE,UAACrzB,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACGy0B,IAAc,UAAC30B,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAIC,GAAI,GAAIoB,GAAI,EAAGyV,GAAI,EAAG5qB,GAAI,CAAE0D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAA9F,UACZmkC,GAAaA,GACd,SAACO,GAAD,QAEF,UAACt1B,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAIC,GAAI,GAAIoB,GAAI,EAAGyV,GAAI,EAAGvW,WAAS,EAACC,QAAS,EAA5D,WACE,SAACF,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAI6W,GAAI,EAAG5W,GAAI,EAAGrQ,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAA5E,UACE,SAACyjC,GAAA,EAAD,CAAYtd,SAAU0Q,EAAgB8N,OAAQd,EAAYra,UAAQ,EAAC4Y,cAAc,SAACwC,GAAD,CAAkBnC,cAAe56B,EAAe46B,oBAElIjsB,EAAAA,GAAAA,KAAgB,SAAAgH,GAAO,OAAI,SAACpO,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAI6W,GAAI,EAAG5W,GAAI,EAA9B,SACvBlO,EAAKS,IAAIyM,GAAAA,GAAAA,IAAUyP,GAAS9G,IAAIjhB,OACjC,SAAC6zB,GAAA,EAAD,CAAc3G,WAAY9hB,EAAKS,IAAIyM,GAAAA,GAAAA,IAAUyP,GAAS9G,IAAIjhB,MAAOgrB,wBAAyBA,EAAyBokB,UAAWN,EAC5HnC,cAAc,SAAC0C,GAAD,CAAoBtnB,QAASA,IAAaiM,YAAa,CAAC,EAAGF,YAAU,EAACC,UAAQ,KAC9F,SAACub,GAAD,CAAavnB,QAASA,KAJwCA,EAA1C,QAOxBumB,IAAc,UAAC30B,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAIC,GAAI,GAAI6W,GAAI,EAAGvW,WAAS,EAACC,QAAS,EAArD,UACb60B,IAAa,SAAC/0B,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAIC,GAAI,EAAGoB,GAAI,EAA9B,SAAkCg0B,KAChD,SAAC/0B,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAIC,GAAI,EAAGoB,GAAI,EAAGnV,GAAI,CAAE0D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAAtF,UACE,SAAC0kC,GAAD,cAKT,CACD,SAASK,GAAT,GAAyD,IAAlCvnB,EAAiC,EAAjCA,QACKlB,GAAmB7b,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAavJ,IACb2S,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAAgCmrB,EAAAA,EAAAA,KAAhC,eAAO9sB,EAAP,KAAa4U,EAAb,KAAqB/T,EAArB,KACA,OAAO,UAACmB,EAAA,EAAD,CAAWpP,GAAI,CAAEsL,OAAQ,OAAQ7H,MAAO,OAAQ6wB,UAAW,IAAK5wB,QAAS,OAAQoG,cAAe,UAAhG,WACL,SAACb,EAAA,EAAD,WACE,SAACoB,EAAA,EAAD,WAAY,SAAC,MAAD,CAAkBmY,QAASA,SAEzC,SAAChb,EAAA,EAAD,KACA,UAAC1H,EAAA,EAAD,CAAKE,GAAI,CACPmE,SAAU,EACVT,QAAS,OACT2P,eAAgB,SAChB1P,WAAY,UAJd,WAOE,SAACyiC,GAAD,CAAmB5jB,QAASA,EAASpV,KAAMA,EAAMa,QAASA,EAASo4B,WAAY,SAAA3qB,GAAE,OAAI3M,EAASkJ,KAAK7Y,IAAIsc,EAAI,CAAE2M,UAAUmF,EAAAA,EAAAA,IAAoBlM,IAA1D,KACjF,SAACza,EAAA,EAAD,CAAQI,QAAS+a,EAAQ3kB,MAAM,OAAO2C,GAAI,CAAEgH,aAAc,OAA1D,UACE,SAACgjC,GAAA,EAAD,CAAWhqC,GAAI,CAAEsL,OAAQ,IAAK7H,MAAO,cAI5C,CACD,SAASmmC,GAAT,GAAgF,IAApDnC,EAAmD,EAAnDA,cAClB5oC,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACkByiB,GAAmB7b,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAavJ,IACb2S,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAAgCmrB,EAAAA,EAAAA,KAAhC,eAAO9sB,EAAP,KAAa4U,EAAb,KAAqB/T,EAArB,KACA,OAAO,iCACL,SAAC,KAAD,CAASnJ,OAAO,SAACuF,EAAA,EAAD,UAAaxL,EAAb,6CAAmD8qB,UAAU,MAAMic,OAAK,EAAxF,UACE,SAAC/+B,EAAA,EAAD,CAAQxJ,MAAM,OAAO0J,KAAK,QAAQE,QAAS+a,EAA3C,UAAoD,SAACgoB,GAAA,EAAD,SAEtD,SAACxC,GAAD,CAAiBC,cAAeA,EAAepB,WAAY,SAAA3qB,GAAE,OAAI3M,EAAS0e,QAAQruB,IAAIsc,EAAI,CAAE2M,UAAUmF,EAAAA,EAAAA,IAAoBlM,IAA7D,EAA+ElU,KAAMA,EAAMa,QAASA,MAEpK,CACD,SAASw7B,GAAT,GAAqF,IAApDhC,EAAmD,EAAnDA,cACvB5oC,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACkByiB,GAAmB7b,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAavJ,IACb2S,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAAgCmrB,EAAAA,EAAAA,KAAhC,eAAO9sB,EAAP,KAAa4U,EAAb,KAAqB/T,EAArB,KACA,OAAO,iCACL,SAACpH,EAAA,EAAD,CAAQxJ,MAAM,OAAO4J,QAAS+a,EAAQ9a,WAAW,SAAC8iC,GAAA,EAAD,IAAjD,SAAkEnrC,EAAlE,8CACA,SAAC2oC,GAAD,CAAiBC,cAAeA,EAAepB,WAAY,SAAA3qB,GAAE,OAAI3M,EAAS0e,QAAQruB,IAAIsc,EAAI,CAAE2M,UAAUmF,EAAAA,EAAAA,IAAoBlM,IAA7D,EAA+ElU,KAAMA,EAAMa,QAASA,MAEpK,CACD,SAAS67B,GAAT,GAAgE,IAAlCtnB,EAAiC,EAAjCA,QACpB3jB,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACkByiB,GAAmB7b,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAavJ,IACb2S,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAAgCmrB,EAAAA,EAAAA,KAAhC,eAAO9sB,EAAP,KAAa4U,EAAb,KAAqB/T,EAArB,KACA,OAAO,iCACL,SAAC,KAAD,CAASnJ,OAAO,SAACuF,EAAA,EAAD,UAAaxL,EAAb,0CAAgD8qB,UAAU,MAAMic,OAAK,EAArF,UACE,SAAC/+B,EAAA,EAAD,CAAQxJ,MAAM,OAAO0J,KAAK,QAAQE,QAAS+a,EAA3C,UAAoD,SAACgoB,GAAA,EAAD,SAEtD,SAAC5D,GAAD,CAAmB5jB,QAASA,EAASpV,KAAMA,EAAMa,QAASA,EAASo4B,WAAY,SAAA3qB,GAAE,OAAI3M,EAASkJ,KAAK7Y,IAAIsc,EAAI,CAAE2M,UAAUmF,EAAAA,EAAAA,IAAoBlM,IAA1D,MAEpF,CACD,SAASooB,KAAuB,IAAD,EACrB7qC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,iBAAkB,aAAxCD,EACAkQ,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAA2EtJ,EAAAA,EAAAA,YAAWC,EAAAA,GAA9EC,EAAR,EAAQA,UAAR,IAAmBA,UAAkB2b,EAArC,EAAgCllB,IAAmB4wB,EAAnD,EAAmDA,kBAC3CnnB,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFnH,GAAiBC,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,MAAN,GAA4B,IACxDqrC,GAAc/tC,EAAAA,EAAAA,UAAQ,mBAAQ8C,OAAOqJ,OAAO2kB,GAAmBnjB,QAAO,SAAAL,GAAC,OAAIA,CAAJ,IAAOhM,MAAxD,GAAgE,CAACwvB,IACvFkd,GAAc/mC,EAAAA,EAAAA,cAAY,WACzBwC,GACA0nB,OAAOC,QAAQ,uEACpBtuB,OAAOqJ,OAAO2kB,GAAmB/S,SAAQ,SAAAsT,GAAG,OAAIxe,EAASkJ,KAAK7Y,IAAImuB,EAAK,CAAElF,SAAU,IAAvC,GAC7C,GAAE,CAAC1iB,EAAWoJ,EAAUie,IAEnBjI,GAAa7oB,EAAAA,EAAAA,UAAQ,kBAAMwC,GAAkBE,GAAAA,EAAAA,WAAyBF,EAAgBmH,EAAjE,GAAwE,CAACnH,EAAgBmH,IAC5GujC,GAAaC,EAAAA,GAAAA,GAAY/nB,GAAzB8nB,SACFe,GAAchnC,EAAAA,EAAAA,cAAY,SAAAimC,GAAQ,OAAIr6B,EAASq7B,SAAShrC,IAAIkiB,EAAc,CAAE8nB,SAAAA,GAA1C,GAAuD,CAACr6B,EAAUuS,IAE1G,GAA+B4Y,EAAAA,EAAAA,KAA/B,eAAO9sB,EAAP,KAAas4B,EAAb,KAAqBr4B,EAArB,KACMg9B,GAAmBtC,EAAAA,EAAAA,kBAAiBqB,GAC1C,GAA8BltC,EAAAA,EAAAA,UAAQ,WACpC,MAAiF8C,OAAOqJ,OAAO2kB,GAAmBlP,QAAO,SAAC/b,EAAGuoC,GAC3H,IAAMluB,EAAMrN,EAASkJ,KAAK3R,IAAIgkC,GAC9B,GAAIluB,EAAK,CACP,MAA6C8M,GAAAA,GAAAA,sBAA+B9M,EAAK,IAAIxC,IAAIywB,IAAjFE,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,cAC3B,EAAiFthB,GAAAA,GAAAA,sBAA+B9M,EAAK,IAAIxC,IAAIhZ,GAAAA,IAAlG6pC,EAA3B,EAAQF,kBAAsDG,EAA9D,EAA+CF,cAC/CzoC,EAAEwoC,kBAAoBxoC,EAAEwoC,kBAAoBA,EAC5CxoC,EAAEyoC,cAAgBzoC,EAAEyoC,cAAgBA,EAEpCzoC,EAAE0oC,mBAAqB1oC,EAAE0oC,mBAAqBA,EAC9C1oC,EAAE2oC,eAAiB3oC,EAAE2oC,eAAiBA,CACvC,CACD,OAAO3oC,CACR,GAAE,CAAEwoC,kBAAmB,EAAGE,mBAAoB,EAAGD,cAAe,EAAGE,eAAgB,IAZ5EH,EAAR,EAAQA,kBAAmBE,EAA3B,EAA2BA,mBAAoBD,EAA/C,EAA+CA,cAAeE,EAA9D,EAA8DA,eAwB9D,MAAO,CAAEC,QAXsB,CAC7BhwC,KAAMkE,EAAF,iDACJpE,MAAS8vC,EAAoBE,GAC3B,6BAAM,SAACG,GAAA,EAAD,CAAcnwC,MAAO8vC,EAAmB9lC,IAAK,KAAMomC,OAAK,IAA9D,OAAoE,SAACD,GAAA,EAAD,CAAcnwC,MAAOgwC,EAAoBhmC,IAAK,KAAMomC,OAAK,QAD5E,SAACD,GAAA,EAAD,CAAcnwC,MAAO8vC,EAAmB9lC,IAAK,KAAMomC,OAAK,KAS3FC,SANc,CAC9BnwC,KAAMkE,EAAF,iDACJ4K,QAAS,oBAASghC,EAAqBC,EAA9B,EACTjwC,MAAS+vC,EAAgBE,GACvB,6BAAM,SAACE,GAAA,EAAD,CAAcnwC,MAAO+vC,EAAe/lC,IAAK,KAAMomC,OAAK,IAA1D,OAAgE,SAACD,GAAA,EAAD,CAAcnwC,MAAOiwC,EAAgBjmC,IAAK,KAAMomC,OAAK,QAD5E,SAACD,GAAA,EAAD,CAAcnwC,MAAO+vC,EAAe/lC,IAAK,KAAMomC,OAAK,KAIlG,GAAE,CAAChsC,EAAGwrC,EAAkBrd,EAAmBje,IA1BpC47B,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,SA4BjB,OAAO,UAAC17B,EAAA,EAAD,WACJ66B,IAAe,SAACpjC,EAAA,EAAD,CAAQxJ,MAAM,QAAQ4J,QAASijC,EAAapjC,WAAS,EAAC9G,GAAI,CAAE+qC,wBAAyB,EAAGC,uBAAwB,GAAhH,SAAsHnsC,EAAtH,+CAChB,SAACoK,EAAA,EAAD,WACE,UAACoM,GAAA,EAAD,CAAOf,QAAS,EAAhB,WACE,UAACzL,EAAA,EAAD,YACE,SAAChC,EAAA,EAAD,CAAQC,WAAS,EAACzJ,MAAM,OAAO6J,WAAW,SAAC6c,GAAA,EAAD,IAAc/jB,GAAI,CAAEgrC,uBAAwB,EAAGD,wBAAyB,GAAK9jC,QAASy+B,EAAhI,wBACA,SAAC33B,GAAA,EAAD,CAAcC,KAAMZ,EAAMa,QAASZ,EAAnC,UACE,SAACxE,EAAA,EAAD,WACE,SAACI,EAAA,EAAD,WACE,SAACgiC,GAAA,EAAD,CAAeC,aAAc9B,EAAU1sC,SAAUytC,WAIvD,UAACtzB,GAAA,GAAD,YACE,SAAC,MAAD,CAAmBs0B,MAAOR,EAAS9qC,UAAWkX,GAAAA,MACrC,OAAR+zB,QAAQ,IAARA,GAAA,UAAAA,EAAUrhC,eAAV,oBAAAqhC,EAAoBjlC,MAAS,SAAC,MAAD,CAAmBslC,MAAOL,EAAUjrC,UAAWkX,GAAAA,WAGhFrY,GAAkBqmB,GAAc/lB,OAAOC,QAAQ8lB,GAAY7lB,SAAQ,+BAAE6hB,EAAF,iBACrD5kB,KAAI,SAAA6kB,GAAS,OAAI,SAACnY,EAAA,EAAD,CAAmC7I,GAAI,CAAE0D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAAxF,UAC5B,SAAC8b,GAAD,CAA2CC,OAAQA,EAAQC,UAAWA,GAA/CD,EAASC,IADWD,EAASC,EAA5B,GADwC,WAQ3E,CCjMc,SAASoqB,KACtB,IAAMt7B,GAAYC,EAAAA,EAAAA,UACZs7B,GAAWloC,EAAAA,EAAAA,cAAY,iCAAM2M,QAAN,IAAMA,GAAN,UAAMA,EAAWG,eAAjB,iBAAM,EAAoBC,sBAA1B,aAAM,SAAqC,CAAEC,SAAU,UAAvD,GAAoE,CAACL,IAElG,OAAO,UAACuF,GAAA,EAAD,CAAOf,QAAS,EAAhB,WACL,UAACF,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGtU,GAAI,CAAEqT,eAAgB,UAAlD,WACE,SAACe,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAG6W,GAAI,EAAG5W,GAAI,EAAGoB,GAAI,IAApC,UACE,SAACm2B,GAAD,OAEF,UAACl3B,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAI6W,GAAI,EAAG5W,GAAI,EAAGoB,GAAI,IAAKnV,GAAI,CAAE0D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAA/F,WACE,SAACumC,GAAD,CAActkC,QAASokC,KACvB,SAACj8B,EAAA,EAAD,CAAWpP,GAAI,CAAEmE,SAAU,EAAGc,EAAG,GAAjC,UACE,SAACwlB,GAAD,aAIN,SAAC3qB,EAAA,EAAD,CAAKuQ,IAAKP,EAAV,UACE,SAAC64B,GAAD,QAGL,CACD,SAAS4C,GAAT,GAA6D,IAArCtkC,EAAoC,EAApCA,QACD40B,GAAqBp2B,EAAAA,EAAAA,YAAWC,EAAAA,GAA7CC,UAAak2B,eACbh2B,GAAUJ,EAAAA,EAAAA,YAAWK,EAAAA,GAArBD,KAER,OAAO,UAACuO,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGsB,QAAS,CAAE9B,GAAI,EAAG6W,GAAI,EAAG5W,GAAI,EAAGoB,GAAI,EAAGyV,GAAI,GAAvE,WACL,SAACxW,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UACE,SAACoX,GAAD,CAAgBC,SAAU0Q,EAAgB/T,YAAa1Y,EAAAA,EAAWnI,QAASA,MAE5EuU,EAAAA,GAAAA,KAAgB,SAAAgH,GAAO,OACtB,SAACpO,GAAA,GAAD,CAAMG,MAAI,EAAeT,GAAI,EAA7B,UACE,SAAC4T,GAAD,CAAkBC,WAAY9hB,EAAKS,IAAIyM,GAAAA,GAAAA,IAAUyP,GAAS9G,IAAIjhB,MAAO+nB,QAASA,EAASsF,YAAa1Y,EAAAA,EAAWnI,QAASA,KAD1Gub,EADM,MAK3B,CAED,SAAS8oB,KAAwB,IAAD,EACtBv8B,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAAmEtJ,EAAAA,EAAAA,YAAWC,EAAAA,GAAtEmH,EAAR,EAAQA,eAAR,IAAwBlH,UAAkB2b,EAA1C,EAAqCllB,IAAmBovC,EAAxD,EAAwDA,KAChD3lC,GAAUJ,EAAAA,EAAAA,YAAWK,EAAAA,GAArBD,KACFD,GAAoB24B,EAAAA,EAAAA,GAAoBjd,GACxCwjB,GAAWC,EAAAA,EAAAA,MACX3tB,EAAUvR,EAAKS,IAAIyM,GAAAA,GAAAA,SAAetY,MAClCgtC,EAAgB56B,EAAe46B,cAC/Bl9B,EAAQ1E,EAAKS,IAAIyM,GAAAA,GAAAA,KAAWtY,MAC5B+P,EAAY3E,EAAKS,IAAIyM,GAAAA,GAAAA,KAAWtY,MAChCgxC,EAAgB5lC,EAAKS,IAAIyM,GAAAA,GAAAA,eAAqBtY,MAC9CixC,EAAO,CACXC,KAAM9lC,EAAKS,IAAIyM,GAAAA,GAAAA,MAAAA,MAAkBtY,MACjCmxC,MAAO/lC,EAAKS,IAAIyM,GAAAA,GAAAA,MAAAA,OAAmBtY,MACnCoxC,MAAOhmC,EAAKS,IAAIyM,GAAAA,GAAAA,MAAAA,OAAmBtY,OAE/BqxC,EAAS,CACbH,KAAM9lC,EAAKS,IAAIyM,GAAAA,GAAAA,MAAAA,MAAkBtY,MACjCmxC,MAAO/lC,EAAKS,IAAIyM,GAAAA,GAAAA,MAAAA,OAAmBtY,MACnCoxC,MAAOhmC,EAAKS,IAAIyM,GAAAA,GAAAA,MAAAA,OAAmBtY,OAE7BsxC,GAAa1C,EAAAA,GAAAA,GAAY/nB,GAAzByqB,SACR,OAAO,UAAC38B,EAAA,EAAD,CAAWpP,GAAI,CAAEsL,OAAQ,QAAzB,WACL,UAACxL,EAAA,EAAD,CAAKE,GAAI,CAAE4oB,SAAU,YAArB,WACE,UAAC9oB,EAAA,EAAD,CAAKE,GAAI,CAAE4oB,SAAU,WAAYnlB,MAAO,OAAQ6H,OAAQ,QAAxD,WACE,SAACjB,EAAA,EAAD,CAAYlN,QAAQ,KAAK6C,GAAI,CAAE4oB,SAAU,WAAYojB,KAAM,MAAOxiB,OAAQ,EAAGlY,UAAW,wBAAyB2T,QAAS,KAA1H,UACE,SAAC,KAAD,CAAc/kB,MAAO2M,EAAe1N,OAAQ8sC,SAAO,OAErD,SAACnsC,EAAA,EAAD,CAAKE,GAAI,CAAE4oB,SAAU,WAAYojB,KAAM,MAAOxiB,OAAQ,KAAMlY,UAAW,wBAAyB2T,QAAS,IAAMxhB,MAAO,OAAQC,QAAS,OAAQ2P,eAAgB,SAAUtP,GAAI,GAA7K,UACE,SAAC1F,GAAA,EAAD,CAAMhB,MAAO+Z,EAASpX,GAAI,CAAEsL,OAAQ,QAClCvP,OAAO,UAACsO,EAAA,EAAD,CAAYlN,QAAQ,KAAK6C,GAAI,CAAE0D,QAAS,OAAQsB,IAAK,EAAGrB,WAAY,UAApE,UACJnD,GAAAA,EAAS4W,IACV,SAACtX,EAAA,EAAD,CAAKE,GAAI,CAAEuL,WAAY,SAAUrH,UAAW,UAA5C,SAAyD2I,EAAenG,QACxE,SAAC2I,GAAA,EAAD,CAAS7B,IAAG,UAAE0a,GAAAA,EAAAA,mBAAF,aAAE,EAAqBuf,aAGzC,SAAC3nC,EAAA,EAAD,CAAKE,GAAI,CAAE4oB,SAAU,WAAYojB,KAAM,EAAG/rC,IAAK,GAA/C,UACE,SAACoR,GAAA,EAAD,CAAYrR,GAAI,CAAEiF,EAAG,GAAK5H,MAAM,QAAQ4J,QAAS,kBAAM8H,EAASq7B,SAAShrC,IAAIkiB,EAAc,CAAEyqB,UAAWA,GAAvD,EAAjD,SACGA,GAAW,SAACG,GAAA,EAAD,KAAe,SAACC,GAAA,EAAD,SAG/B,SAAC9hC,EAAA,EAAD,CAAYrK,GAAI,CAAEiF,EAAG,EAAG2jB,SAAU,WAAYwjB,MAAO,EAAGnsC,IAAK,EAAGglB,QAAS,IAAzE,UACE,SAAC3d,EAAA,EAAD,WAAU+kC,EAAAA,GAAAA,IAAe9hC,EAAOC,WAGpC,SAAC1K,EAAA,EAAD,CAAK0N,IAAKX,EAAey/B,QAASzsC,UAAU,MAAM4D,MAAM,OAAO6H,OAAO,aAExE,UAACxL,EAAA,EAAD,YACE,SAACmoB,GAAA,EAAD,CAAgBjoB,GAAI,CAAEiF,EAAG,GAAKgC,QAAS,kBAAM69B,EAAS,SAAf,EAAvC,UACE,SAAC1wB,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGikB,IAAK,EAAjC,SACI,CAAC,OAAQ,QAAS,SAAqCp8B,KAAI,SAAAowC,GAAI,aAC/D,SAACn4B,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UACE,SAAC04B,GAAA,EAAD,CAAOC,aAAcf,EAAKa,GAAOlvC,MAAOyuC,EAAOS,GAAQ,OAAS,YAC9DG,QAAQ,WACRC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEd7sC,GAAI,CACFyD,MAAO,OACP6H,OAAQ,OACR,sBAAuB,CACrBujB,SAAU,SACVie,QAAS,aACT9lC,aAAc,OACd+lC,WAAY,EACZzhC,OAAQ,WAdd,UAiBE,SAACxL,EAAA,EAAD,CAAKD,UAAU,MAAM2N,IAAG,UAAEX,EAAemgC,eAAeT,UAAhC,aAAE,EAAqCU,IAAKxpC,MAAM,OAAO6H,OAAO,YAlBrEihC,EADwC,SAwBrE,SAACliC,EAAA,EAAD,CAAYrK,GAAI,CAAEkE,UAAW,SAAUq0B,GAAI,GAAKp7B,QAAQ,KAAxD,SAA8D0P,EAAeqgC,qBAC7E,SAAC94B,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACGmJ,EAAAA,GAAAA,IAAM,EAAG,GAAGthB,KAAI,SAAAqN,GAAC,aAChB,SAAC4K,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,EAAf,UACE,SAACmU,GAAA,EAAD,CAAgBhhB,QAAS,kBAAMrB,EAAkB,CAAE6lC,cAAejiC,IAAMiiC,EAAgBjiC,EAAI,EAAIA,GAAvE,EAAzB,UACE,SAAC1J,EAAA,EAAD,CAAKD,UAAU,MAAM2N,IAAG,UAAEX,EAAemgC,eAAf,uBAA8CxjC,WAAhD,aAAE,EAA6EyjC,IACrGjtC,IAAE,WACIyrC,GAAiBjiC,EAAI,CAAC,EAAI,CAAEK,OAAQ,oBAE1CpG,MAAM,OAAO6H,OAAO,YANH9B,EADP,OAWpB,SAACye,GAAA,EAAD,CAAgBjoB,GAAI,CAAEiF,EAAG,GAAKgC,QAAS,kBAAM69B,EAAS,YAAf,EAAvC,UACE,SAAC1wB,GAAA,GAAD,CAAMC,WAAS,EAACuB,QAAS,EAAGtB,QAAS,EAArC,UACGmJ,EAAAA,GAAAA,IAAM,EAAG,GAAGthB,KAAI,SAAAqN,GAAC,OAAI,SAAC4K,GAAA,GAAD,CAAcG,MAAI,EAACT,GAAI,EAAGxI,OAAO,OAAjC,UAAwC,SAAC6wB,GAAA,EAAD,CAAmB7a,aAAckqB,EAAKhiC,GAAIxL,MAAOwL,KAA9EA,EAAf,aAK3B,CC1ID,IAAM2jC,GAAgB,CACpBr5B,GAAI,GACJ6W,GAAI,EACJ5W,GAAI,GAGS,SAASq5B,KACtB,OAAsC3nC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzCC,EAAR,EAAQA,UAAWkH,EAAnB,EAAmBA,eACXhH,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFD,GAAoB24B,EAAAA,EAAAA,GAAoB54B,EAAUvJ,KAGlDoO,EAAY3E,EAAKS,IAAIyM,GAAAA,GAAAA,KAAWtY,MAChCgxC,EAAgB5lC,EAAKS,IAAIyM,GAAAA,GAAAA,eAAqBtY,MAE9CG,GAAQoB,EAAAA,GAAAA,KACRqxC,GAAOrE,EAAAA,GAAAA,GAAcpuC,EAAMquC,YAAYC,GAAG,OAC1CoE,GAAqBpxC,EAAAA,EAAAA,UAAQ,kBAAMuhB,EAAAA,GAAAA,IAAM,EAAG,GAAGthB,KAAI,SAAAqN,GAAC,OACxD,SAAC+jC,GAAD,CACEC,UAAS,uBAAkBhkC,GAC3B8d,SAAQ,4BAAuB9d,GAC/BikC,aAAc,kBAAM7nC,EAAkB,CAAE6lC,cAAejiC,IAAMiiC,EAAgBjiC,EAAI,EAAIA,GAAvE,GAJwC,GAAvB,GAK5B,CAACiiC,EAAe7lC,IACvB,OAAO,iCACL,SAAC8nC,GAAD,KACA,UAACt5B,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UAEG+4B,IAAQ,UAACj5B,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAIC,GAAI,GAAIoB,GAAI,EAAGnV,GAAI,CAAE0D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAAvF,WACP,SAACoK,EAAA,EAAD,WAAW,SAACnG,EAAA,EAAD,WAAa,UAACoB,EAAA,EAAD,CAAYlN,QAAQ,KAAK6C,GAAI,CAAEkE,UAAW,UAA1C,+BAAyEunC,SAChG6B,EAAmBnxC,KAAI,SAAC4hB,EAAGvU,GAAJ,OAAU,SAAC1J,EAAA,EAAD,CAAaE,GAAI,CAAEilB,QAASwmB,GAAkBjiC,EAAI,EAAK,EAAI,IAA3D,SAAoEuU,GAA1DvU,EAApB,QAE1B,UAAC4K,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAIC,GAAI,GAAIoB,GAAI,EAAGd,WAAS,EAACC,QAAS,EAArD,UArBmB,CAAC,CAAC,OAAQ,yBAA0B,CAAC,QAAS,mBAAoB,CAAC,QAAS,oBAuB7EnY,KAAI,+BAAEowC,EAAF,KAAQoB,EAAR,YAClB,SAACv5B,GAAA,IAAD,kBAAMG,MAAI,GAAgB44B,IAA1B,cACE,SAACI,GAAD,CACEC,UAAWjB,EACXjlB,SAAUqmB,MAHEpB,EADE,MAOjB1/B,EAAemgC,eAAe,YAAc,SAAC54B,GAAA,IAAD,kBAAMG,MAAI,GAAK44B,IAAf,cAC7C,SAACI,GAAD,CACEC,UAAU,SACVlmB,SAAS,4BAGVza,EAAemgC,eAAe,aAAc,SAAC54B,GAAA,IAAD,kBAAMG,MAAI,GAAK44B,IAAf,cAC7C,SAACI,GAAD,CACEC,UAAU,UACVlmB,SAAS,eAtC+D,CAAC,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,sBAAuB,IA0C3LnrB,KAAI,YAAyB,IAAD,eAAtBowC,EAAsB,KAAhBoB,EAAgB,KAATC,EAAS,KACpCC,EAAUrjC,GAAaojC,EAC3B,OAAK/gC,EAAemgC,eAAeT,IAC5B,SAACn4B,GAAA,IAAD,kBAAMG,MAAI,EAAYnZ,MAAO,CAAE6pB,QAAS4oB,EAAU,EAAI,KAAWV,IAAjE,cACL,SAACI,GAAD,CACEC,UAAWjB,EACXjlB,SAAUqmB,MAHSpB,GAD0B,IAOlD,QAGDc,IAAQ,UAACj5B,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAIC,GAAI,GAAIoB,GAAI,EAAGd,WAAS,EAACC,QAAS,EAArD,WACR,SAACF,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAf,UACE,SAAC1E,EAAA,EAAD,WAAW,SAACnG,EAAA,EAAD,WAAa,UAACoB,EAAA,EAAD,CAAYlN,QAAQ,KAAK6C,GAAI,CAAEkE,UAAW,UAA1C,+BAAyEunC,WAElG6B,EAAmBnxC,KAAI,SAAC4hB,EAAGvU,GAAJ,OAAU,SAAC4K,GAAA,IAAD,kBAAMG,MAAI,EAASvU,GAAI,CAAEilB,QAASwmB,GAAkBjiC,EAAI,EAAK,EAAI,KAAW2jC,IAA5E,aAA6FpvB,IAA7EvU,EAA1B,YAI/B,CACD,SAASkkC,KACP,IACM78B,GADWpL,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACc4tB,aAAa5iB,SACnC,OAAO,SAACzB,EAAA,EAAD,WACL,SAACnG,EAAA,EAAD,WACE,SAACmL,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGtV,OAAOC,QAAQ4R,GAAUhH,QAAO,gDAAqBsF,OAArB,IAA8BhT,KAAI,YAAkB,IAAD,eAAfC,EAAe,KAAVmT,EAAU,KAClF,OAAO,SAAC6E,GAAA,GAAD,CAAMG,MAAI,EAAV,UACL,SAAC1L,EAAA,EAAD,WAAU,SAACI,EAAA,EAAD,CAAajJ,GAAI,CAAEiF,EAAG,EAAG,eAAgB,CAAEiE,GAAI,IAA/C,UACR,SAAC,MAAD,CAAkBqG,KAAMA,SAFLnT,EAKxB,SAIR,CAED,IAAM0xC,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAMxC,SAASP,GAAT,GAAyF,IAA7DC,EAA4D,EAA5DA,UAAWlmB,EAAiD,EAAjDA,SAAUmmB,EAAuC,EAAvCA,aAC/C,GAAqEhoC,EAAAA,EAAAA,YAAWC,EAAAA,GAA3DqoC,EAArB,EAAQpoC,UAAaooC,OAAUlhC,EAA/B,EAA+BA,eAAgBjH,EAA/C,EAA+CA,kBACvCC,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KAEFmoC,GAAoB7qC,EAAAA,EAAAA,cACxB,SAAAhD,GAAQ,OAAI,SAAC8nB,GAAA,EAAD,CAAgBhhB,QAASwmC,EAAzB,SAAwCttC,GAA5C,GACR,CAACstC,IAGGQ,GAAiB9qC,EAAAA,EAAAA,cAAY,SAACopC,EAA6B2B,GAA9B,OACjCtoC,EAAkB,CAAEmoC,QAAO,oBAAMA,GAAP,eAAgBxB,EAAO2B,KADhB,GACwC,CAACH,EAAQnoC,IAEhFoD,EAA6B,KAEjC,GAAIwkC,KAAaO,EAAQ,CACvB,IAAMI,EAAatoC,EAAKS,IAAIyM,GAAAA,GAAAA,MAAYy6B,IAAuB/yC,MACzD8P,EAAQ1E,EAAKS,IAAIyM,GAAAA,GAAAA,MAAYy6B,IAAY/yC,MACzCmzC,EAAM/nC,EAAKS,IAAIyM,GAAAA,GAAAA,KAAWtY,MAEhCuO,GAAS,SAACzB,GAAA,EAAD,CAAgBT,WAAS,EAAChC,MAAK,qBAAgByF,GAASlN,MAAO8wC,EAAa,OAAS,UAAWnuC,GAAI,CAAEgH,aAAc,GAApH,UACNyW,EAAAA,GAAAA,IAAM,EAAGqwB,GAAaF,IAAMzxC,KAAI,SAAAqN,GAAC,OAChC,UAACxO,GAAA,EAAD,CAAkB8C,SAAUiwC,EAAOP,KAAgBhkC,EAAI7G,SAAUorC,EAAOP,KAAgBhkC,EAAIvC,QAAS,kBAAMgnC,EAAeT,EAAWhkC,EAAhC,EAArG,wBAAqJA,EAAI2kC,IAA1I3kC,EADiB,KAGrC,CACD,IAAM4kC,EAAcvhC,EAAemgC,eAAeQ,GAYlD,OAAO,UAACp+B,EAAA,EAAD,CAAWpP,GAAI,CAAEsL,OAAQ,QAAzB,UACJtC,GACD,UAACC,EAAA,EAAD,YACE,SAACwf,GAAA,EAAD,CAAoBC,YAAa+kB,EAAc9kB,QAASqlB,EAAxD,UACE,UAAC55B,GAAA,GAAD,CAAMC,WAAS,EAACrU,GAAI,CAAEmT,SAAU,UAAhC,WACE,SAACiB,GAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAACzU,EAAA,EAAD,CAAKD,UAAU,MAAM2N,IAAG,OAAE4gC,QAAF,IAAEA,OAAF,EAAEA,EAAanB,IAAKjtC,GAAI,CAAEyD,MAAO,GAAI6H,OAAQ,aAEvE,UAAC8I,GAAA,GAAD,CAAMG,MAAI,EAACpQ,SAAU,EAAGnE,GAAI,CAAEgE,GAAI,GAAlC,WACE,SAACqG,EAAA,EAAD,CAAYlN,QAAQ,KAApB,gBAA0BixC,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAa1nC,QACvC,SAAC2D,EAAA,EAAD,CAAYlN,QAAQ,YAApB,SAAiCmqB,YAK3B,OAAX8mB,QAAW,IAAXA,GAAAA,EAAahlC,UAAW,SAACD,GAAA,EAAD,CAAiBC,SAAUglC,EAAYhlC,SAAUT,UAAQ,EAACD,WAxBpE,SAACkB,GAAuC,IAAD,EACpDykC,EAAY,UAAGzkC,EAAQZ,cAAX,aAAG,EAAgBjE,OACnC,SAAIspC,GAAyC,kBAAjBA,IACNA,EAAatzC,MAAMoF,SAASpF,MAAMoN,MAC3CvK,SAAS4vC,EAGvB,IAiBmH,UAGrH,C,8CCjJc,SAASc,KACtB,OAAO,SAACxuC,EAAA,EAAD,CAAK4D,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAGrB,WAAW,UAA9D,UACL,UAACyQ,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,UAACF,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAIC,GAAI,EAAGoB,GAAI,EAAGnV,GAAI,CAAE0D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAAtF,WACE,SAACupC,GAAD,KACA,SAACC,GAAD,QAED/wB,EAAAA,GAAAA,IAAM,EAAG,GAAGthB,KAAI,SAAAqN,GAAC,OAAI,SAAC4K,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAIC,GAAI,EAAGoB,GAAI,EAA9B,UACpB,SAACs5B,GAAD,CAAiBzwC,MAAOwL,KADkCA,EAA1C,QAKvB,CACM,SAAS+kC,KAAmB,IAAD,MAChC,GAA0B9oC,EAAAA,EAAAA,YAAWK,EAAAA,GAA7BD,EAAR,EAAQA,KAAM+Q,EAAd,EAAcA,QACR83B,EAAY7oC,EAAK8oC,cACjBj4B,EAAgD,GAOtD,OANA1X,OAAOC,QAAP,UAAeyvC,EAAUnoB,aAAzB,QAAkC,CAAC,GAAGtM,SAAQ,+BAAE7d,EAAF,KAAOmT,EAAP,YAC3CA,EAAKJ,SAA0B,IAAfI,EAAK9U,OAAeic,EAAMyJ,KAAK,CAAC,CAAC,QAAS/jB,GAAMmT,GADrB,IAE9CvQ,OAAOC,QAAP,UAAeyvC,EAAUE,cAAzB,QAAmC,CAAC,GAAG30B,SAAQ,+BAAE7d,EAAF,KAAOmT,EAAP,YAC5CA,EAAKJ,SAA0B,IAAfI,EAAK9U,OAAeic,EAAMyJ,KAAK,CAAC,CAAC,SAAU/jB,GAAMmT,GADrB,IAE/CvQ,OAAOC,QAAP,UAAeyvC,EAAUG,aAAzB,QAAkC,CAAC,GAAG50B,SAAQ,+BAAE7d,EAAF,KAAOmT,EAAP,YAC3CA,EAAKJ,SAAiC,kBAAfI,EAAK9U,OAAqC,IAAf8U,EAAK9U,OAAeic,EAAMyJ,KAAK,CAAC,CAAC,QAAS/jB,GAAMmT,GADvD,IAEzCmH,EAAMlZ,QACJ,UAAC4R,EAAA,EAAD,YACL,SAACnG,EAAA,EAAD,WACE,SAACoB,EAAA,EAAD,4BAEF,SAAC7C,EAAA,EAAD,KACA,SAACyB,EAAA,EAAD,WACE,SAACmL,GAAA,GAAD,CAAMC,WAAS,EAAf,SACGqC,EAAMva,KAAI,iCAAEgK,EAAF,KAAQqR,EAAR,YAAeA,IAAK,SAACpD,GAAA,GAAD,CAAMG,MAAI,EAACT,GAAI,GAAf,UAC7B,SAAC,MAAD,CAAkBvE,KAAMiI,EAAGR,SAAQ,WAAEwc,EAAAA,GAAAA,IAAY,OAAC5c,QAAD,IAACA,OAAD,EAACA,EAAS+3B,cAAexoC,UAAvC,aAAE,EAA4C1L,SAD5Bwc,KAAKC,UAAUM,EAAE/G,MAA7D,WARS,IAc3B,CACD,SAAS+9B,KACP,IAAQ3vC,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACAgH,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KAEFipC,GAD0BrpC,EAAAA,EAAAA,YAAWC,EAAAA,GAAnCC,UAAa6lC,KACE1tB,QAAO,SAAC/b,EAAGlD,GAAJ,OAAUkD,GAAKlD,EAAI,EAAI,EAAvB,GAA2B,GACzD,OAAO,iCACL,SAACuQ,EAAA,EAAD,WACE,SAAClB,EAAA,EAAD,CAAYpJ,OAAO,4BAAOjG,EAAU,yBAAjB,KAA2C,6BAAQ,UAAC,KAAD,CAAWxB,MAAOyxC,GAAa,EAAI,UAAY,UAA/C,cAA4DA,EAA5D,WAAnD,KAAkJ,SAAC1kC,GAAA,EAAD,CAAatF,OAAO,SAACuF,EAAA,EAAD,UAAaxL,EAAb,wDACvLkwC,qBAAsB,CAAE5xC,QAAS,iBAEpC6xC,GAAAA,EAAAA,KAAoB,SAACC,EAAKzlC,GACzB,IAAMlL,GAAO,SAAC8L,GAAA,EAAD,CAAatF,OAAO,SAACuF,EAAA,EAAD,UAAa4kC,EAAIC,SAC5CpqC,GAAQ,4BAAOmqC,EAAIvoC,KAAX,IAAkBpI,KAChC,OAAO,UAAC8Q,EAAA,EAAD,CAAmBpP,GAAI,CAAEilB,QAASgqB,EAAIxlC,QAAQ5D,GAAQ,EAAI,IAA1D,WACL,SAACqI,EAAA,EAAD,CAAYpJ,MAAOA,EAAOC,OAAQkqC,EAAI3wC,KAAMywC,qBAAsB,CAAE5xC,QAAS,eAC5E8xC,EAAIxlC,QAAQ5D,KAAS,SAAC2B,EAAA,EAAD,IACrBynC,EAAIxlC,QAAQ5D,KAAS,SAACoD,EAAA,EAAD,WACpB,SAACE,GAAA,EAAD,CAAiBC,SAAU6lC,EAAI7lC,SAAUC,cAAY,EAACV,UAAQ,QAJ3Ca,EAOxB,MAEJ,CACD,SAASilC,GAAT,GAAwD,IAA7BzwC,EAA4B,EAA5BA,MACjB4gC,GAAan5B,EAAAA,EAAAA,YAAWK,EAAAA,GAAxB84B,SACA//B,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACR,GAAyF4G,EAAAA,EAAAA,YAAWC,EAAAA,GAAjFqrB,EAAnB,EAAQprB,UAAqCwpC,EAA7C,EAA2BxpC,UAAavJ,IAA2BwJ,EAAnE,EAAmEA,kBAC7DwpC,EAAcre,EAAOya,KAAKxtC,GAC1BwtC,GAAOtvC,EAAAA,EAAAA,UAAQ,iBAAM,CAACizC,GAAD,gBAAwBpe,EAAOya,OAAM3hC,QAAO,SAAChL,EAAG2K,GAAJ,OAAWA,EAAI,IAAOxL,CAAtB,GAAlD,GAAgF,CAAC+yB,EAAOya,KAAM2D,EAAoBnxC,IACjIqxC,GAAiBpiC,EAAAA,EAAAA,KACjBqiC,GAAcnsC,EAAAA,EAAAA,cAAY,SAACimB,GAAD,OAAgCxjB,EAAkB,CAAEnI,KAAM,OAAQO,MAAAA,EAAOorB,QAAAA,GAAzE,GAAqF,CAACprB,EAAO4H,IAEvH2pC,EAAa3Q,EAASwQ,GACtBI,GAA4DtzC,EAAAA,EAAAA,UAAQ,wBAAMqzC,GAAc,CAC5F5pC,WAAU,oBAAM4pC,EAAW5pC,WAAlB,IAA6BR,YAAW,UAAE4rB,EAAO0e,gBAAgBL,UAAzB,QAAyC,CAAC,IAC3FviC,eAAgB0iC,EAAW1iC,eAC3BjH,kBAAmB,SAACyB,GAClB,GAAK+nC,GACC,gBAAiB/nC,EAAvB,CACA,IAAQlC,EAAgBkC,EAAhBlC,YACRS,EAAkB,CAAEnI,KAAM,kBAAmB2xC,YAAaA,EAAajqC,YAAAA,GAFlC,CAGtC,EARuE,GASvE,CAAC4rB,EAAQqe,EAAaG,EAAY3pC,IAC/B8pC,GAAkDxzC,EAAAA,EAAAA,UAAQ,kBAAMqzC,GAAc,CAClF1pC,KAAM0pC,EAAW96B,OACjBmqB,SAAUA,EAFoD,GAG7D,CAAC2Q,EAAY3Q,IAChB,OAAO,UAACxvB,EAAA,EAAD,YACL,SAACugC,GAAD,CAAsBruB,aAAc8tB,EAAa5D,KAAMA,EACrDoE,QAASN,EACTvzC,MAAO8C,EAAE,WAAY,CAAE8Z,MAAO3a,EAAQ,MAEvCoxC,GAAeI,IAA4B,SAAC9pC,EAAA,WAAD,CAA2BjL,MAAO+0C,EAAlC,SACzCE,IAAuB,SAAC5pC,EAAA,WAAD,CAAsBrL,MAAOi1C,EAA7B,UACtB,SAAC5L,GAAA,EAAD,CAAexiB,aAAc8tB,EAC3BS,cAAeR,EAEfS,kBAAkB,SAACpqC,EAAA,WAAD,CAA2BjL,MAAO+0C,EAAlC,UAChB,SAAC1pC,EAAA,WAAD,CAAsBrL,MAAOi1C,EAA7B,UACE,SAACK,GAAD,QAGJC,gBAAgB,SAACtqC,EAAA,WAAD,CAA2BjL,MAAO+0C,EAAlC,UACd,SAAC1pC,EAAA,WAAD,CAAsBrL,MAAOi1C,EAA7B,UACE,SAACO,GAAD,QAGJC,mBAAmB,SAACxqC,EAAA,WAAD,CAA2BjL,MAAO+0C,EAAlC,UACjB,SAAC1pC,EAAA,WAAD,CAAsBrL,MAAOi1C,EAA7B,UACE,SAACS,GAAD,QAGJC,gBAAc,UAKvB,CACD,SAASL,KACP,IAAQlqC,GAAUJ,EAAAA,EAAAA,YAAWK,EAAAA,GAArBD,KACFnH,GAAiBC,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,MAAN,GAA4B,IACxDwK,GAAWlN,EAAAA,EAAAA,UAAQ,kBAAMwC,GAC7BM,OAAOC,QAAQL,GAAAA,EAAAA,WAAyBF,EAAgBmH,IACrD3G,SAAQ,+BAAE6hB,EAAF,iBACC7hB,SAAQ,SAAAmxC,GAAE,OAAI3xC,EAAeqiB,GAASK,kBAAkBivB,EAA9C,GADX,GAFY,GAIrB,CAAC3xC,EAAgBmH,IACrB,OAAKuD,GACE,SAACD,GAAA,EAAD,CAAiBC,SAAUA,EAAUC,cAAc,IADpC,IAEvB,CACD,SAAS4mC,KACP,IAA0B7mB,GAAc3jB,EAAAA,EAAAA,YAAWC,EAAAA,GAA3CC,UAAavJ,IAEfkvB,GADe7lB,EAAAA,EAAAA,YAAWK,EAAAA,GAAxB84B,SACqBxV,GAAUkC,YACvC,OAAKA,EAAYnK,UACV,SAAChY,GAAA,EAAD,CAAiBC,SAAUkiB,EAAYnK,SAAU9X,cAAc,IADpC,IAEnC,CACD,SAAS8mC,KACP,IAA0B/mB,GAAc3jB,EAAAA,EAAAA,YAAWC,EAAAA,GAA3CC,UAAavJ,IAEfyQ,GADepH,EAAAA,EAAAA,YAAWK,EAAAA,GAAxB84B,SACwBxV,GAAUvc,eACpCzD,EAAWpK,OAAOqJ,OAAOwE,EAAekhC,QAAQ7uC,SAAQ,SAAAoxC,GAAG,OAAIA,EAAIlnC,QAAR,IACjE,OAAKA,GACE,SAACD,GAAA,EAAD,CAAiBC,SAAUA,EAAUC,cAAc,IADpC,IAEvB,CAED,SAASsmC,GAAT,GACoQ,IADpOruB,EACmO,EADnOA,aAAckqB,EACqN,EADrNA,KAAMzvC,EAC+M,EAD/MA,MAAO6zC,EACwM,EADxMA,QACwM,IAD/LW,kBAAAA,OAC+L,MAD3K,CAAC,EAC0K,EACzP1xC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,gBAAiB,iBAAkB,cAAzDD,EACAkQ,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACAqb,GAAWC,EAAAA,EAAAA,KAAXD,OACFomB,GAAkB7xC,EAAAA,EAAAA,IAAW,kBAAM2rB,EAAAA,EAAAA,MAAN,GAA6B,IAC1DmmB,GAASttC,EAAAA,EAAAA,cAAY,SAAC/G,GAAD,aAA+BA,EAAIs0C,WAAW,YAAf,UAAgC7xC,EAAE,iBAAD,QAAkB8xC,EAAAA,EAAAA,IAAkBv0C,EAAKguB,KAA1E,aAAyFvrB,EAAE,qBAAD,cAAsB2xC,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAkBp0C,EAAKguB,UAA7C,aAAsB,EAAgC/S,aAAhJ,KAAmKxY,EAAE,iBAAD,OAAkBzC,GAArN,GAA6N,CAACo0C,EAAiB3xC,EAAGurB,IACvQwmB,GAAQztC,EAAAA,EAAAA,cAAY,SAAC/G,GAAD,YAAoC,KAARA,GAAa,SAACy0C,GAAA,EAAD,IAAgBL,GAAkB,SAACjjC,EAAA,EAAD,CAAWC,IAAG,UAAEgjC,EAAgBp0C,EAAKguB,UAAvB,aAAE,EAA8B3c,aAAczN,GAAI,CAAE8wC,GAAI,MAAU,uBAA3J,GAAkK,CAACN,EAAiBpmB,IACxM2mB,GAAa5tC,EAAAA,EAAAA,cAAY,SAAC/G,GAAD,OAAuB2S,EAASq7B,SAAS9jC,IAAIlK,GAAK2vC,QAAlD,GAA4D,CAACh9B,IACtFiiC,GAAY7tC,EAAAA,EAAAA,cAAY,gBAAG/G,EAAH,EAAGA,IAAH,OAAyCovC,EAAK3hC,QAAO,SAAAhL,GAAC,OAAIA,GAAKA,IAAMyiB,CAAf,IAA6B1jB,SAASxB,IAASA,EAAIs0C,WAAW,aAAelF,EAAK5yB,MAAK,SAAC/Z,EAAG2K,GAAJ,OAAU3K,EAAE6xC,WAAW,WAAvB,GAA7I,GAAmL,CAAClF,EAAMlqB,IAClNjZ,GAAyDnM,EAAAA,EAAAA,UAAQ,kBAAO,CAC5EE,IAAK,GACLL,MAAO8C,EAAF,6CAFgE,gBAIpEkQ,EAASsa,MAAMjkB,KACfjJ,KAAI,SAAAS,GAAC,MAAK,CAAER,IAAKQ,EAAGb,MAAO00C,EAAO7zC,GAAImvC,SAAUgF,EAAWn0C,GAAtD,IACLyC,MAAK,SAAC0C,EAAGC,GACR,OAAID,EAAEgqC,WAAa/pC,EAAE+pC,UAAkB,GAClChqC,EAAEgqC,UAAY/pC,EAAE+pC,SAAiB,EAC/BhqC,EAAEhG,MAAMk1C,cAAcjvC,EAAEjG,MAChC,KAVoE,GAWpE,CAAC8C,EAAG4xC,EAAQM,EAAYhiC,IAC3B,OAAO,SAAC,EAAA7B,SAAD,CAAUC,UAAU,SAACqB,EAAA,EAAD,CAAUrR,QAAQ,OAAOsG,MAAO,MAApD,UAA6D,SAACytC,GAAA,GAAD,SAAqBnqC,KAAK,QAAQhL,MAAOA,EAAOE,QAASoM,EAAQ8oC,SAAU7vB,EAAc8vB,SAAS,GAAG10C,SAAUkzC,EAASnuC,kBAAmBuvC,EAAWJ,MAAOA,GAAWL,KAC7O,C,kHC/ID,IAAMc,GAAuB1kC,EAAAA,MAAW,kBAAM,8BAAN,IAGzB,SAAS2kC,KAAkB,IAAD,IAC/BviC,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACM6H,GAAYnR,EAAAA,EAAAA,YAAWK,EAAAA,GAA7BD,KACR,GAAwGJ,EAAAA,EAAAA,YAAWC,EAAAA,GAA3GC,EAAR,EAAQA,UAAR,IAAmBA,UAAkB2b,EAArC,EAAgCllB,IAAmByhC,EAAnD,EAAmDA,YAAehxB,EAAlE,EAAkEA,eAAgBjH,EAAlF,EAAkFA,kBAC5EC,ECnDO,SAAmByb,EAA4BiwB,GAC5D,IAAQxiC,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACR,GAA4BlM,EAAAA,EAAAA,WAAS,kBAAMkM,EAASyiC,QAAQC,YAAYnwB,EAAciwB,EAAjD,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAKA,OAJAnuC,EAAAA,EAAAA,YAAU,kBAAMmuC,EAAU5iC,EAASyiC,QAAQC,YAAYnwB,EAAciwB,GAA3D,GAAwE,CAACxiC,EAAUuS,EAAciwB,KAC3G/tC,EAAAA,EAAAA,YAAU,kBACR8d,EAAevS,EAASyiC,QAAQ9vB,OAAOJ,GAAc,SAACnL,EAAGjK,EAAGtP,GAAP,MAAmB,WAANsP,GAAkBylC,EAAU/0C,EAAzC,SAA+CwB,CAD5F,GAER,CAACkjB,EAAcqwB,EAAW5iC,IACrB2iC,CACR,CD2CcE,CAAUtwB,GAAcuwB,EAAAA,GAAAA,IAAwBhlC,EAAe46B,gBACtEqK,GAAU3uC,EAAAA,EAAAA,cAAY,SAAC0C,GAAD,OAAmBkJ,EAASyiC,QAAQpyC,IAAIkiB,EAAczb,EAAtD,GAA6D,CAACyb,EAAcvS,IAClGgjC,GAAY5uC,EAAAA,EAAAA,cAAY,WAC5B2uC,GAAQE,EAAAA,GAAAA,IAAWH,EAAAA,GAAAA,IAAwBhlC,EAAe46B,gBAC3D,GAAE,CAACqK,EAASjlC,IACPolC,GAAY9uC,EAAAA,EAAAA,cAChB,SAAC4B,GACC+sC,GAAQ,oBAAKjsC,GAAN,IAAYulB,QAAO,oBAAMvlB,EAAKulB,QAAWrmB,KACjD,GACD,CAAC+sC,EAASjsC,IAGNqsC,GAAW/uC,EAAAA,EAAAA,cACf,SAACgvC,EAAwBtzB,GACvB,IAAMuzB,GAAUJ,EAAAA,GAAAA,GAAWG,EAAQ/1C,KACnCg2C,EAAQC,SAASjqB,SAAS3qB,KAAOoI,EAAKwsC,SAASjqB,SAAS3qB,KAExD20C,EAAQhnB,OAAO7gB,MAAQ4nC,EAAQ5nC,MAC/B6nC,EAAQhnB,OAAO5gB,UAAY2nC,EAAQ3nC,UACnC4nC,EAAQhnB,OAAOrf,WAAaomC,EAAQpmC,WAEpC,IAAMoT,EAAO,CAAC,EACdN,EAAM5E,SAAQ,SAAAmC,GAAQ,IAAD,EACnB,GAAKA,EAAL,CACA,IAAQoG,EAA0DpG,EAA1DoG,QAASzB,EAAiD3E,EAAjD2E,OAAQqH,EAAyChM,EAAzCgM,SAAUD,EAA+B/L,EAA/B+L,YAAa5d,EAAkB6R,EAAlB7R,MAAOpL,EAAWid,EAAXjd,OACvDizC,EAAQC,SAASxtB,MAAMrC,GAASjY,MAAQA,EACxC6nC,EAAQC,SAASxtB,MAAMrC,GAAS5N,QAAUuT,EAC1CiqB,EAAQC,SAASxtB,MAAMrC,GAASrjB,OAASA,EACzCggB,EAAK4B,IAAU,UAAC5B,EAAK4B,UAAN,QAAiB,GAAK,EACrCqH,EAASnO,SAAQ,SAAAyjB,GAAY,IAAD,EACtBA,EAAQthC,MAAKg2C,EAAQC,SAASjqB,SAASkqB,MAAM5U,EAAQthC,MAAO,UAACg2C,EAAQC,SAASjqB,SAASkqB,MAAM5U,EAAQthC,YAAzC,QAAiD,GAAKshC,EAAQC,cAC/H,GARe,CASjB,IACDyU,EAAQC,SAASlzB,KAAOngB,OAAOqc,YAAYrc,OAAOC,QAAQkgB,GAAMhjB,KAAI,+BAAEC,EAAF,KAAO3B,EAAP,WAAkB,CAAC2B,EAC3E,IAAV3B,EAAc,EACF,IAAVA,EAAc,EACF,IAAVA,GAAiB2B,EAAes0C,WAAW,cAAoBj2C,EAAJ,EAHG,IAIjEoP,QAAO,oDACVioC,EAAQM,EACT,GACD,CAACvsC,EAAMisC,IAGMS,GAAf,WADiB1N,EAAAA,EAAAA,MACqBx9B,aAAtC,QAAmF,CAAEwX,WAAOzgB,IAApFygB,OACRrb,EAAAA,EAAAA,YAAU,WACR,GAAK+uC,EAAL,CACA,IAAMJ,EAAUpjC,EAAS0e,QAAQnnB,IAAIX,EAAUk2B,gBAC/CqW,EAASC,EAASI,EAASp2C,KAAI,SAAAqN,GAAC,OAAIuF,EAASkJ,KAAK3R,IAAIkD,EAAtB,IAFX,CAKtB,GAAE,CAAC+oC,EAAUxjC,IAEd,IAAMyjC,GAAmBrvC,EAAAA,EAAAA,cACvB,WACE,IAAMgvC,EAAUpjC,EAAS0e,QAAQnnB,IAAIX,EAAUk2B,gBAC/CqW,EAASC,EAASnzC,OAAOqJ,OAAO1C,EAAUqnB,mBAAmB7wB,KAAI,SAAA4F,GAAC,OAAIgN,EAASkJ,KAAK3R,IAAIvE,EAAtB,IAA2B8H,QAAO,SAAA9H,GAAC,OAAIA,CAAJ,IACtG,GACD,CAACgN,EAAUpJ,EAAUqnB,kBAAmBrnB,EAAUk2B,eAAgBqW,IAG9D9mB,GAAwBlvB,EAAAA,EAAAA,UAAQ,WACpC,OAAO,oBACF2J,EAAKulB,QADV,IAEE/C,SAAU,GACVoqB,MAAM,EACN/2B,GAAI,IAEP,GAAE,CAAC7V,IACE6sC,GAAcvvC,EAAAA,EAAAA,cAAY,SAACkvC,GAC/B,IAAMM,GAAQ1sC,EAAAA,GAAAA,IAAUJ,GACxB8sC,EAAMN,SAAWA,EACjBP,EAAQa,EACT,GAAE,CAAC9sC,EAAMisC,IAEJc,GAAkBzvC,EAAAA,EAAAA,cAAY,SAACtE,GACnC,IAAM8zC,GAAQ1sC,EAAAA,GAAAA,IAAUJ,GACxB8sC,EAAMN,SAASjqB,SAAS3qB,KAAOoB,EAC/BizC,EAAQa,EACT,GAAE,CAAC9sC,EAAMisC,IAEJe,GAAc1vC,EAAAA,EAAAA,cAAY,SAAC0vC,GAC/B,IAAMF,GAAQ1sC,EAAAA,GAAAA,IAAUJ,GACxB8sC,EAAMN,SAASjqB,SAASkqB,MAAQO,EAChCf,EAAQa,EACT,GAAE,CAAC9sC,EAAMisC,IAEJgB,GAAe/K,EAAAA,EAAAA,kBAAiBliC,GAChCktC,GAAmB72C,EAAAA,EAAAA,UAAQ,WAC/B,IAAMo2C,GAAK,WAAQQ,EAAaT,SAASjqB,SAASkqB,OAGlD,OAFAtzC,OAAOqJ,OAAOyqC,EAAaT,SAASxtB,OAAO5K,SAAQ,kBAAGrF,EAAH,EAAGA,QAASzV,EAAZ,EAAYA,OAAQoL,EAApB,EAAoBA,MAApB,OACjD+nC,EAAM19B,IAAW,UAAC09B,EAAM19B,UAAP,QAAmB,GAAKsU,GAAAA,GAAAA,cAAuBtU,EAASzV,EAAQoL,EADhC,IAE5C,CACL6R,KAAKjB,EAAAA,GAAAA,IAAUm3B,GAAO,SAAC11C,EAAGuZ,GAAJ,OAAUA,EAAEsnB,SAAS,MAAOvrB,EAAAA,GAAAA,IAAQtV,EAAI,MAAOwe,EAAAA,GAAAA,IAASxe,EAAxD,IACtBymB,QAAQlI,EAAAA,GAAAA,IAAU23B,EAAaT,SAASlzB,MAAM,SAAAviB,GAAC,OAAIwe,EAAAA,GAAAA,IAASxe,EAAb,IAElD,GAAE,CAACk2C,IAEEE,GAAgC92C,EAAAA,EAAAA,UAAQ,iBAAO,CACnDwf,GAAI,GACJ2M,SAAU,GACVjsB,IAAKyJ,EAAKulB,OAAOhvB,IACjBmO,MAAO1E,EAAKulB,OAAO7gB,MACnBC,UAAW3E,EAAKulB,OAAO5gB,UACvBuB,WAAYlG,EAAKulB,OAAOrf,WACxB0mC,MAAM,EAPsC,GAQ1C,CAAC5sC,IACC+4B,GAAWC,EAAAA,EAAAA,GAAYvd,EAAc,EAAGyxB,EAAkBC,GAEhDC,GAAhB,iBAA+BrU,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAWtd,UAA1C,QAA2D,CAAC,GAApD7M,OAEFy+B,GAA+Ch3C,EAAAA,EAAAA,UAAQ,WAC3D,GAAK0iC,GAAaqU,EAClB,MAAO,CACLptC,KAAMotC,EACNrU,SAAAA,EAEH,GAAE,CAACqU,EAAYrU,IACVuU,GAAsDj3C,EAAAA,EAAAA,UAAQ,WAClE,GAAKg3C,EACL,OAAO,oBACFA,GADL,IAEEt8B,QAASinB,EAAcjnB,OAAUxY,GAEpC,GAAE,CAAC80C,EAAkBrV,EAAajnB,IACnC,OAAO,UAACvB,GAAA,EAAD,CAAOf,QAAS,EAAhB,WACL,SAAClF,EAAA,EAAD,WACE,UAACtP,EAAA,EAAD,CAAKE,GAAI,CAAE0D,QAAS,OAAQsB,IAAK,EAAGC,EAAG,GAAvC,WACE,UAACnF,EAAA,EAAD,CAAKE,GAAI,CAAEmE,SAAU,EAAGT,QAAS,OAAQsB,IAAK,GAA9C,WACE,SAAC6B,EAAA,EAAD,CAAQxJ,MAAM,OAAO4J,QAASurC,EAAkBtrC,WAAW,SAACksC,GAAA,EAAD,IAA3D,iCACA,SAACvsC,EAAA,EAAD,CAAQxJ,MAAM,QAAQ4J,QAAS8qC,EAAW7qC,WAAW,SAACmsC,GAAA,EAAD,IAArD,uBAEF,UAACpP,GAAA,EAAD,CAAwBC,WAAS,EAACzpC,MAAOojC,EAAanhC,SAAU,SAAC0G,EAAGxG,GAAJ,OAAUgJ,EAAkB,CAAEi4B,YAAajhC,GAA3C,EAAiDmK,KAAK,QAAtH,WACE,SAACo9B,GAAA,EAAD,CAAc1pC,OAAO,EAAOkI,UAAWk7B,EAAvC,4BACA,SAACsG,GAAA,EAAD,CAAc1pC,OAAO,EAAMkI,SAAUk7B,EAArC,0CAILqV,GAAmB,SAACptC,EAAA,WAAD,CAAsBrL,MAAOy4C,EAA7B,UAClB,UAAC9+B,GAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAGtU,GAAI,CAAEqT,eAAgB,UAAlD,WACE,UAACe,GAAA,GAAD,CAAMG,MAAI,EAACvU,GAAI,CAAEmE,UAAW,GAA5B,WACE,SAACmvC,GAAD,CAAkBloB,OAAQA,EAAQ6mB,UAAWA,EAAWxK,cAAe56B,EAAe46B,iBACtF,SAAC8L,GAAD,CAAuBC,aAAc3tC,EAAKwsC,SAAUoB,gBAAiBf,QAEvE,SAACt+B,GAAA,GAAD,CAAMG,MAAI,EAACvU,GAAI,CAAEmE,SAAU,GAA3B,UACE,SAACuvC,GAAD,CAAiBtrB,SAAUviB,EAAKwsC,SAASjqB,SAASkqB,MAAOO,YAAaA,EAAac,aAAc9tC,EAAKwsC,SAASjqB,SAAS3qB,KAAMm1C,gBAAiBA,EAAiBvyC,aAAcrB,OAAOqJ,OAAOxC,EAAKwsC,SAASxtB,OAAO1oB,KAAI,SAAAoN,GAAC,OAAIA,EAAEqL,OAAN,cAGlM,SAACpG,EAAA,EAAD,CAAUrR,QAAQ,cAAcsG,MAAM,OAAO6H,OAAQ,OAC/E,SAAC8D,EAAA,EAAD,CAAWpP,GAAI,CAAEmE,SAAU,EAAGc,EAAG,GAAjC,SACGkuC,GAA0B,SAACrtC,EAAA,WAAD,CAAsBrL,MAAO04C,EAA7B,UACzB,SAAC1oB,GAAD,OACwB,SAACjc,EAAA,EAAD,CAAUrR,QAAQ,cAAcsG,MAAM,OAAO6H,OAAQ,UAIpF,CAED,SAASgoC,GAAT,GAAmL,IAAvJloB,EAAsJ,EAAtJA,OAAQ6mB,EAA8I,EAA9IA,UAAWxK,EAAmI,EAAnIA,cACrCrrC,EAAkDgvB,EAAlDhvB,IAAR,EAA0DgvB,EAA7C7gB,MAAAA,OAAb,MAAqB,EAArB,IAA0D6gB,EAAlCrf,WAAAA,OAAxB,MAAqC,EAArC,IAA0Dqf,EAAlB5gB,UAAAA,OAAxC,MAAoD,EAApD,EACM8gB,GAAc3sB,EAAAA,EAAAA,IAAW,kBAAM4sB,GAAAA,EAAAA,IAAgBnvB,EAAtB,GAA4B,CAACA,IAC5D,GAA+B89B,EAAAA,EAAAA,KAA/B,eAAO9sB,EAAP,KAAas4B,EAAb,KAAqBr4B,EAArB,KACQxH,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACF+tC,GAAe13C,EAAAA,EAAAA,UAAQ,kBAAMovB,GAAeF,IAAUI,EAAAA,GAAAA,IAAc,CAACF,EAAYzlB,MAAM4lB,EAAAA,GAAAA,IAAiBL,IAAjF,GAA4F,CAACE,EAAaF,IACvI,OAAO,UAAChc,EAAA,EAAD,CAAWpP,GAAI,CAAEiF,EAAG,EAAGyJ,GAAI,GAA3B,WACL,SAAC2iC,GAAD,CAAsB7mC,UAAWA,EAAW4C,KAAMA,EAAMC,OAAQA,EAAQC,SAAU,SAAA6I,GAAC,OAAI87B,EAAU,CAAE71C,IAAK+Z,GAArB,EAA2B09B,iBAAkBpM,KAChI,UAAC3nC,EAAA,EAAD,CAAK4D,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAhD,WACE,UAAClF,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAzB,UACGsmB,IAAe,SAACxrB,EAAA,EAAD,CACd+jB,UAAS,eAAUyH,EAAYnsB,OAAtB,QACTU,UAAU,MACV2N,IAAK8d,EAAYK,OAAOP,EAAO5gB,WAC/BxK,GAAI,CAAE8zC,WAAY,EAAGxhC,UAAW,EAAG0W,SAAU,MAAOhiB,aAAc,MAEpE,UAACqO,GAAA,EAAD,CAAOf,QAAS,EAAGnQ,SAAU,EAA7B,WACE,SAAC0C,EAAA,EAAD,CAAQC,WAAS,EAACzJ,MAAM,OAAO2C,GAAI,CAAEmE,SAAU,GAAK8C,QAASy+B,EAA7D,UAAqE,SAAC5lC,EAAA,EAAD,CAAKE,GAAI,CAAEgpB,SAAU,QAArB,gBAAgCsC,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAa5kB,UACtG,OAAX4kB,QAAW,IAAXA,OAAA,EAAAA,EAAaM,iBAAiB,SAAC9f,GAAA,EAAD,CAAoBC,WAAYA,EAAYC,cAAe,SAAAE,GAAC,OAAI+lC,EAAU,CAAElmC,WAAYG,GAA5B,UAG9Fof,IAAe,SAAChhB,EAAA,EAAD,CAAaC,MAAOA,EAAOC,UAAWA,EAAW/H,QAASwvC,EAAWxnC,QAAS6gB,EAAYM,iBAC1G,UAAC/iB,EAAA,EAAD,YACE,SAACqF,EAAA,EAAD,CAAYpJ,MAAO,aAAciqC,qBAAsB,CAAE5xC,QAAS,gBAClE,SAACqK,EAAA,EAAD,IACCosC,IAAgB,SAAC/8B,GAAA,GAAD,UACd,CAAC9D,GAAAA,GAAAA,OAAAA,KAAmBA,GAAAA,GAAAA,OAAAA,IAAkBA,GAAAA,GAAAA,OAAAA,MAAmB5W,KAAI,SAACoT,EAAM/F,GACnE,IAAMgO,EAAIo8B,EAAattC,IAAIiJ,GAC3B,OAAIiI,EAAErI,UAAYqI,EAAE/c,MAAc,MAC3B,SAAC,MAAD,CAA+C8U,KAAMiI,EAAG3X,UAAWkX,GAAAA,IAA5CE,KAAKC,UAAUM,EAAE/G,MAChD,SAGJ5K,IAAI,OAAIylB,QAAJ,IAAIA,OAAJ,EAAIA,EAAanK,YAAY,SAAChY,GAAA,EAAD,CAAiBC,SAAUkiB,EAAYnK,gBAG9E,CAED,SAASoyB,GAAT,GAC6F,IAD5DC,EAC2D,EAD3DA,aAAcC,EAC6C,EAD7CA,gBAEvCM,GAAU5wC,EAAAA,EAAAA,cAAY,SAACqf,GAAD,OAAsB,SAAC/G,GACjD,IAAMu4B,GAAgB/tC,EAAAA,GAAAA,IAAUutC,GAChCQ,EAAcnvB,MAAMrC,GAAW/G,EAC/Bg4B,EAAgBO,EACjB,CAJ2B,GAIzB,CAACR,EAAcC,IAEZQ,GAAY9wC,EAAAA,EAAAA,cAAY,SAACkgB,GAC7B,IAAM2wB,GAAgB/tC,EAAAA,GAAAA,IAAUutC,GAChCQ,EAAc70B,KAAOkE,EACrBowB,EAAgBO,EACjB,GAAE,CAACR,EAAcC,IAElB,OAAO,UAACp+B,GAAA,EAAD,CAAOf,QAAS,EAAhB,WACL,SAAClF,EAAA,EAAD,CAAWpP,GAAI,CAAEiF,EAAG,GAApB,UACE,SAACoQ,GAAA,EAAD,CAAOf,QAAS,EAAhB,SACGkH,EAAAA,GAAAA,KAAgB,SAAAjS,GAAC,OAAI,SAAC2qC,GAAD,CAA+B1xB,QAASjZ,EAAGkS,KAAM+3B,EAAa3uB,MAAMtb,GAAIwqC,QAASA,EAAQxqC,IAA7DA,EAAhC,SAGtB,SAAC,EAAA2D,SAAD,CAAUC,UAAU,SAACqB,EAAA,EAAD,CAAUrR,QAAQ,cAAcsG,MAAM,OAAO6H,OAAQ,MAAzE,UACE,SAAC6oC,GAAD,CAAoB9wB,OAAQmwB,EAAar0B,KAAM80B,UAAWA,QAG/D,CACD,SAASC,GAAT,GAAqK,IAAD,EAAnI1xB,EAAmI,EAAnIA,QAAS/G,EAA0H,EAA1HA,KAAe24B,EAA2G,EAApHL,QACtCxpC,EAA2BkR,EAA3BlR,MAAOqK,EAAoB6G,EAApB7G,QAASzV,EAAWsc,EAAXtc,OAClBiG,EAAO8jB,GAAAA,GAAAA,cAAuB1G,GAC9BuxB,GAAU5wC,EAAAA,EAAAA,cAAY,SAAC4B,GAC3BqvC,GAAY,oBAAK34B,GAAS1W,GAC3B,GAAE,CAAC0W,EAAM24B,IACJzM,GAAYxkC,EAAAA,EAAAA,cAChB,SAAC+I,GAAuB,IAAD,EACfmoC,EAAI,UAAGC,GAAAA,GAAiBpoC,UAApB,QAA0B,EAClB6nC,EAAdxpC,EAAQ8pC,EAAc,CAAEl1C,OAAQ+M,EAAG3B,MAAO8pC,GACjC,CAAEl1C,OAAQ+M,GACxB,GAAE,CAAC3B,EAAOwpC,IAEb,OAAO,UAACj0C,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAGqO,eAAe,gBAAgB1P,WAAW,SAAtE,WACL,SAAC4wC,GAAA,EAAD,CAAoBj2C,KAAMk2C,GAAAA,GAAYhyB,MACtC,SAAC3Z,EAAA,EAAD,CAAU7I,GAAI,CAAEsL,OAAQ,OAAQ+iB,SAAU,MAAOlqB,SAAU,EAAGT,QAAS,QAAvE,SACmB,IAAhB0B,EAAK5H,QACJ,UAACsC,EAAA,EAAD,CAAKmF,EAAG,EAAGoO,eAAe,SAAS1P,WAAW,SAASF,MAAM,OAAOC,QAAQ,OAAOsB,IAAK,EAAxF,UAA4FxE,GAAAA,EAAS4E,EAAK,IAAKzH,GAAAA,GAAAA,OAAcyH,EAAK,QAClI,SAACmC,GAAA,EAAD,CAAgBvH,GAAI,CAAE+D,GAAI,GAAK+C,WAAS,EAAChC,OAAO,SAAC,KAAD,CAAc8P,QAASA,IAAavX,MAAK,UAAEM,GAAAA,GAAAA,WAAkBiX,UAApB,QAAgC,UAAzH,SACGxP,EAAKjJ,KAAI,SAAAs4C,GAAG,OACX,SAACz5C,GAAA,EAAD,CAAoB2H,SAAUiS,IAAY6/B,EAAKxtC,QAAS,kBAAM8sC,EAAQ,CAAEn/B,QAAS6/B,GAAzB,EAAxD,UACE,SAAC,KAAD,CAAqB7/B,QAAS6/B,KADjBA,EADJ,SAMnB,SAACltC,GAAA,EAAD,CAAgBvH,GAAI,CAAE+D,GAAI,GAAKe,OAAO,4BAAO3F,EAAP,KAAe,SAAC,KAAD,CAAiBb,KAAMo2C,GAAAA,SAA5E,SACG,CAAC,EAAG,EAAG,GAAGv4C,KAAI,SAAA+P,GAAC,OACd,SAAClR,GAAA,EAAD,CAAkB2H,SAAUxD,IAAW+M,EAAGjF,QAAS,kBAAM0gC,EAAUz7B,EAAhB,EAAnD,UACE,4BAAOA,EAAP,KAAU,SAAC,KAAD,CAAiB5N,KAAMo2C,GAAAA,UADpBxoC,EADD,OAKlB,SAACmG,GAAA,GAAD,CAAmB3Q,eAAe,IAAIjH,MAAO8P,EAAOlN,MAAO6rB,GAAAA,GAAAA,aAAsB3e,GAAQ7N,SAAU,SAAA4G,GAAC,YAAUlF,IAANkF,GAAmBywC,EAAQ,CAAExpC,MAAOjH,GAAxC,EAA8CtD,GAAI,CAAEgH,aAAc,EAAGhD,GAAI,EAAG2wC,GAAI,EAAGrpC,OAAQ,QAAUrH,WAAY,CAAEjE,GAAI,CAAEgE,GAAI,GAAKP,MAAO,OAASgB,IAAK,GAAID,IAAK,MACpQ,SAACqE,EAAA,EAAD,CAAU7I,GAAI,CAAEsL,OAAQ,OAAQ+iB,SAAU,OAA1C,UACE,SAACvuB,EAAA,EAAD,CAAKmF,EAAG,EAAGf,UAAU,SAArB,oBAAkC2lB,EAAAA,GAAAA,IAAiBX,GAAAA,GAAAA,cAAuBtU,EAASzV,EAAQoL,GAAQ5M,GAAAA,GAAAA,KAAYiX,KAA/G,OAA2HjX,GAAAA,GAAAA,KAAYiX,UAG5I,CAED,SAASu/B,GAAT,GAA+F,IAAjE9wB,EAAgE,EAAhEA,OAAQ4wB,EAAwD,EAAxDA,UAC9Bv1C,GAAiBC,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,MAAN,GAA4B,IACxDg2C,GAASzxC,EAAAA,EAAAA,cAAY,SAAC4d,GACrBA,GAAWriB,GAChBu1C,GAAU,oBAAK5wB,GAAN,eAAetC,EAASsE,SAASrmB,OAAOoG,KAAK1G,EAAeqiB,GAAQgE,YAAY,MAC1F,GAAE,CAAC1B,EAAQ4wB,EAAWv1C,IAEjB86B,GAAWr2B,EAAAA,EAAAA,cAAY,SAAC4d,GAAD,OAA4B,SAACtmB,GAAD,OAAsBw5C,GAAU,oBAAK5wB,GAAN,eAAetC,EAAStmB,IAAvD,CAA5B,GAA6F,CAAC4oB,EAAQ4wB,IAC7HY,GAAc1xC,EAAAA,EAAAA,cAAY,SAAC4d,GAAD,OAA4B,WACzBsC,EAAxBtC,GAAT,IAAwB+zB,GAAxB,QAAiCzxB,EAAjC,CAAStC,GAAT,WACAkzB,GAAU,WAAKa,GAChB,CAH+B,GAG7B,CAACzxB,EAAQ4wB,IAENv0B,EAAY,EAAI1gB,OAAOqJ,OAAOgb,GAAQvF,QAAO,SAAC/b,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,GAAiB,GAEpE,OAAO,UAACqT,GAAA,EAAD,CAAOf,QAAS,EAAGtU,GAAI,CAAEmE,SAAU,GAAnC,UACJnF,OAAOC,QAAQokB,GAAQlnB,KAAI,+BAAE4kB,EAAF,KAAUtmB,EAAV,YAAqB,SAACs6C,GAAD,CAAgCh0B,OAAQA,EAAQtmB,MAAOA,EAAO++B,SAAUA,EAASzY,GAAS8zB,YAAaA,EAAY9zB,GAASrB,UAAWA,GAA/GqB,EAA7C,KAC5B,SAAC3R,EAAA,EAAD,CAAWpP,GAAI,CAAEmE,SAAU,GAA3B,UACE,SAAC,MAAD,CACElD,aAAW,EACX+zC,kBAAgB,EAChBjuC,KAAK,QACLlF,UAAW,GACXC,aAAc8yC,EACd50C,GAAI,SAACpF,GAAD,MAAY,CACduJ,SAAU,EACV,uBAAwB,CACtB4mC,wBAAyBnwC,EAAM4kB,MAAMxY,aACrCgkC,uBAAwBpwC,EAAM4kB,MAAMxY,cAJpC,EAOJ9F,YAAa,mBACbF,QAAS,SAAC+f,GAAD,OAAY/hB,OAAOoG,KAAKie,GAAQzlB,SAASmjB,MAAW,OAACriB,QAAD,IAACA,GAAAA,EAAiBqiB,KAAW/hB,OAAOoG,KAAK1G,EAAeqiB,GAAQgE,YAAY7V,OAAM,SAAAsI,GAAC,OAAI6N,SAAS7N,GAAKkI,CAAlB,GAAvI,QAKhB,CACD,SAASq1B,GAAT,GAA6M,IAAhLh0B,EAA+K,EAA/KA,OAAQtmB,EAAuK,EAAvKA,MAAO++B,EAAgK,EAAhKA,SAAUqb,EAAsJ,EAAtJA,YAAan1B,EAAyI,EAAzIA,UAC3D8M,GAAgB7tB,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,IAAkBmiB,EAAxB,GAAiC,IAG5D+D,GAAe5oB,EAAAA,EAAAA,UAAQ,WAC3B,OAAIzB,EAAQ,IAAM+xB,EAAsB,GACjCxtB,OAAOoG,KAAKonB,EAAczH,YAAYlb,QAAO,SAAAmX,GAAS,uBAAIwL,EAAczH,WAAW/D,UAA7B,aAAI,EAAqCG,SAASvI,MAAK,SAAAoM,GAAG,MAAI,WAAYA,CAAhB,GAA1D,GAC9D,GAAE,CAACwH,EAAe/xB,IAEnB,OAAK+xB,GACE,UAACpd,EAAA,EAAD,YACL,UAACtP,EAAA,EAAD,CAAK4D,QAAQ,OAAb,WACE,SAACipB,GAAA,EAAD,CAAoBH,cAAeA,EAAeC,SAAUhyB,EAA5D,UACE,UAACqF,EAAA,EAAD,CAAKqE,SAAU,EAAGc,EAAG,EAAGvB,QAAQ,OAAOsB,IAAK,EAAGrB,WAAW,SAA1D,WACE,SAAC0L,GAAA,EAAD,CAAStI,KAAM,EAAG/G,GAAI,CAAEsP,GAAI,GAAK9B,IAAKgf,EAActH,cACpD,SAACplB,EAAA,EAAD,UAAO0sB,EAAcyoB,WACrB,SAACC,GAAA,EAAD,UAGJ,UAACxtC,GAAA,EAAD,YACE,SAACH,GAAA,EAAD,CAAgBR,KAAK,QAAQjC,OAAO,UAAChF,EAAA,EAAD,CAAKyL,WAAW,SAAhB,UAA0B9Q,EAA1B,UAApC,SACGuE,OAAOoG,KAAKonB,EAAczH,YAAY5oB,KAAI,SAAA4kB,GAAM,OAAIsE,SAAStE,EAAb,IAAsB5kB,KAAI,SAAA4kB,GAAM,OAC/E,UAAC/lB,GAAA,EAAD,CAAuB2H,SAAUlI,IAAUsmB,GAAUA,EAAUrB,EAAYjlB,EAAQwM,QAAS,kBAAMuyB,EAASzY,EAAf,EAA5F,UAAkIA,EAAlI,SAAeA,EADgE,OAInF,SAACla,EAAA,EAAD,CAAQxJ,MAAM,QAAQ0J,KAAK,QAAQE,QAAS4tC,EAA5C,UACE,SAAC/a,GAAA,EAAD,cAIHhV,EAAatnB,SAAU,SAAC6X,GAAA,EAAD,CAAOf,QAAS,EAAGtU,GAAI,CAAEiF,EAAG,GAA5B,SACvB6f,EAAa3oB,KAAI,SAAA6kB,GAAS,OACzB,SAACF,GAAD,CAAkCC,OAAQA,EAAQC,UAAWqE,SAASrE,GAAsBtY,YAAU,EAACuY,kBAAgB,GAAhGD,EADE,SAtBJ,IA2B5B,CACD,SAAS0yB,GAAT,GAA4S,IAAjRtrB,EAAgR,EAAhRA,SAAUyqB,EAAsQ,EAAtQA,YAAac,EAAyP,EAAzPA,aAAcf,EAA2O,EAA3OA,gBAAiBvyC,EAA0N,EAA1NA,aACzEm5B,GAAWr2B,EAAAA,EAAAA,cAAY,SAAC/G,GAAD,OAAqB,SAACQ,GAAD,OAAei2C,GAAY,oBAAKzqB,GAAN,eAAiBhsB,EAAMQ,IAAjD,CAArB,GAA4E,CAACwrB,EAAUyqB,IAC5Gh0C,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACFs2C,EAA6F,IAAxFn2C,OAAOC,QAAQmpB,GAAUtK,QAAO,SAACjf,EAAD,sBAAKsX,EAAL,YAAetX,EAAf,KAAwBqqB,GAAAA,GAAAA,aAAsB/S,EAA9C,GAAmD,GACxF6T,EAAQhrB,OAAOC,QAAQmpB,GAAUtK,QAAO,SAACjf,EAAD,sBAAKsX,EAAL,YAAetX,EAAf,KAAwBqqB,GAAAA,GAAAA,aAAsB/S,OAAG/X,EAAWu1C,EAA5D,GAA4E,GAC1H,OAAO,UAACvkC,EAAA,EAAD,CAAWpP,GAAI,CAAEiF,EAAG,EAAGqG,OAAQ,QAA/B,WACL,UAACxL,EAAA,EAAD,CAAKE,GAAI,CAAE0O,GAAI,EAAGhL,QAAS,OAAQsB,IAAK,GAAxC,WACE,SAACuC,GAAA,EAAD,CAAgBT,WAAS,EAAChC,MAAOjG,EAAE,8BAAD,OAA+B80C,IAAjE,SACGyB,EAAAA,GAAAA,KAAgB,SAAA3tC,GAAE,OAAI,SAACzM,GAAA,EAAD,CAAmB2H,SAAUgxC,IAAiBlsC,EAAIR,QAAS,kBAAM2rC,EAAgBnrC,EAAtB,EAA3D,SAAuF5I,EAAE,8BAAD,OAA+B4I,KAAxGA,EAAnB,OAErB,SAACiiB,GAAA,EAAD,CAAkB5kB,OAAO,SAACuF,EAAA,EAAD,UAAaxL,EAAb,sDAA4D8qB,UAAU,MAA/F,UACE,UAAC9gB,EAAA,EAAD,CAAU7I,GAAI,CAAEkE,UAAW,SAAUyT,GAAI,GAAK5T,GAAI,EAAGsqB,SAAU,OAAQ9iB,WAAY,SAAU7H,QAAS,OAAQsB,IAAK,EAAGqO,eAAgB,WAAY1P,WAAY,UAA9J,WACE,UAAC,KAAD,CAAWtG,MAAO2sB,EAAQ,GAAK,eAAY5rB,EAA3C,qBAA8D,4BAAS4rB,EAAMvC,QAAQ,SACrF,UAAC,KAAD,CAAWpqB,MAAO2sB,EAAQ,GAAK,eAAY5rB,EAA3C,kBAA2D,8BAAS+2C,EAAG1tB,QAAQ,GAApB,mBAIjE,SAACpS,GAAA,EAAD,CAAOf,QAAS,EAAhB,SACGtV,OAAOC,QAAQmpB,GAAUjsB,KAAI,+BAAEga,EAAF,KAAKvZ,EAAL,YAAY,SAACy4C,GAAD,CAA+BzgC,QAASuB,EAAG1b,MAAOmC,EAAG48B,SAAUA,EAASrjB,GAAIw9B,aAAcA,EAActzC,aAAcA,GAA1F8V,EAAxC,QAGnC,CACD,SAASk/B,GAAT,GAAyN,IAAxLzgC,EAAuL,EAAvLA,QAASna,EAA8K,EAA9KA,MAAO++B,EAAuK,EAAvKA,SAAUma,EAA6J,EAA7JA,aAActzC,EAA+I,EAA/IA,aAC/DxB,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACFy2C,EAAepsB,GAAAA,GAAAA,aAAsBtU,EAAS,EAAG++B,GACvD,GAA0B9wC,EAAAA,EAAAA,WAAS,kBAAMpI,EAAQ66C,CAAd,IAAnC,eAAOtrB,EAAP,KAAcurB,EAAd,MACA/xC,EAAAA,EAAAA,YAAU,kBAAM+xC,EAAS96C,EAAQ66C,EAAvB,GAAsC,CAAC76C,EAAO66C,IAExD,IAAMprB,EAAOvsB,GAAAA,GAAAA,KAAYiX,GACnB4gC,EAAexrB,EAAQsrB,EAEvBH,EAAMnrB,EAAQsrB,EAAgBpsB,GAAAA,GAAAA,aAAsBtU,GAAW,IAC/D6gC,EAAWp1C,EAAayd,QAAO,SAACjf,EAAG62C,GAAJ,OAAW72C,GAAK62C,IAAO9gC,EAAU,EAAI,EAArC,GAAyC,GACxE+gC,EAA4B,GAAhB,EAAIF,GAEhBG,EAAW5rB,EAAQ,KAAU2rB,EAC7BE,GAAY1yC,EAAAA,EAAAA,cAAY,SAAC+I,GAAD,OAAestB,EAASttB,EAAIopC,EAA5B,GAA2C,CAAC9b,EAAU8b,IAEpF,OAAO,UAACjgC,GAAA,EAAD,CAAOf,QAAS,GAAhB,WACL,UAACxU,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAGqO,eAAe,gBAAgB1P,WAAW,SAAtE,WACE,UAACkF,EAAA,EAAD,CAAU7I,GAAI,CAAEiF,EAAG,GAAKopB,SAAU,OAAQlqB,SAAU,EAAGT,QAAS,OAAQsB,IAAK,EAAGrB,WAAY,SAAU0P,eAAgB,UAAtH,UACG7S,GAAAA,EAASoU,GAAUjX,GAAAA,GAAAA,OAAciX,GAAUjX,GAAAA,GAAAA,KAAYiX,OAE1D,SAAC8U,GAAA,EAAD,CAAkB5kB,OAAO,SAACuF,EAAA,EAAD,UAAaxL,EAAE42C,EAAQ,wDAA8D,CAAEh7C,MAAOk7C,MAA2BhsB,UAAU,MAA5J,UACE,SAAC9gB,EAAA,EAAD,CAAU7I,GAAI,CAAEkE,UAAW,SAAUe,EAAG,GAAKopB,SAAU,OAAvD,UACE,UAAC,KAAD,CAAWhxB,MAAOu4C,EAAU,eAAYx3C,EAAxC,kBAAuD,8BAAS+2C,EAAG1tB,QAAQ,GAApB,kBAI7D,UAAC3nB,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAGqO,eAAe,gBAAgB1P,WAAW,SAAtE,WACE,SAAC0O,GAAA,GAAD,CACEhV,MAAOm4C,EAAe,UAAY,UAClCjjC,MAAgC,MAAzB5U,GAAAA,GAAAA,KAAYiX,GACnBpC,aAAc7U,GAAAA,GAAAA,KAAYiX,KAAY,SAAC9U,EAAA,EAAD,CAAK2D,MAAM,MAAM5D,UAAU,SACjEpF,MAAOq7C,WAAWN,EAAa/tB,QAAQ,IACvC/qB,SAAU,SAAAE,GAAC,YAAUwB,IAANxB,GAAmB48B,EAAS58B,EAAhC,EACXoD,GAAI,CAAEgH,aAAc,EAAGjD,GAAI,EAAGuH,OAAQ,OAAQ7H,MAAO,OACrDQ,WAAY,CAAEjE,GAAI,CAAEkE,UAAW,SAAWM,IAAK,MACjD,SAACqE,EAAA,EAAD,CAAU7I,GAAI,CAAE+D,GAAI,EAAGI,SAAU,EAAGT,QAAS,OAAQsB,IAAK,EAAGrB,WAAY,SAAU0P,eAAgB,UAAnG,UACE,SAAC6gB,GAAA,GAAD,CACEntB,KAAK,QACLtM,MAAOuvB,EACPvlB,IAAKkxC,EACLnxC,IAAK,EACLE,KAAM,EACNC,OAAK,EACLjI,SAAU,SAAC0G,EAAGxG,GAAJ,OAAU24C,EAAS34C,EAAnB,EACV0H,kBAAmB,SAAClB,EAAGxG,GAAJ,OAAUi5C,EAAUj5C,EAApB,OAGvB,SAACyV,GAAA,GAAD,CACEhV,MAAO5C,EAASm7C,EAAU,UAAY,UAAa,UACnDrjC,OAAK,EACL7Q,gBAAgB,UAAC5B,EAAA,EAAD,CAAKE,GAAI,CAAEuL,WAAY,SAAU9H,MAAO,MAAOC,QAAS,OAAQ2P,eAAgB,iBAAhF,WAAmG,6BAAOwW,EAAAA,GAAAA,IAAiByrB,EAAcprB,GAAOA,MAAY,mCAC5KzvB,MAAOq7C,WAAW9rB,EAAMvC,QAAQ,IAChC/qB,SAAU,SAAAE,GAAC,YAAUwB,IAANxB,GAAmB48B,EAAS58B,EAAI04C,EAApC,EACXt1C,GAAI,CAAEgH,aAAc,EAAGjD,GAAI,EAAG4wC,GAAI,EAAGrpC,OAAQ,OAAQ7H,MAAO,OAC5DQ,WAAY,CAAEjE,GAAI,CAAEkE,UAAW,QAAS4sC,GAAI,IAAQtsC,IAAK,EAAGE,KAAM,UAGzE,C,gBE3cc,SAASqxC,KACtB,IACQ35C,GADcqJ,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBC,UACAvJ,IACF4Q,GAAeC,EAAAA,EAAAA,KACrB,IAAM7Q,EAAIs0C,WAAW,YAAc,OAAO,KAE1C,IAAMr5B,EAAa2+B,EAAAA,EAAAA,MAAiB,SAAA5yC,GAAC,OAAIhH,EAAI65C,cAAcr4C,SAASwF,EAA/B,IAErC,OAAO,SAACmE,GAAA,EAAD,CAAgBlK,MAAOga,EAAYvS,OAAO,6BAASoxC,EAAAA,GAAAA,IAAI,WAAD,OAAY7+B,MAAlE,SACJ8+B,EAAAA,GAAAA,KAAqB,SAAAthC,GAAM,OAC1B,SAAC7Z,GAAA,EAAD,CAAuB8C,SAAUuZ,IAAexC,EAAQlS,SAAU0U,IAAexC,EAAQ5N,QAAS,kBAAM+F,GAAaopC,EAAAA,EAAAA,IAAkBh6C,EAAoByY,GAAzD,EAAlG,UACE,6BAAQ,SAAC,KAAD,CAAWxX,MAAOwX,EAAlB,UAA2BqhC,EAAAA,GAAAA,IAAI,WAAD,OAAYrhC,SADrCA,EADW,KAI/B,C,+BCdc,SAASwhC,KACtB,IAAQx3C,GAAMC,EAAAA,EAAAA,GAAe,MAArBD,EACAkQ,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SAEA3S,GADcqJ,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBC,UACAvJ,IACAguB,GAAWC,EAAAA,EAAAA,KAAXD,OACFksB,GAAenzC,EAAAA,EAAAA,cAAY,kBAAM4L,EAASwnC,OAAOn3C,IAAI,CAAEgrB,OAAmB,MAAXA,EAAiB,IAAM,KAA3D,GAAmE,CAACA,EAAQrb,IAC7G,OAAM3S,EAAIs0C,WAAW,aACd,UAAC7pC,EAAA,EAAD,CAAQI,QAASqvC,EAAcpvC,UAAsB,MAAXkjB,GAAiB,SAACosB,GAAA,EAAD,KAAa,SAACC,GAAA,EAAD,IAAxE,WAAkF,4BAAS53C,EAAE,UAAD,OAAWurB,MAAvG,QADmC,IAE3C,CCoBc,SAASssB,KACtB,IAAM5R,GAAWC,EAAAA,EAAAA,MACTh2B,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SACFd,GAAU9K,EAAAA,EAAAA,cAAY,kBAAM2hC,EAAS,cAAf,GAA+B,CAACA,IACtDxjB,GAAiBq1B,EAAAA,EAAAA,MAAjBr1B,aAEN,OADoBvS,EAASsa,MAAMjkB,KAAKxH,SAAS0jB,IAExC,SAAC,KAAD,CAAUiZ,GAAG,iBAEf,SAACz6B,EAAA,EAAD,CAAK60C,GAAI,EAAGjxC,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAvD,UACL,SAAC,EAAAkI,SAAD,CAAUC,UAAU,SAACqB,EAAA,EAAD,CAAUrR,QAAQ,cAAcsG,MAAM,OAAO6H,OAAQ,MAAzE,SACGgW,IAAgB,SAACs1B,GAAD,CAAsBt1B,aAAcA,EAAcrT,QAASA,OAGjF,CAMD,SAAS2oC,GAAT,GAAqF,IAAD,MAApDt1B,EAAoD,EAApDA,aAAcrT,EAAsC,EAAtCA,QACtCtI,GAAYi2B,EAAAA,EAAAA,GAAata,GACvB8I,GAAWC,EAAAA,EAAAA,KAAXD,OACFvd,GAAiBlO,EAAAA,EAAAA,IAAW,kBAAM2rB,EAAAA,EAAAA,IAAmBhJ,EAAc8I,EAAvC,GAAgD,CAAC9I,EAAc8I,IAC3FwU,GAAWC,EAAAA,EAAAA,GAAYvd,GACb2xB,GAAhB,iBAA+BrU,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAWtd,UAA1C,QAA2D,CAAC,GAApD7M,OACR,cAAuCoiC,EAAAA,EAAAA,IAAS,CAAE1wC,KAAM,4BAA6B2wC,KAAK,WAA1F,QAAsG,CAAE75C,OAAQ,CAAE85C,IAAK,cAAjH95C,OAAU85C,IAAAA,OAAhB,MAAsB,WAAtB,EACQl4C,GAAMC,EAAAA,EAAAA,GAAe,CAAC,gBAAiB,mBAAvCD,GAERm4C,EAAAA,EAAAA,IAAS96C,EAAAA,EAAAA,UAAQ,2BAAS2C,EAAE,iBAAD,QAAkB8xC,EAAAA,EAAAA,IAAkBrvB,EAAc8I,KAA5D,cAA4EvrB,EAAE,uBAAD,OAAwBk4C,IAArG,GAA+G,CAACl4C,EAAGyiB,EAAc8I,EAAQ2sB,KAE1J,IAAMnxC,GAAoB24B,EAAAA,EAAAA,GAAmB,iBAAC54B,QAAD,IAACA,OAAD,EAACA,EAAWvJ,WAAZ,QAAmB,IAE1D82C,GAA+Ch3C,EAAAA,EAAAA,UAAQ,WAC3D,GAAK0iC,GAAaqU,EAClB,MAAO,CACLptC,KAAMotC,EACNrU,SAAAA,EACAhoB,aAASxY,EAEZ,GAAE,CAAC60C,EAAYrU,IAEVqY,GAAyD/6C,EAAAA,EAAAA,UAAQ,WACrE,GAAKyJ,GAAckH,EACnB,MAAO,CACLlH,UAAAA,EACAkH,eAAAA,EACAjH,kBAAAA,EAEH,GAAE,CAACD,EAAWkH,EAAgBjH,IAE/B,GAAkC/C,EAAAA,EAAAA,eAASzE,GAA3C,eAAO2zB,EAAP,KAAkB+L,EAAlB,KACA,GAAsCj7B,EAAAA,EAAAA,YAAtC,eAAO2tB,EAAP,KAAoBsE,EAApB,KACMoiB,GAAiDh7C,EAAAA,EAAAA,UAAQ,WAC7D,MAAO,CACL61B,UAAAA,EACA+L,aAAAA,EACAtN,YAAAA,EACAsE,eAAAA,EAEH,GAAE,CAAC/C,EAAWvB,IAQf,OALAhtB,EAAAA,EAAAA,YAAU,WACRs6B,OAAa1/B,GACb02B,OAAe12B,EAChB,GAAE,CAACkjB,KAEG,SAACzY,EAAA,EAAD,UACJqqC,GAAoB+D,GAAyBC,GAC1C,SAACxxC,EAAA,WAAD,CAA2BjL,MAAOw8C,EAAlC,UAAyD,SAACnxC,EAAA,WAAD,CAAsBrL,MAAOy4C,EAA7B,UAA+C,SAAC1mC,EAAa43B,SAAd,CAAuB3pC,MAAOy8C,EAA9B,UACxG,SAAC,IAAD,WAAoB,UAACjuC,EAAA,EAAD,CAAajJ,GAAI,CAAE0D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAAlE,WAClB,UAAClF,EAAA,EAAD,CAAK4D,QAAQ,OAAb,WACE,UAAC5D,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAGmO,SAAS,OAAOhP,SAAU,EAAtD,WACE,SAACyI,EAAD,KACA,SAACmpC,GAAD,KACA,SAACM,GAAD,KACA,SAACc,GAAD,KACA,SAACC,EAAA,EAAD,KACA,SAACC,GAAD,SAECppC,IAAW,SAACE,EAAA,EAAD,CAAalH,QAASgH,QAEtC,UAACnO,EAAA,EAAD,CAAK4D,QAAQ,OAAOsB,IAAK,EAAGmO,SAAS,OAArC,UACGxN,IAAa,SAAC2E,EAAA,EAAD,CAAaC,MAAO5E,EAAU4E,MAAOC,UAAW7E,EAAU6E,UAAW/H,QAASmD,KAC5F,SAAC,KAAD,CAAemB,KAAK,WACpB,SAAC,KAAD,KACA,SAAC,KAAD,CAAgBA,KAAK,cAEvB,SAACqI,EAAA,EAAD,WACE,SAACkoC,GAAD,CAAQP,IAAKA,OAEf,SAACQ,GAAD,KACA,SAACnoC,EAAA,EAAD,WACE,SAACkoC,GAAD,CAAQP,IAAKA,kBAIjB,SAACvoC,EAAA,EAAD,CAAUrR,QAAQ,cAAcsG,MAAM,OAAO6H,OAAQ,OAG5D,CACD,SAASisC,KACP,OAAO,SAAC,EAAArqC,SAAD,CAAUC,UAAU,SAACqB,EAAA,EAAD,CAAUrR,QAAQ,cAAcsG,MAAM,OAAO6H,OAAQ,MAAzE,UACL,UAAC,KAAD,YAEE,SAAC,KAAD,CAAOtN,OAAK,EAACC,SAAS,SAACmtC,GAAD,OACtB,SAAC,KAAD,CAAOjlC,KAAK,UAAUlI,SAAS,SAAC,GAAD,OAC/B,SAAC,KAAD,CAAOkI,KAAK,aAAalI,SAAS,SAACqwC,GAAD,OAClC,SAAC,KAAD,CAAOnoC,KAAK,YAAYlI,SAAS,SAAC2/B,GAAD,OACjC,SAAC,KAAD,CAAOz3B,KAAK,eAAelI,SAAS,SAACqzC,GAAD,UAGzC,CACD,SAASgG,GAAT,GAA2C,IAAzBP,EAAwB,EAAxBA,IACRl4C,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACR,OAAO,UAAC24C,EAAA,EAAD,CACL/8C,MAAOs8C,EACP55C,QAAQ,aACRs6C,0BAAwB,EACxBz3C,GAAI,CACF,uBAAwB,CACtBwR,WAAY,8BACZnF,gBAAiB,0BAPhB,WAWL,SAACqrC,EAAA,EAAD,CAAK13C,GAAI,CAAEquB,SAAU,OAAS5zB,MAAM,WAAWsB,MAAO8C,EAAE,iBAAkBP,MAAM,SAACq5C,EAAA,EAAD,IAAY93C,UAAWgkC,EAAAA,GAAYtJ,GAAG,MACtH,SAACmd,EAAA,EAAD,CAAK13C,GAAI,CAAEquB,SAAU,OAAS5zB,MAAM,SAASsB,MAAO8C,EAAE,eAAgBP,MAAM,SAACs5C,EAAA,EAAD,IAAe/3C,UAAWgkC,EAAAA,GAAYtJ,GAAG,YACrH,SAACmd,EAAA,EAAD,CAAK13C,GAAI,CAAEquB,SAAU,OAAS5zB,MAAM,YAAYsB,MAAO8C,EAAE,kBAAmBP,MAAM,SAACu5C,EAAA,EAAD,IAAYh4C,UAAWgkC,EAAAA,GAAYtJ,GAAG,eACxH,SAACmd,EAAA,EAAD,CAAK13C,GAAI,CAAEquB,SAAU,OAAS5zB,MAAM,WAAWsB,MAAO8C,EAAE,iBAAkBP,MAAM,SAAC0lC,EAAA,EAAD,IAAgBnkC,UAAWgkC,EAAAA,GAAYtJ,GAAG,cAC1H,SAACmd,EAAA,EAAD,CAAK13C,GAAI,CAAEquB,SAAU,OAAS5zB,MAAM,cAAcsB,MAAO8C,EAAE,oBAAqBP,MAAM,SAAC6mC,EAAA,EAAD,IAAatlC,UAAWgkC,EAAAA,GAAYtJ,GAAG,kBAEhI,CAGD,SAAS4c,KACP,IAAQt4C,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACR,GAAgCq7B,EAAAA,EAAAA,KAAhC,eAAOlsB,EAAP,KAAagU,EAAb,KAAqB/T,EAArB,KACqByH,GAAiBjQ,EAAAA,EAAAA,YAAWC,EAAAA,GAAzCC,UAAa+P,WACfoiC,EAAY94C,OAAOoG,KAAKsQ,GAAYlY,OAC1C,OAAO,iCACL,UAACqJ,EAAA,EAAD,CAAQxJ,MAAM,OAAO6J,WAAW,SAAC6wC,EAAA,EAAD,IAAc9wC,QAAS+a,EAAvD,UACGnjB,EADH,wCACwBi5C,IAAa,SAACxwC,EAAA,EAAD,CAAStH,GAAI,CAAEkI,GAAI,GAAK7K,MAAM,UAA9B,SAA0Cy6C,QAE/E,SAAC1iC,GAAD,CAAWpH,KAAMA,EAAMC,QAASA,MAEnC,CACD,SAASopC,KACP,IAAQW,GAAgBvyC,EAAAA,EAAAA,YAAWmI,EAAAA,GAA3BoqC,YACR,OAAO,iCACL,UAACnxC,EAAA,EAAD,CAAQxJ,MAAM,OAAO6J,WAAW,SAAC+wC,EAAA,EAAD,IAAehxC,QAAS+wC,EAAxD,sBAA+E,IAA/E,aACA,SAACtqC,GAAD,MAEH,C,4ZCtKc,SAAS+6B,EAAT,GAA+G,IAAD,EAAxFtd,EAAwF,EAAxFA,SAAUlkB,EAA8E,EAA9EA,QAAS0iC,EAAqE,EAArEA,OAAQuO,EAA6D,EAA7DA,SAA6D,IAAnD1pB,SAAAA,OAAmD,SAAjC4Y,EAAiC,EAAjCA,aAClFvoC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,cAAe,OAArCD,EACAkQ,GAAatJ,EAAAA,EAAAA,YAAWuJ,EAAAA,GAAxBD,SAEFqc,GADiBC,EAAAA,EAAAA,GAAUF,GAE3BG,GAAc3sB,EAAAA,EAAAA,IAAW,kBAAY,OAANysB,QAAM,IAANA,GAAAA,EAAQhvB,IAAMmvB,EAAAA,EAAAA,IAAgBH,EAAOhvB,UAAOgC,CAAlD,GAA6D,QAACgtB,QAAD,IAACA,OAAD,EAACA,EAAQhvB,MAE/FyN,GAAS1G,EAAAA,EAAAA,cAAY,SAACg1C,GAAD,OAAwBA,EAAG1Q,iBAAH,OAAqBnc,QAArB,IAAqBA,OAArB,EAAqBA,EAAa2c,WAA1D,GAAsE,CAAC3c,IAE5F7V,GAActS,EAAAA,EAAAA,cAAY,SAAAhD,GAAQ,OAAI,SAAC,IAAD,CAAgB8G,QAAS,yBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAUkkB,EAAhB,EAAzB,SAAsDhrB,GAA1D,GAAsF,CAAC8G,EAASkkB,IAClIitB,GAAmBj1C,EAAAA,EAAAA,cAAY,SAAAhD,GAAQ,OAAI,SAAC,IAAD,UAAOA,GAAX,GAA4B,IACnEk4C,GAAcl1C,EAAAA,EAAAA,cAAY,SAACgT,GAAD,OAAoBgV,GAAYpc,EAAS0e,QAAQruB,IAAI+rB,EAAU,CAAE9C,SAAUlS,GAA3E,GAAiF,CAACpH,EAAUoc,IAEtH/H,GAASlnB,EAAAA,EAAAA,UAAQ,kBAAMovB,GAAeF,IAAUI,EAAAA,EAAAA,IAAc,CAACF,EAAYzlB,MAAM4lB,EAAAA,EAAAA,IAAiBL,IAAjF,GAA4F,CAACE,EAAaF,IAEjI,IAAKA,IAAWE,IAAgBlI,EAAQ,OAAO,KAC/C,IAAQ7Y,EAA0D6gB,EAA1D7gB,MAAOC,EAAmD4gB,EAAnD5gB,UAAWuB,EAAwCqf,EAAxCrf,WAAY2P,GAA4B0P,EAA5B1P,GAAtC,GAAkE0P,EAAxB/C,SAAAA,QAA1C,OAAqD,GAArD,GAAyDoqB,GAASrnB,EAATqnB,KACnDhL,GAAgBrkB,EAAO9c,IAAIyM,EAAAA,GAAAA,OAAAA,MAAmBtY,MAC9C63C,GAAQ,CAACv/B,EAAAA,GAAAA,OAAAA,KAAmBA,EAAAA,GAAAA,OAAAA,IAAkBA,EAAAA,GAAAA,OAAAA,MAAmB5W,KAAI,SAAA0c,GAAC,OAAIuK,EAAO9c,IAAIuS,EAAf,IACtEo0B,GAAM3hB,EAAYK,OAAOnhB,GAE/B,OAAO,SAAC,EAAA0C,SAAD,CAAUC,UAAU,SAAC,IAAD,CAAUhQ,QAAQ,cAAc6C,GAAI,CAAEyD,MAAO,OAAQ6H,OAAQ,OAAQgpB,UAAW,OAApG,UACL,UAAC,IAAD,CAAWt0B,GAAI,CAAEsL,OAAQ,OAAQ5H,QAAS,OAAQoG,cAAe,SAAUuJ,eAAgB,iBAA3F,WACE,UAAC,IAAD,CAAoBqV,YAAazhB,EAAS0hB,QAASlT,EAAa6iC,aAAcF,EAA9E,WACE,UAAC,IAAD,CAAKv0B,UAAS,eAAUyH,EAAYnsB,OAAtB,QAAoCa,GAAI,CAAE4oB,SAAU,WAAYxa,GAAI,EAAGrK,GAAI,GAAzF,WACIkD,IAAW,SAAC,IAAD,CAAY5J,MAAM,UAAU4J,QAAS,kBAAM8H,EAAS0e,QAAQruB,IAAIsc,GAAI,CAAE+2B,MAAOA,IAAxC,EAAiDzyC,GAAI,CAAE4oB,SAAU,WAAYwjB,MAAO,EAAG5iB,OAAQ,EAAGC,OAAQ,GAA/I,SACVgpB,IAAO,SAAC,IAAD,KAAW,SAAC,IAAD,OAErB,UAAC,IAAD,CAAKzyC,GAAI,CAAE4oB,SAAU,WAAYa,OAAQ,GAAzC,WACE,UAAC,IAAD,CAAK5pB,UAAU,MAAMG,GAAI,CAAE0D,QAAS,OAAQC,WAAY,SAAUqB,IAAK,EAAG0J,GAAI,GAA9E,WACE,SAAC,IAAD,CAAS1O,GAAI,CAAE6uB,SAAU,SAAWrhB,IAAG,UAAE0a,EAAAA,EAAAA,mBAAF,aAAE,EAAqBuf,OAC9D,SAAC,IAAD,CAAY8Q,QAAM,EAACv4C,GAAI,CAAEkE,UAAW,SAAUmI,gBAAiB,yBAA0BrF,aAAc,MAAOjD,GAAI,GAAlH,UAAuH,4BAASunB,EAAY5kB,aAE9I,UAAC,IAAD,CAAY7G,UAAU,OAAO1C,QAAQ,KAArC,iBAA+CoN,MAC/C,UAAC,IAAD,CAAY1K,UAAU,OAAO1C,QAAQ,KAAKE,MAAM,iBAAhD,cAAmEuN,EAAAA,GAAkBJ,OACrF,UAAC,IAAD,CAAYrN,QAAQ,KAApB,yBAAoC,4BAAS4O,QAC7C,SAAC,IAAD,WAAY,SAAC,IAAD,CAAc7L,MAAOorB,EAAYnsB,OAAQ8sC,SAAO,UAE9D,SAAC,IAAD,CAAKjsC,GAAI,CAAEsL,OAAQ,OAAQsd,SAAU,WAAYwjB,MAAO,EAAGnsC,IAAK,GAAhE,UACE,SAAC,IAAD,CACEJ,UAAU,MACV2N,IAAG,OAAEy/B,SAAF,IAAEA,GAAAA,GAAO,GACZxpC,MAAM,OACN6H,OAAO,OACPtL,GAAI,CAAEuS,MAAO,iBAInB,SAAC,IAAD,UACG+/B,GAAMn2C,KAAI,SAAAoT,GACT,OAAKA,EAAKkB,KAAK/J,MACR,UAAC,IAAD,CAAqC1G,GAAI,CAAE0D,QAAS,QAApD,WACL,UAAC,IAAD,CAAYS,SAAU,EAAtB,UAA0BoL,EAAKkB,KAAKnS,KAApC,IAA2CiR,EAAKkB,KAAK/J,SACrD,SAAC,IAAD,WAAagK,EAAAA,EAAAA,GAASnB,OAFP0H,KAAKC,UAAU3H,EAAKkB,OADT,IAK7B,UAGL,UAAC,IAAD,CAAKzQ,GAAI,CAAEiF,EAAG,EAAGvB,QAAS,OAAQsB,IAAK,EAAGqO,eAAgB,gBAAiB1P,WAAY,UAAvF,WACE,SAAC,IAAD,CAAK3D,GAAI,CAAEmE,SAAU,GAArB,SACGqqB,GACG,SAAC,IAAD,CAAsBnG,SAAUA,GAAUgwB,YAAaA,EAAaxuC,OAAQA,EAAQ0mC,kBAAmB,CAAE9uC,kBAAmB,SAAA5C,GAAC,OAAKA,EAAEzC,GAAP,EAAY44C,kBAAkB,MAC3J,SAAC,IAAD,CAAc3sB,SAAUA,QAE9B,UAAC,IAAD,CAAaroB,GAAI,CAAEsL,OAAQ,QAA3B,YACKq+B,IAAU,SAAC,IAAD,CAAS7kC,OAAO,SAAC,IAAD,UAAajG,EAAb,wCAAgD8qB,UAAU,MAAMic,OAAK,EAArF,UACX,SAAC,IAAD,CAAQvoC,MAAM,OAAO4J,QAAS,kBAAM0iC,EAAOjuB,GAAb,EAA9B,UACE,SAAC,IAAD,CAAiBpd,KAAMk6C,EAAAA,IAAQ30B,UAAU,gBAG1Cq0B,IAAY,SAAC,IAAD,CAAQ76C,MAAM,QAAQ4J,QAAS,kBAAMixC,EAASx8B,GAAf,EAAoB/Y,WAAY0lB,IAAYoqB,GAA3E,UACb,SAAC,IAAD,CAAiBn0C,KAAMm6C,EAAAA,IAAY50B,UAAU,YAE9CujB,YAKV,C","sources":["Components/MenuItemWithImage.tsx","Components/Artifact/ArtifactAutocomplete.tsx","Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/LevelSelect.tsx","Components/RefinementDropdown.tsx","Components/TextButton.tsx","Context/GraphContext.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","Context/OptimizationTargetContext.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetBadges.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildResult.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard/CustomDot.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard/CustomTooltip.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard/EnhancedPoint.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/OptimizationTargetEditorList.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/WorkerErr.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/useCharTC.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/TravelerGenderSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx"],"sourcesContent":["import { ListItemIcon, ListItemText, MenuItem, Theme } from \"@mui/material\";\n\ntype MenuItemWithImageProps = {\n  value: string\n  image?: Displayable\n  text: Displayable\n  theme: Theme\n  isSelected?: boolean\n  addlElement?: Displayable\n  props?: object\n}\n\nexport default function MenuItemWithImage({ value, image = \"\", text, theme, isSelected, addlElement, props }: MenuItemWithImageProps) {\n  return <MenuItem key={value} value={value} {...props}>\n    <ListItemIcon>{image}</ListItemIcon>\n    <ListItemText primaryTypographyProps={{ style: { fontWeight: isSelected ? theme.typography.fontWeightMedium : theme.typography.fontWeightRegular } }}>\n      {text}\n    </ListItemText>\n    {addlElement && addlElement}\n  </MenuItem>\n}\n","import { Autocomplete, AutocompleteProps, AutocompleteRenderGroupParams, Box, Chip, List, ListSubheader, TextField, useTheme } from '@mui/material';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\nimport i18n from '../../i18n';\nimport KeyMap from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allMainStatKeys, allSubstatKeys, MainStatKey, SubstatKey } from '../../Types/artifact';\nimport { allElementsWithPhy, ArtifactRarity, ArtifactSetKey } from '../../Types/consts';\nimport ColorText from '../ColoredText';\nimport MenuItemWithImage from '../MenuItemWithImage';\nimport SolidColoredTextField from '../SolidColoredTextfield';\nimport { StarsDisplay } from '../StarDisplay';\nimport StatIcon from '../StatIcon';\n\ntype Grouper = string | number | undefined\n\ntype ArtifactMultiAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey\ntype ArtifactMultiAutocompleteOption<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactMultiAutocompleteProps<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<T, G>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKeys: T[]\n  setArtifactKeys: (keys: T[]) => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n}\nfunction ArtifactMultiAutocomplete<T extends ArtifactMultiAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKeys, setArtifactKeys, getName, getImage, label, ...props }:\n  ArtifactMultiAutocompleteProps<T, G>) {\n  const theme = useTheme()\n\n  const handleChange = (_, value: ArtifactMultiAutocompleteOption<T, G>[]) => {\n    setArtifactKeys(value.map(v => v.key))\n  }\n  const options = useMemo(() => allArtifactKeysWithGrouper.map(({ key, grouper }) => ({ key, label: getName(key), grouper })), [allArtifactKeysWithGrouper, getName])\n  return <Autocomplete\n    autoHighlight\n    multiple\n    disableCloseOnSelect\n    options={options}\n    value={selectedArtifactKeys.map(key => ({ key: key, label: getName(key) }))}\n    onChange={handleChange}\n    getOptionLabel={(option) => option.label}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    renderInput={(params) => <TextField\n      {...params}\n      label={label}\n      variant=\"filled\"\n      InputLabelProps={{ style: { color: theme.palette.text.primary } }}\n      color={selectedArtifactKeys.length ? \"success\" : \"primary\"}\n      type=\"search\"\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={<ColorText color={KeyMap.getVariant(option.key)}>{getImage(option.key)}</ColorText>}\n        text={<ColorText color={KeyMap.getVariant(option.key)}>{option.label}</ColorText>}\n        theme={theme}\n        isSelected={selectedArtifactKeys.includes(option.key)}\n        props={props}\n      />\n    )}\n    renderTags={(selected, getTagProps) => selected.map((value, index) => {\n      const element = allElementsWithPhy.find(ele => value.key === `${ele}_dmg_`)\n      const color = element ? element : undefined\n      return <Chip {...getTagProps({ index })} key={value.key} icon={getImage(value.key)} label={value.label} color={color} />\n    })}\n    {...props}\n  />\n}\n\ntype ArtifactSetMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<ArtifactSetKey, ArtifactRarity>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKeys: ArtifactSetKey[]\n  setArtSetKeys: (keys: ArtifactSetKey[]) => void\n}\nexport function ArtifactSetMultiAutocomplete({ artSetKeys, setArtSetKeys, ...props }: ArtifactSetMultiAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactMultiAutocomplete<ArtifactSetKey, ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKeys={artSetKeys}\n    setArtifactKeys={setArtSetKeys}\n    getName={(key: ArtifactSetKey) => t(`artifactNames_gen:${key}`)}\n    getImage={(key: ArtifactSetKey) => artifactSheets(key).defIcon}\n    label={t(\"artifact:autocompleteLabels.sets\")}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\ntype ArtifactMainStatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<MainStatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  mainStatKeys: MainStatKey[]\n  setMainStatKeys: (keys: MainStatKey[]) => void\n}\nexport function ArtifactMainStatMultiAutocomplete({ mainStatKeys, setMainStatKeys, ...props }: ArtifactMainStatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<MainStatKey, undefined>\n    allArtifactKeysWithGrouper={allMainStatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={mainStatKeys}\n    setArtifactKeys={setMainStatKeys}\n    getName={(key: MainStatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: MainStatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.mainStats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSubstatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<SubstatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  substatKeys: SubstatKey[]\n  setSubstatKeys: (keys: SubstatKey[]) => void\n}\nexport function ArtifactSubstatMultiAutocomplete({ substatKeys, setSubstatKeys, ...props }: ArtifactSubstatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<SubstatKey, undefined>\n    allArtifactKeysWithGrouper={allSubstatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={substatKeys}\n    setArtifactKeys={setSubstatKeys}\n    getName={(key: SubstatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: SubstatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.substats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSingleAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey | \"\"\ntype ArtifactSingleAutocompleteOption<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactSingleAutocompleteProps<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<T, G>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKey: T\n  setArtifactKey: (key: T | \"\") => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nfunction ArtifactSingleAutocomplete<T extends ArtifactSingleAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKey, setArtifactKey, getName, getImage, label, disable = () => false, showDefault = false, defaultText = \"\", defaultIcon = \"\", ...props }:\n  ArtifactSingleAutocompleteProps<T, G>) {\n  const theme = useTheme();\n\n  const options = useMemo(() =>\n    (showDefault\n      ? [{ key: \"\" as T, label: defaultText }]\n      : []\n    ).concat(allArtifactKeysWithGrouper.map(({ key, grouper }) => (\n      { key, label: getName(key), grouper }\n    ))), [allArtifactKeysWithGrouper, getName, defaultText, showDefault])\n\n  return <Autocomplete\n    autoHighlight\n    options={options}\n    clearIcon={selectedArtifactKey ? undefined : \"\"} // Hide the clear icon if the value is already default\n    value={{ key: selectedArtifactKey, label: getName(selectedArtifactKey) }}\n    onChange={(event, newValue, reason) => (event.type !== \"change\" || reason !== \"clear\") && setArtifactKey(newValue ? newValue.key : \"\")}\n    getOptionLabel={(option) => option.label ? option.label : defaultText}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    getOptionDisabled={option => disable(option.key)}\n    renderInput={(props) => <SolidColoredTextField\n      {...props}\n      label={label}\n      startAdornment={getImage(selectedArtifactKey)}\n      hasValue={selectedArtifactKey ? true : false}\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={getImage(option.key)}\n        text={option.label}\n        theme={theme}\n        isSelected={selectedArtifactKey === option.key}\n        props={props}\n      />\n    )}\n    {...props}\n  />\n}\n\ntype ArtifactSetSingleAutocompleteProps = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<ArtifactSetKey | \"\", ArtifactRarity>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKey: ArtifactSetKey | \"\"\n  setArtSetKey: (key: ArtifactSetKey | \"\") => void\n  label?: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nexport function ArtifactSetSingleAutocomplete({ artSetKey, setArtSetKey, label = \"\", ...props }: ArtifactSetSingleAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  label = label ? label : t(\"artifact:autocompleteLabels.set\")\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactSingleAutocomplete<ArtifactSetKey | \"\", ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKey={artSetKey}\n    setArtifactKey={setArtSetKey}\n    getName={(key: ArtifactSetKey | \"\") => key && t(`artifactNames_gen:${key}`)}\n    getImage={(key: ArtifactSetKey | \"\") => key ? artifactSheets(key).defIcon : <></>}\n    label={label}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\nfunction sortByRarityAndName(a: { key: ArtifactSetKey, grouper: ArtifactRarity }, b: { key: ArtifactSetKey, grouper: ArtifactRarity }) {\n  if (a.grouper > b.grouper) {\n    return -1\n  }\n  if (a.grouper < b.grouper) {\n    return 1\n  }\n\n  const aName = i18n.t(`artifactNames_gen:${a.key}`)\n  const bName = i18n.t(`artifactNames_gen:${b.key}`)\n  if (aName < bName) {\n    return -1\n  }\n  if (aName > bName) {\n    return 1\n  }\n\n  return 0\n}\n","import { Card, Slider } from \"@mui/material\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { clamp } from \"../../Util/Util\"\nimport CustomNumberInput from \"../CustomNumberInput\"\n\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\n  levelLow: number,\n  levelHigh: number,\n  setLow: (low: number) => void,\n  setHigh: (high: number) => void,\n  setBoth: (low: number, high: number) => void,\n  dark?: boolean,\n  disabled?: boolean,\n  showLevelText?: boolean,\n}) {\n  const [sliderLow, setsliderLow] = useState(levelLow)\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\n  const setSlider = useCallback(\n    (e: unknown, value: number | number[]) => {\n      if (typeof value == \"number\") throw new TypeError()\n      const [l, h] = value\n      setsliderLow(l)\n      setsliderHigh(h)\n    },\n    [setsliderLow, setsliderHigh])\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\n\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\n    <CustomNumberInput\n      value={sliderLow}\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\n      inputProps={{ sx: { textAlign: showLevelText ? \"right\" : \"center\" } }}\n      startAdornment={showLevelText ? \"Level: \" : undefined}\n      disabled={disabled}\n    />\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\n      getAriaLabel={() => 'Arifact Level Range'}\n      value={[sliderLow, sliderHigh]}\n      onChange={setSlider}\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\n      valueLabelDisplay=\"auto\"\n      min={0} max={20} step={1} marks\n      disabled={disabled}\n    />\n    <CustomNumberInput\n      value={sliderHigh}\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\n      sx={{ px: 1, width: 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      disabled={disabled}\n    />\n  </Card>\n}\n","import { Typography, Box } from \"@mui/material\";\n\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\n    {avatar}\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\n    {action && <Typography variant=\"caption\">{action}</Typography>}\n  </Box>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DataContext } from '../../Context/DataContext';\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\nimport DropdownButton from '../DropdownMenu/DropdownButton';\nimport SqBadge from '../SqBadge';\nimport { Translate } from '../Translate';\n\ninterface ConditionalSelectorProps {\n  conditional: DocumentConditional,\n  disabled?: boolean,\n}\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\n  } else if (\"path\" in conditional) {\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\n  }\n}\n\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const [stateKey, st] = Object.entries(conditional.states)[0]\n  const badge = getStateBadge(st.name)\n  const condName = getCondName(conditional.name)\n\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n    {condName} {badge}\n  </Button>\n}\n\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\n  const condName = getCondName(conditional.name)\n\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n      <span>Not Active</span>\n    </MenuItem>\n    <Divider />\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n  </DropdownButton>\n}\n\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalMultiple\n}\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, path, v)\n    } else {\n      deletePropPath(conditionalValues, path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [character, characterDispatch])\n\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\n      const conditionalValue = data.get(st.value).value\n      const isSelected = conditionalValue === stateKey\n      return <Button\n        color={isSelected ? \"success\" : \"primary\"}\n        disabled={disabled}\n        fullWidth\n        key={stateKey}\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\n        size=\"small\"\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        sx={{ borderRadius: 0 }}\n      >\n        {getCondName(st.name)}\n      </Button>\n    })}\n  </ButtonGroup>\n}\n\nfunction isElement(disp: Displayable): disp is JSX.Element {\n  return (typeof disp !== \"string\")\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\n  if (!stateName) return \"\"\n\n  let badgeColor: ButtonProps['color'] = \"primary\"\n  let badgeText = stateName\n  if (stateName && isElement(stateName)) {\n    if (stateName.props.color) {\n      badgeColor = stateName.props.color\n      badgeText = <span>{stateName.props.children}</span>\n    }\n  }\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getCondName(condName: Displayable): Displayable {\n  if (isElement(condName)) {\n    const key = condName.props.key18\n    const ns = condName.props.ns\n    const values = condName.props.values\n    return <Translate ns={ns} key18={key} values={values} useBadge />\n  }\n  return condName\n}\n","import { CardContent } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\nimport { evalIfFunc } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport { HeaderDisplay } from \"../DocumentDisplay\"\nimport FieldsDisplay from \"../FieldDisplay\"\nimport ConditionalSelector from \"./ConditionalSelector\"\n\ntype ConditionalDisplayProps = {\n  conditional: DocumentConditional,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n  hideDesc?: boolean,\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\n  const { data } = useContext(DataContext)\n  let fields\n  if (\"path\" in conditional) {\n    const condVal = data.get(conditional.value).value\n    fields = condVal && conditional.states[condVal]?.fields\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    fields = Object.values(conditional.states).flatMap(state => {\n      const stateVal = data.get(state.value).value\n      return stateVal ? state.fields : []\n    })\n  }\n  return <CardDark>\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <ConditionalSelector conditional={conditional} />\n    </CardContent>\n    {fields && <FieldsDisplay fields={fields} />}\n  </CardDark>\n}\n","import { Box, Divider, Typography } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../Context/DataContext\"\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\nimport FieldsDisplay from \"./FieldDisplay\"\nimport InfoTooltip from \"./InfoTooltip\"\n\ntype DocumentDisplayProps = {\n  sections: DocumentSection[],\n  teamBuffOnly?: boolean,\n  hideDesc?: boolean,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n}\n\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\n  const { data } = useContext(DataContext)\n  if (!sections.length) return null\n  const sectionDisplays = sections.map((s, i) => {\n    // If we can't show this section, return null\n    if (s.canShow && !data.get(s.canShow).value) return null\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\n    if (teamBuffOnly && !s.teamBuff) return null\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\n  }).filter(s => s)\n  if (!sectionDisplays.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\n}\n\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  if (\"fields\" in section) {\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else if (\"states\" in section) {\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else /* if (\"text\" in section) */ {\n    return <TextSectionDisplay section={section} />\n  }\n}\n\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  return <CardDark>\n    {!evalIfFunc(hideHeader, section) && section.header &&\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\n    }\n    <FieldsDisplay fields={section.fields} />\n  </CardDark>\n}\n\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\n  const { data } = useContext(DataContext)\n  return <div>\n    {evalIfFunc(section.text, data)}\n  </div>\n}\n\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\n  const { data } = useContext(DataContext)\n  let { icon, title, action } = header\n  icon = evalIfFunc(icon, data)\n  const description = !hideDesc && evalIfFunc(header.description, data)\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\n  return <>\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\n    {!hideDivider && <Divider />}\n  </>\n}\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, ascensionMaxLevelLow, maxLevel, maxLevelLow, milestoneLevels, milestoneLevelsLow } from '../Data/LevelData';\nimport { Ascension } from '../Types/consts';\nimport { clamp } from '../Util/Util';\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\nimport DropdownButton from './DropdownMenu/DropdownButton';\n\nexport default function LevelSelect({ level, ascension, setBoth, useLow = false }: { level: number, ascension: Ascension, setBoth: (action: { level?: number, ascension?: Ascension }) => void, useLow?: boolean }) {\n  const { t } = useTranslation(\"ui\")\n  const ascensionMaxLevels = useLow ? ascensionMaxLevelLow : ascensionMaxLevel\n  const setLevel = useCallback((level: number = 1) => {\n    level = clamp(level, 1, useLow ? maxLevelLow : maxLevel)\n    const ascension = ascensionMaxLevels.findIndex(ascenML => level <= ascenML) as Ascension\n    setBoth({ level, ascension })\n  }, [setBoth, ascensionMaxLevels, useLow])\n  const setAscension = useCallback(() => {\n    const lowerAscension = ascensionMaxLevels.findIndex(ascenML => level !== 90 && level === ascenML) as Ascension\n    if (ascension === lowerAscension) setBoth({ ascension: (ascension + 1) as Ascension })\n    else setBoth({ ascension: lowerAscension })\n  }, [setBoth, ascensionMaxLevels, ascension, level])\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\n    <CustomNumberInputButtonGroupWrapper >\n      <CustomNumberInput onChange={setLevel} value={level}\n        startAdornment=\"Lv. \"\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\", width: \"3em\" } }}\n        sx={{ height: \"100%\", pl: 2 }} />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ pl: 1, whiteSpace: 'nowrap' }} disabled={!(useLow ? ambiguousLevelLow : ambiguousLevel)(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\n    <DropdownButton title={t(\"selectlevel\")} sx={{ flexGrow: 1 }}>\n      {[...(useLow ? milestoneLevelsLow : milestoneLevels)].map(([lv, as]) => {\n        const selected = lv === level && as === ascension\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => setBoth({ level: lv, ascension: as })}>\n          {lv === ascensionMaxLevels[as] ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevels[as]}`}\n        </MenuItem>\n      })}\n    </DropdownButton>\n  </ButtonGroup>\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport { allRefinement, Refinement } from \"../Types/consts\"\nimport DropdownButton from \"./DropdownMenu/DropdownButton\"\n\nexport default function RefinementDropdown({ refinement, setRefinement }: { refinement: Refinement, setRefinement: (r: Refinement) => void }) {\n  const { t } = useTranslation(\"ui\")\n  return <DropdownButton title={t(\"refinement\", { value: refinement })}>\n    {allRefinement.map(r =>\n      <MenuItem key={r} onClick={() => setRefinement(r)} selected={refinement === r} disabled={refinement === r}>\n        {t(\"refinement\", { value: r })}\n      </MenuItem>)}\n  </DropdownButton>\n}\n","import { Button, ButtonProps, styled } from \"@mui/material\";\n\nconst DisabledButton = styled(Button)(({ theme }) => ({\n  \"&.Mui-disabled\": {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n  }\n}))\n\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\n  return <DisabledButton {...props} disabled  >\n    {children}\n  </DisabledButton>\n}\n","import { createContext } from \"react\"\nimport { NumNode } from \"../Formula/type\"\nimport { Build } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nexport type ChartData = {\n  valueNode: NumNode,\n  plotNode: NumNode,\n  data: Build[]\n}\nexport type GraphContextObj = {\n  chartData?: ChartData\n  setChartData: (data: ChartData | undefined) => void\n  graphBuilds: string[][] | undefined\n  setGraphBuilds: (builds: string[][] | undefined) => void\n}\nexport const GraphContext = createContext({} as GraphContextObj)\n","import { Button } from '@mui/material';\nimport React, { Suspense, useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ThumbSide from '../../Components/Character/ThumbSide';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\n\nconst CharacterSelectionModal = React.lazy(() => import('../CharacterSelectionModal'))\n\nexport default function CharSelectDropdown() {\n  const { t } = useTranslation(\"page_character\")\n  const { characterSheet } = useContext(CharacterContext)\n  const [showModal, setshowModal] = useState(false)\n  const setCharacter = useCharSelectionCallback()\n  return <>\n    <Suspense fallback={false}>\n      <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\n    </Suspense>\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\n  </>\n}\n","import { ExpandMore } from '@mui/icons-material';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport ColorText from '../../Components/ColoredText';\nimport ImgIcon from '../../Components/Image/ImgIcon';\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport SqBadge from '../../Components/SqBadge';\nimport { DataContext } from '../../Context/DataContext';\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\nimport { DatabaseContext } from '../../Database/Database';\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\nimport { DisplaySub, Variant } from '../../Formula/type';\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\n\nexport default function FormulaModal() {\n  const { modalOpen } = useContext(FormulaDataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\n    <CardDark>\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <CalculationDisplay />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n\nfunction CalculationDisplay() {\n  const { data } = useContext(DataContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const sections = getDisplaySections(contextData ?? data)\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\n    <Box sx={{ mr: -1, mb: -1 }}>\n      {sections.map(([key, Nodes]) =>\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Box>\n  </Suspense>\n}\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const { data } = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey, database), [contextData, data, sectionKey])\n  if (!header) return null\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\n  const { title, icon, action } = header\n  return <CardLight sx={{ mb: 1 }}>\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <CardContent>\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\n    </CardContent>\n  </CardLight>\n}\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\n  const { node: contextNode } = useContext(FormulaDataContext)\n  const [expanded, setExpanded] = useState(false);\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\n\n  useEffect(() => {\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\n  }, [scrollRef, node, contextNode])\n\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\n    <AccordionSummary expandIcon={<ExpandMore />} >\n      <Typography><ColorText color={node.info.variant}>{node.info.name}</ColorText> <strong>{nodeVStr(node)}</strong></Typography>\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\n      </Box>}\n    </AccordionSummary>\n    <AccordionDetails >\n      {node.formulas.map((subform, i) => <Typography key={i} component=\"div\">{subform}</Typography>)}\n    </AccordionDetails>\n  </Accordion>\n}\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\nconst ExpandButton = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: (theme as any).transitions.create('transform', {\n    duration: (theme as any).transitions.duration.shortest,\n  }),\n}));\n\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\nimport { ReactNode } from \"react\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\nimport TextButton from \"./TextButton\"\n\ntype StatInputInput = ButtonGroupProps & {\n  name: Displayable,\n  children?: ReactNode,\n  value: number,\n  placeholder?: string,\n  defaultValue?: number,\n  onValueChange: (newValue: number | undefined) => void,\n  percent?: boolean,\n  disabled?: boolean,\n  onReset?: () => void\n}\nconst FlexButtonGroup = styled(ButtonGroup)({\n  display: \"flex\"\n})\n\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\n\n  return <FlexButtonGroup {...restProps} >\n    {children}\n    <TextButton sx={{ px: 1 }}>\n      {name}\n    </TextButton>\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\n      <CustomNumberInput\n        sx={{ px: 1 }}\n        inputProps={{\n          sx: { textAlign: \"right\" }\n        }}\n        float={percent}\n        placeholder={placeholder}\n        value={value}\n        onChange={onValueChange}\n        disabled={disabled}\n        endAdornment={percent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\n      <Replay />\n    </Button>\n  </FlexButtonGroup>\n}\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore, Replay } from \"@mui/icons-material\";\nimport { Box, Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useState } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../Context/CharacterContext\";\nimport { DataContext } from \"../Context/DataContext\";\nimport { uiInput as input } from \"../Formula\";\nimport { nodeVStr } from \"../Formula/uiData\";\nimport KeyMap from '../KeyMap';\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\nimport CardLight from \"./Card/CardLight\";\nimport ColorText from \"./ColoredText\";\nimport ExpandButton from \"./ExpandButton\";\nimport StatIcon from \"./StatIcon\";\nimport StatInput from \"./StatInput\";\n\nexport function EnemyExpandCard() {\n  const { t } = useTranslation(\"ui\")\n  const { characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const [expanded, setexpanded] = useState(false)\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\n  const eLvlNode = data.get(input.enemy.level)\n  const eDefRed = data.get(input.enemy.defRed)\n  const eDefIgn = data.get(input.enemy.defIgn)\n  const onReset = useCallback(() => characterDispatch({ enemyOverride: {} }), [characterDispatch])\n\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\", gap: 1, alignItems: \"center\", flexWrap: \"wrap\" }}>\n      <Chip size=\"small\" color=\"success\" label={<span>{eLvlNode.info.name} <strong>{eLvlNode.value}</strong></span>} />\n      {allElementsWithPhy.map(element => <Typography key={element} ><EnemyResText element={element} /></Typography>)}\n      <Typography>DEF Red. {nodeVStr(eDefRed)}</Typography>\n      <Typography>DEF Ignore {nodeVStr(eDefIgn)}</Typography>\n      <Box flexGrow={1} display=\"flex\" justifyContent=\"flex-end\" gap={1}>\n        <Button size=\"small\" color=\"error\" onClick={onReset} startIcon={<Replay />}>{t`reset`}</Button>\n        <ExpandButton\n          expand={expanded}\n          onClick={toggle}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n          size=\"small\"\n          sx={{ marginLeft: 0 }}\n        >\n          <ExpandMore />\n        </ExpandButton>\n      </Box>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent sx={{ pt: 0 }}>\n        <EnemyEditor />\n      </CardContent>\n    </Collapse>\n  </CardLight>\n}\n\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\n  const { data } = useContext(DataContext)\n  const node = data.get(input.enemy[`${element}_res_`])\n  const immune = !isFinite(node.value)\n  const content = immune ? <span >{StatIcon[element]} &#8734;</span> :\n    <span >{StatIcon[element]} <strong>{nodeVStr(node)}</strong></span>\n  return <ColorText color={element}>{content}</ColorText>\n}\n\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const defaultVal = 10\n\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\n  return <Grid container spacing={1}>\n    <Grid item {...bsProps}>\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n        To get the specific resistance values of enemies, please visit the wiki.\n      </Button>\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\n        value={eLvl}\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\n        defaultValue={data.get(input.lvl).value}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\n      />\n    </Grid>\n    {allElementsWithPhy.map(eleKey => {\n      const statKey = `${eleKey}_enemyRes_`\n      const val = enemyOverride[statKey]\n      const elementImmunity = val === Number.MAX_VALUE\n      return <Grid item key={eleKey} {...bsProps}>\n        <StatInput\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\n          value={val !== undefined ? (elementImmunity ? Infinity : val) : 10}\n          placeholder={elementImmunity ? \"∞ \" : KeyMap.getStr(statKey)}\n          defaultValue={defaultVal}\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\n          disabled={elementImmunity}\n          percent\n        >\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\n            Immunity\n          </Button>\n        </StatInput>\n      </Grid>\n    })}\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\n        value={eDefRed}\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\n        value={eDefIgn}\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\n    </Grid>\n  </Grid>\n}\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography, Box } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CardDark from \"../../Components/Card/CardDark\";\nimport CardLight from \"../../Components/Card/CardLight\";\nimport CloseButton from \"../../Components/CloseButton\";\nimport ColorText from \"../../Components/ColoredText\";\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport StatEditorList from \"../../Components/StatEditorList\";\nimport { CharacterContext } from \"../../Context/CharacterContext\";\nimport { DataContext } from \"../../Context/DataContext\";\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\nimport { ReadNode } from \"../../Formula/type\";\nimport { nodeVStr } from \"../../Formula/uiData\";\nimport { allEleDmgKeys, allEleResKeys } from \"../../KeyMap\";\n\nconst cols = {\n  xs: 1, md: 2, lg: 3\n}\n\nexport default function StatModal({ open, onClose }) {\n  const { t } = useTranslation(\"page_character\")\n  return <ModalWrapper open={open} onClose={onClose}>\n    <CardDark>\n      <CardHeader title={t`addStats.title`} action={<CloseButton onClick={onClose} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <Stack spacing={1}>\n          <BonusStatsEditor />\n          <EnemyExpandCard />\n          <MainStatsCards />\n        </Stack>\n      </CardContent></CardDark>\n  </ModalWrapper>\n}\nconst keys = [...allInputPremodKeys]\nconst wrapperFunc = (e: JSX.Element, key?: string) => <Grid item key={key} xs={1}>{e}</Grid>\nfunction BonusStatsEditor() {\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\n\nconst otherStatKeys = [\n  ...allEleDmgKeys,\n  ...allEleResKeys,\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\n] as const\n\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\n\n\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\n  const { data, oldData } = useContext(DataContext)\n  return <FieldDisplayList >\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={JSON.stringify(rn.info)} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />)}\n    {extra}\n  </FieldDisplayList>\n}\n\nfunction MainStatsCards() {\n  const { characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const specialNode = data.get(input.special)\n  const charEle = characterSheet.elementKey\n  const isMelee = characterSheet.isMelee()\n\n  const otherStatReadNodes = useMemo(() => {\n    const nodes = otherStatKeys.filter(k => {\n      if (k.includes(charEle)) return false\n      if (isMelee && k.includes(\"physical\")) return true\n      return true\n    }).map(k => input.total[k])\n\n    return nodes.filter(n => !!data.get(n).value)\n  }, [data, charEle, isMelee])\n\n\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\n\n  return <CardLight><CardContent>\n    <Grid container columns={cols} spacing={1}>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Main Stats\">\n          <StatDisplayContent nodes={mainReadNodes}\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.icon} {specialNode.info.name}</ColorText></span>\n              <span >{nodeVStr(specialNode)}</span>\n            </ListItem>}\n          />\n        </StatDisplayCard>\n      </Grid>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Other Stats\">\n          <StatDisplayContent nodes={otherStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\n        <StatDisplayCard title=\"Misc Stats\">\n          <StatDisplayContent nodes={miscStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>}\n    </Grid>\n  </CardContent></CardLight>\n}\nfunction StatDisplayCard({ title, children }) {\n  return <CardDark>\n    <CardContent sx={{ py: 1 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle1\">{title}</Typography>\n      </Box>\n    </CardContent>\n    {children}\n  </CardDark>\n}\n","import { createContext } from \"react\";\n\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\n","import { ArtSetExclusion } from \"../../../../Database/DataManagers/BuildSettingData\";\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\nimport { allOperations, constantFold, OptNode } from \"../../../../Formula/optimization\";\nimport { ConstantNode } from \"../../../../Formula/type\";\nimport { constant, customRead, max, min, threshold } from \"../../../../Formula/utils\";\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\n\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\nexport function pruneAll(nodes: OptNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: OptNode[], arts: ArtifactsBySlot } {\n  let should = forced\n  /** If `key` makes progress, all operations in `value` should be performed */\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\n    pruneOrder: { pruneNodeRange: true },\n    pruneArtRange: { pruneNodeRange: true },\n    pruneNodeRange: { reaffine: true },\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\n  }\n  let count = 0\n  while (Object.values(should).some(x => x) && count++ < 20) {\n    if (should.pruneOrder) {\n      delete should.pruneOrder\n      const newArts = pruneOrder(arts, numTop, exclusion)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneOrder }\n      }\n    }\n    if (should.pruneArtRange) {\n      delete should.pruneArtRange\n      const newArts = pruneArtRange(nodes, arts, minimum)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneArtRange }\n      }\n    }\n    if (should.pruneNodeRange) {\n      delete should.pruneNodeRange\n      const newNodes = pruneNodeRange(nodes, arts)\n      if (nodes !== newNodes) {\n        nodes = newNodes\n        should = { ...should, ...deps.pruneNodeRange }\n      }\n    }\n    if (should.reaffine) {\n      delete should.reaffine\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\n      if (nodes !== newNodes || arts !== newArts) {\n        nodes = newNodes\n        arts = newArts\n        should = { ...should, ...deps.reaffine }\n      }\n    }\n  }\n  return { nodes, arts }\n}\n\nexport function pruneExclusion(nodes: OptNode[], exclusion: ArtSetExclusion): OptNode[] {\n  const maxValues: Dict<keyof typeof exclusion, number> = {}\n  for (const [key, e] of Object.entries(exclusion)) {\n    if (!e.includes(4)) continue\n    maxValues[key] = e.includes(2) ? 1 : 3\n  }\n  return mapFormulas(nodes, f => f, f => {\n    if (f.operation !== \"threshold\") return f\n\n    const [v, t, pass, fail] = f.operands\n    if (v.operation === \"read\" && t.operation === \"const\") {\n      const key = v.path[v.path.length - 1], thres = t.value\n      if (key in maxValues) {\n        const max: number = maxValues[key]\n        if (max < thres) return fail\n        if (thres === 2 && exclusion[key]!.includes(2))\n          return threshold(v, 4, pass, fail)\n      }\n    }\n    return f\n  })\n}\n\nfunction reaffine(nodes: OptNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: OptNode[], arts: ArtifactsBySlot } {\n  const affineNodes = new Set<OptNode>(), topLevelAffine = new Set<OptNode>()\n\n  function visit(node: OptNode, isAffine: boolean) {\n    if (isAffine) affineNodes.add(node)\n    else node.operands.forEach(op => affineNodes.has(op) && topLevelAffine.add(op))\n  }\n\n  const dynKeys = new Set<string>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const { operation } = f\n    switch (operation) {\n      case \"read\":\n        dynKeys.add(f.path[1])\n        visit(f, true)\n        break\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\n      case \"mul\": {\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\n        break\n      }\n      case \"const\": visit(f, true); break\n      case \"res\": case \"threshold\": case \"sum_frac\":\n      case \"max\": case \"min\": visit(f, false); break\n      default: assertUnreachable(operation)\n    }\n  })\n\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\n    Object.keys(arts.base).length === dynKeys.size)\n    return { nodes, arts }\n\n  let current = -1\n  function nextDynKey(): string {\n    while (dynKeys.has(`${++current}`));\n    return `${current}`\n  }\n\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\n  const affineMap = new Map(affine.map(node => [node,\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\n      ? node\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\n  nodes = mapFormulas(nodes, f => affineMap.get(f) ?? f, f => f)\n\n  function reaffineArt(stat: DynStat): DynStat {\n    const values = constantFold([...affineMap.keys()], {\n      dyn: objectMap(stat, (value) => constant(value))\n    } as any, _ => true)\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\n  }\n  const result = {\n    nodes, arts: {\n      base: reaffineArt(arts.base),\n      values: objectKeyMap(allSlotKeys, slot =>\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\n    }\n  }\n  const offsets = Object.entries(reaffineArt({}))\n  for (const arts of Object.values(result.arts.values))\n    for (const { values } of arts)\n      for (const [key, baseValue] of offsets)\n        values[key] -= baseValue\n  return result\n}\n/** Remove artifacts that cannot be in top `numTop` builds */\nfunction pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\n  let progress = false\n  /**\n   * Note:\n   * This function assumes that every base (reaffined) stats are monotonically increasing. That is, artifacts\n   * with higher stats are better. This remains true as long as the main and substats are in increasing. Set\n   * effects that decrease enemy resistance (which is monotonically decreasing) does not violate this assumption\n   * as set effects are not handled here.\n   */\n  const allowRainbow = !exclusion.rainbow?.length, keys = Object.keys(arts.base)\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\n  const values = objectKeyMap(allSlotKeys, slot => {\n    const list = arts.values[slot]\n    const newList = list.filter(art => {\n      let count = 0\n      return list.every(other => {\n        const otherBetterEqual = keys.every(k => (other.values[k] ?? 0) >= (art.values[k] ?? 0))\n        const otherMaybeBetter = keys.some(k => (other.values[k] ?? 0) > (art.values[k] ?? 0))\n        const otherBetter = otherBetterEqual && (otherMaybeBetter || other.id > art.id)\n        const canSwitch = (allowRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set\n        if (otherBetter && canSwitch) count++\n        return count < numTop\n      })\n    })\n    if (newList.length !== list.length) progress = true\n    return newList\n  })\n  return progress ? { base: arts.base, values } : arts\n}\n/** Remove artifacts that cannot reach `minimum` in any build */\nfunction pruneArtRange(nodes: OptNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const wrap = { arts }\n  while (true) {\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\n\n    let progress = false\n    const values = objectKeyMap(allSlotKeys, slot => {\n      const result = wrap.arts.values[slot].filter(art => {\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\n        const newRange = computeNodeRange(nodes, read)\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\n      })\n      if (result.length !== wrap.arts.values[slot].length)\n        progress = true\n      return result\n    })\n    if (!progress) break\n    wrap.arts = { base: wrap.arts.base, values }\n  }\n  return wrap.arts\n}\nfunction pruneNodeRange(nodes: OptNode[], arts: ArtifactsBySlot): OptNode[] {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n  const nodeRange = computeNodeRange(nodes, reads)\n\n  return mapFormulas(nodes, f => {\n    {\n      const { min, max } = nodeRange.get(f)!\n      if (min === max) return constant(min)\n    }\n    const { operation } = f\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\n    switch (operation) {\n      case \"threshold\": {\n        const [value, threshold, pass, fail] = operandRanges\n        if (value.min >= threshold.max) return f.operands[2]\n        else if (value.max < threshold.min) return f.operands[3]\n        if (pass.max === pass.min &&\n          fail.max === fail.min &&\n          pass.min === fail.min && isFinite(pass.min))\n          return constant(pass.max)\n        break\n      }\n      case \"min\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\n        })\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\n        break\n      }\n      case \"max\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every(op2 => op1.max >= op2.min)\n        })\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\n        break\n      }\n    }\n    return f\n  }, f => f)\n}\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\n  const result: DynMinMax = {}\n  ranges.forEach(range => {\n    Object.entries(range).forEach(([key, value]) => {\n      if (result[key]) {\n        result[key].min += value.min\n        result[key].max += value.max\n      } else result[key] = { ...value }\n    })\n  })\n  return result\n}\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\n  const result: DynMinMax = {}\n  if (arts.length) {\n    Object.keys(arts[0].values)\n      .filter(key => arts.every(art => art.values[key]))\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\n    arts.forEach(({ values }) => {\n      for (const [key, value] of Object.entries(values)) {\n        if (!result[key]) result[key] = { min: 0, max: value }\n        else {\n          if (result[key].max < value) result[key].max = value\n          if (result[key].min > value) result[key].min = value\n        }\n      }\n    })\n  }\n  return result\n}\nexport function computeFullArtRange(arts: ArtifactsBySlot): DynMinMax {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  return addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n}\nexport function computeNodeRange(nodes: OptNode[], reads: DynMinMax): Map<OptNode, MinMax> {\n  const range = new Map<OptNode, MinMax>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const { operation } = f\n    const operands = f.operands.map(op => range.get(op)!)\n    let current: MinMax\n    switch (operation) {\n      case \"read\":\n        if (f.path[0] !== \"dyn\")\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\n        break\n      case \"const\": current = computeMinMax([f.value]); break\n      case \"add\": case \"min\": case \"max\":\n        current = {\n          min: allOperations[operation](operands.map(x => x.min)),\n          max: allOperations[operation](operands.map(x => x.max)),\n        }; break\n      case \"res\": current = {\n        min: allOperations[operation]([operands[0].max]),\n        max: allOperations[operation]([operands[0].min]),\n      }; break\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\n        accu.min * current.min, accu.min * current.max,\n        accu.max * current.min, accu.max * current.max,\n      ])); break\n      case \"threshold\":\n        if (operands[0].min >= operands[1].max) current = operands[2]\n        else if (operands[0].max < operands[1].min) current = operands[3]\n        else current = computeMinMax([], [operands[2], operands[3]])\n        break\n      case \"sum_frac\": {\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\n        if (sum.min <= 0 && sum.max >= 0)\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\n        else\n          // TODO: Check this\n          current = computeMinMax([\n            x.min / sum.min, x.min / sum.max,\n            x.max / sum.min, x.max / sum.max\n          ])\n        break\n      }\n      default: assertUnreachable(operation)\n    }\n    range.set(f, current)\n  })\n  return range\n}\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\n  return { min, max }\n}\n\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\n\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\n}\nexport function mergePlot(plots: PlotData[]): PlotData {\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\n  while (keys.size > maxCount) {\n    scale *= reductionScaling\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\n  }\n  const result: PlotData = {}\n  for (const plot of plots)\n    for (const build of Object.values(plot)) {\n      const x = Math.round(build.plot! / scale) * scale\n      if (!result[x] || result[x]!.value < build.value)\n        result[x] = build\n    }\n  return result\n}\n\nexport function countBuilds(arts: ArtifactsBySlot): number {\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\n}\n\n\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\n  filter_loop: for (const filter of filters) {\n    for (const [slot, f] of Object.entries(filter)) {\n      const available = artSets[slot]!\n      switch (f.kind) {\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\n        case \"id\": break\n      }\n    }\n    yield filter\n  }\n}\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\n  return new Set(exclusion?.includes(2)\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\n}\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\n  /**\n   * This generation algorithm is separated into two parts:\n   * - \"Shape\" generation\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\n   * - Shape filling\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\n   */\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\n  let shapes: number[][] = []\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\n    if (current.length === 5) {\n      if (allowedRainbows.has(rainbows.length))\n        shapes.push(current)\n      return\n    }\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\n  }\n  populateShapes([0], new Set([0]), [0])\n  function indexOfShape(shape: number[], replacing: number) {\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\n      return undefined\n    shape = [...shape]\n    shape[replacing] = 5\n    return shape.reduce((a, b) => a * 6 + b, 0)\n  }\n  for (let replacing = 4; replacing >= 0; replacing--) {\n    const required: Map<number, number> = new Map()\n    for (const shape of shapes) {\n      const id = indexOfShape(shape, replacing)\n      if (id === undefined) continue\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\n    }\n    for (const [id, remaining] of required.entries()) {\n      if (remaining === 0) {\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\n        shape[replacing] = 5\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\n        shapes.push(shape)\n      }\n    }\n  }\n\n  // Shapes are now calculated and merged, proceed to fill in the sets\n\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\n\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\n\n  function* check(shape: number[]) {\n    const used: Set<ArtifactSetKey> = new Set()\n    let groupped: number[][] = [], rainbows: number[] = []\n    for (const i of shape) {\n      groupped.push([])\n      if (i === 5) rainbows.push(groupped.length - 1)\n      else groupped[i].push(groupped.length - 1)\n    }\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\n    let usableRainbows = rainbows.length\n\n    // Inception.. because js doesn't like functions inside a for-loop\n    function* check(i: number) {\n      if (i === groupped.length)\n        return yield* check_free(0)\n\n      for (const set of artSets) {\n        if (used.has(set)) continue\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\n        let requiredRainbows = 0\n\n        if (allowedSet && !allowedSet.has(length)) {\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\n        }\n\n        used.add(set)\n        counts[set] = groupped[i].length\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\n        usableRainbows -= requiredRainbows\n\n        yield* check(i + 1)\n\n        usableRainbows += requiredRainbows\n        counts[set] = 0\n        used.delete(set)\n      }\n    }\n    // We separate filling rainbow slots from groupped slots because it has an entirely\n    // different set of rules regarding what can be filled and what states to be kept.\n    function* check_free(i: number) {\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\n      let required = 0\n      for (const set of artSets) {\n        const allowedSet = allowedCounts[set], count = counts[set]\n        if (!allowedSet) continue\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\n        else if (!allowedSet.has(count)) {\n          required += [...allowedSet].find(x => x > count)! - count\n          missing.push(set)\n        }\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\n      }\n      if (required > remaining) return\n      if (i === rainbows.length) {\n        yield { ...result }\n        return\n      }\n      if (required === remaining) {\n        for (const set of missing) {\n          counts[set]++\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n          yield* check_free(i + 1)\n          counts[set]--\n        }\n        return\n      }\n      for (const set of [...isolated, ...missing]) {\n        counts[set]++\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n        yield* check_free(i + 1)\n        counts[set]--\n      }\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\n      yield* check_free(i + 1)\n    }\n    yield* check(0)\n  }\n  for (const shape of shapes) yield* check(shape)\n}\n\nexport type RequestFilter = StrictDict<SlotKey,\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\n  { kind: \"id\", ids: Set<string> }\n>\n\nexport type DynStat = { [key in string]: number }\nexport type ArtifactBuildData = {\n  id: string\n  set?: ArtifactSetKey\n  values: DynStat\n}\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\n\nexport type PlotData = Dict<number, Build>\nexport interface Build {\n  value: number\n  plot?: number\n  artifactIds: string[]\n}\n\nexport type DynMinMax = { [key in string]: MinMax }\nexport type MinMax = { min: number, max: number }\n","import { Box } from \"@mui/material\"\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\nimport DocumentDisplay from \"../DocumentDisplay\"\n\ntype Data = {\n  setKey: ArtifactSetKey,\n  setNumKey: SetNum,\n  hideHeader?: boolean,\n  conditionalsOnly?: boolean\n}\n\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\n  if (!sheet) return null\n\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\n  return <Box display=\"flex\" flexDirection=\"column\">\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\n  </Box>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/DataManagers/BuildSettingData\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildSetting(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildSettings.follow(characterKey, (k, r, v) => r === \"update\" && setBuildSetting(v)),\n    [characterKey, setBuildSetting, database])\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\n\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\n}\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBox, CheckBoxOutlineBlank, Replay, Settings } from '@mui/icons-material';\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport CloseButton from '../../../../../Components/CloseButton';\nimport ColorText from '../../../../../Components/ColoredText';\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\nimport { Translate } from '../../../../../Components/Translate';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { UIData } from '../../../../../Formula/uiData';\nimport { constant } from '../../../../../Formula/utils';\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\nimport useBuildSetting from '../useBuildSetting';\n\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\n  const dataContext = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const [open, setOpen] = useState(false)\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\n  const onClose = useCallback(() => setOpen(false), [setOpen])\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\n\n  const artKeysByRarity = useMemo(() => artifactSheets\n    ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n      .reverse().flatMap(([, sets]) => sets)\n      .filter(key => !key.includes(\"Prayers\"))\n    : [], [artifactSheets])\n  const { artKeys, artSlotCount } = useMemo(() => {\n    const artSlotCount = objectKeyMap(artKeysByRarity, _ => objectKeyMap(allSlotKeys, _ => 0))\n    database.arts.values.forEach(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\n    const artKeys = [...artKeysByRarity].sort((a, b) =>\n      +(getNumSlots(artSlotCount[a]) < 2) - +(getNumSlots(artSlotCount[b]) < 2))\n    return dbDirty && { artKeys, artSlotCount }\n  }, [dbDirty, database, artKeysByRarity])\n\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\n\n  const { allow2, allow4 } = useMemo(() => ({\n    allow2: artKeysByRarity.filter(k => !artSetExclusion[k]?.includes(2)).length,\n    allow4: artKeysByRarity.filter(k => !artSetExclusion[k]?.includes(4)).length,\n  }), [artKeysByRarity, artSetExclusion])\n  const exclude2 = artKeysByRarity.length - allow2, exclude4 = artKeysByRarity.length - allow4\n  const artifactCondCount = useMemo(() =>\n    (Object.keys(conditional)).filter(k =>\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\n    , [conditional])\n  const fakeDataContextObj = useMemo(() => ({\n    ...dataContext,\n    data: new UIData({ ...dataContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\n  }), [dataContext])\n  const resetArtConds = useCallback(() => {\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\n    characterDispatch({ conditional: tconditional })\n  }, [conditional, characterDispatch]);\n  const setAllExclusion = useCallback(\n    (setnum: number, exclude = true) => {\n      const artSetExclusion_ = deepClone(artSetExclusion)\n      artKeysByRarity.forEach(k => {\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\n      })\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\n    },\n    [artKeysByRarity, artSetExclusion, buildSettingDispatch],\n  )\n\n  return <>\n    <CardLight sx={{ display: \"flex\" }}>\n      <CardContent sx={{ flexGrow: 1 }} >\n        <Typography>\n          <strong>{t`artSetConfig.title`}</strong>\n        </Typography>\n        <Stack spacing={1}>\n          <Typography>{t`artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.enabled\")}</SqBadge></Typography>\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n          <Typography>{t`artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n        </Stack>\n\n      </CardContent>\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\n        <Settings />\n      </Button>\n    </CardLight>\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\" >{t`artSetConfig.title`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent >\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Box display=\"flex\" gap={1}>\n            <Typography><strong>{t`artSetConfig.modal.setCond.title`}</strong></Typography>\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.selected\")}</SqBadge></Typography>\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`artSetConfig.modal.setCond.reset`}</Button>\n          </Box>\n          <Typography>{t`artSetConfig.modal.setCond.text`}</Typography>\n        </CardContent></CardLight>\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Typography sx={{ flexGrow: 1 }}><strong>\n            <Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\n          </strong></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\n        </CardContent></CardLight>\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <CardLight>\n              <CardContent>\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.2rainbow`}</Button>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.4rainbow`}</Button>\n                </Box>\n              </CardContent>\n            </CardLight>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\n          {artKeys.map(setKey => {\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets(setKey)} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\n          })}\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onClose} />\n      </CardContent>\n    </CardDark></ModalWrapper >}\n  </>\n}\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\n  return <CardLight>\n    <CardContent>\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`artSetConfig.allowAll${setNum}set`)}</Button>\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`artSetConfig.excludeAll${setNum}set`)}</Button>\n      </Box>\n    </CardContent>\n  </CardLight>\n}\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\n  const { t } = useTranslation(\"sheet\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\n  const allow4 = !setExclusionSet.includes(4)\n  const slots = useMemo(() => getNumSlots(slotCount), [slotCount])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (!allow4) return []\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [sheet.setEffects, allow4])\n  const exclude2 = setExclusionSet.includes(2)\n  const exclude4 = setExclusionSet.includes(4)\n  return <Grid item key={setKey} xs={1}>\n    <CardLight sx={{ height: \"100%\", opacity: slots < 2 ? \"50%\" : undefined }}>\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\n          <Box display=\"flex\" gap={1}>\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\n            <InfoTooltip title={<Box>\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\n              </Box>\n            </Box>} />\n          </Box>\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\n        </Box>\n      </Box>\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\n        <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>\n        <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>\n      </ButtonGroup>\n\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n          {set4CondNums.map(setNumKey =>\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n          )}\n        </CardContent>\n      </DataContext.Provider>}\n    </CardLight>\n  </Grid >\n}\n\nfunction getNumSlots(slotCount: Record<string, number>): number {\n  return Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0)\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\n\nconst levels = [0, 4, 8, 12, 16, 20] as const\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\n    title={mainStatAssumptionLevel ? t(\"mainStat.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"mainStat.assumptionLvl.no\")}>\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"mainStat.assumptionLvl.lvl\", { lvl }) : t(\"mainStat.assumptionLvl.no\")}</MenuItem>)}\n  </DropdownButton>\n}\n","import { CardContent, Divider, Typography } from '@mui/material';\nimport { useContext } from 'react';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nexport default function BonusStatsCard() {\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const bonusStatsKeys = Object.keys(bonusStats)\n  if (!bonusStatsKeys.length) return null\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\n  return <CardLight>\n    <CardContent>\n      <Typography>Bonus Stats</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      {nodes.map(n => <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} />)}\n    </CardContent>\n  </CardLight>\n}\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\n\nexport const warningBuildNumber = 10000000\nexport type BuildStatus = {\n  type: \"active\" | \"inactive\"\n  tested: number      // tested, including `failed`\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\n  skipped: number\n  total: number\n  startTime?: number\n  finishTime?: number\n}\n\nconst Monospace = styled(\"strong\")({\n  fontFamily: \"monospace\"\n})\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 10,\n  borderRadius: 5,\n}));\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\n  const hasTotal = isFinite(total)\n\n  const generatingBuilds = type !== \"inactive\"\n  const unskipped = total - skipped\n\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\n\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\n\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\n  let title = \"\" as ReactNode\n  let subtitle = \"\" as ReactNode\n  let progress = undefined as undefined | number\n\n  if (generatingBuilds) {\n    progress = tested * 100 / (unskipped)\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\n  } else if (tested + skipped) {\n    progress = 100\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Total duration: {durationString}</Typography>\n  } else {\n    return null\n  }\n\n  return <Alert severity={color} variant=\"filled\" sx={{\n    \"& .MuiAlert-message\": {\n      flexGrow: 1\n    }\n  }}>\n    {title}\n    {subtitle}\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\n      {hasTotal && <Grid item>\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\n      </Grid>}\n      <Grid item flexGrow={1} >\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\n      </Grid>\n    </Grid>}\n  </Alert>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\nimport { useCallback, useContext } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport Artifact from \"../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\nimport useArtifact from \"../../ReactHooks/useArtifact\";\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { ICachedSubstat } from \"../../Types/artifact\";\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\nimport { clamp } from \"../../Util/Util\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ColorText from \"../ColoredText\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport { StatColoredWithUnit } from \"../StatDisplay\";\nimport StatIcon from \"../StatIcon\";\nimport ArtifactTooltip from \"./ArtifactTooltip\";\n\ntype Data = {\n  artifactId?: string,\n  slotKey: SlotKey,\n  mainStatAssumptionLevel?: number,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType\n}\n\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\n  const art = useArtifact(artifactId)\n  const { database } = useContext(DatabaseContext)\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\n  const theme = useTheme()\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\n  </BGComponent>\n\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\">\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\n        <ArtifactTooltip art={art}>\n          <Box\n            component=\"img\"\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\n          />\n        </ArtifactTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon charKey={location && database.chars.LocationToCharacterKey(location)} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        {/* mainstats */}\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography><StatColoredWithUnit statKey={mainStatKey} /></Typography>} disableInteractive>\n              <span>{StatIcon[mainStatKey]}</span>\n            </BootstrapTooltip>\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\n          </Typography>} />\n      </Box>\n      {/* substats */}\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\n  if (!stat.value) return null\n  const numRolls = stat.rolls?.length ?? 0\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\n  const unit = KeyMap.unit(stat.key)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && <StatColoredWithUnit statKey={stat.key} />}</Typography>} disableInteractive>\n        <span>{StatIcon[stat.key]}</span>\n      </BootstrapTooltip>\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ charKey }: { charKey: CharacterKey | \"\" }) {\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(charKey, gender), [charKey, gender])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} size={2.5} sx={{ marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { Masonry } from \"@mui/lab\"\nimport { Divider, ListItem, Box } from \"@mui/material\"\nimport { useContext, useMemo } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\nimport { DatabaseContext } from \"../../Database/Database\"\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\nimport { DisplaySub } from \"../../Formula/type\"\nimport { NodeDisplay } from \"../../Formula/uiData\"\nimport { customRead } from \"../../Formula/utils\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { objectMap } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport SqBadge from \"../SqBadge\"\n\nexport default function StatDisplayComponent() {\n  const { data } = useContext(DataContext)\n  const sections = useMemo(() =>\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\n    [data])\n  return <Box sx={{ mr: -1, mb: -1 }}>\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\n      {sections.map(([key, Nodes]) =>\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Masonry >\n  </Box>\n}\n\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const optimizationTarget = useContext(OptimizationTargetContext)\n  const { data, oldData } = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const header = usePromise(() => getDisplayHeader(data, sectionKey, database), [data, sectionKey])\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\n  if (!header) return <CardDark></CardDark>\n\n  const { title, icon, action } = header\n  return <CardDark >\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <FieldDisplayList sx={{ m: 0 }}>\n      {Object.entries(displayNs).map(([nodeKey, n]) =>\n        <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\n          emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\n        />)}\n    </FieldDisplayList>\n  </CardDark>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport { input } from \"../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport useWeapon from \"../../ReactHooks/useWeapon\";\nimport { LocationKey } from \"../../Types/consts\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\n\ntype Data = {\n  weaponId?: string,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType,\n}\n\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\n  const { refinement, location } = weapon\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\n        <WeaponNameTooltip sheet={weaponSheet}>\n          <Box\n            component=\"img\"\n            src={weaponSheet.getImg(weapon.ascension)}\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\n          />\n        </WeaponNameTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\n        </Box>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\n        <WeaponStat node={UIData.get(input.weapon.main)} />\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  if (!node.info.name) return null\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.name}</Typography>} disableInteractive>\n        <span>{node.info.icon}</span>\n      </BootstrapTooltip>\n      <span>{nodeVStr(node)}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }: { location: LocationKey }) {\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(location ? database.chars.LocationToCharacterKey(location) : \"\", gender), [location, gender])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} size={2.5} sx={{ marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { Box, Typography } from \"@mui/material\"\nimport { useMemo } from \"react\"\nimport ArtifactSetTooltip from \"../../../../../Components/Artifact/ArtifactSetTooltip\"\nimport { artifactSlotIcon } from \"../../../../../Components/Artifact/SlotNameWIthIcon\"\nimport SqBadge from \"../../../../../Components/SqBadge\"\nimport { ArtifactSheet } from \"../../../../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../../../../ReactHooks/usePromise\"\nimport { ICachedArtifact } from \"../../../../../Types/artifact\"\nimport { ArtifactSetKey, SlotKey } from \"../../../../../Types/consts\"\n\ntype ArtifactSetBadgesProps = {\n  artifacts: ICachedArtifact[],\n  currentlyEquipped?: boolean\n}\nexport function ArtifactSetBadges({ artifacts, currentlyEquipped = false }: ArtifactSetBadgesProps) {\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = useMemo(() => artifacts\n    .filter(arti => arti)\n    .reduce((acc, curr) => {\n      acc[curr.setKey] ? acc[curr.setKey].push(curr.slotKey) : acc[curr.setKey] = [curr.slotKey]\n      return acc\n    }, {}),\n    [artifacts]\n  )\n  return <>{Object.entries(setToSlots)\n    .sort(([_k1, slotarr1], [_k2, slotarr2]) => slotarr2.length - slotarr1.length)\n    .map(([key, slotarr]) =>\n      <ArtifactSetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\n    )\n  }</>\n\n}\nfunction ArtifactSetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: SlotKey[] }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n  if (!artifactSheet) return null\n  const numInSet = slotarr.length\n  const setActive = Object.keys(artifactSheet.setEffects).map((setKey) => parseInt(setKey)).filter(setNum => setNum <= numInSet)\n  return <Box>\n    <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={numInSet} >\n      <SqBadge sx={{ height: \"100%\" }} color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\n        {setActive.map(n => <SqBadge sx={{ ml: 0.5 }} key={n} color=\"success\">{n}</SqBadge>)}\n      </Typography></SqBadge>\n    </ArtifactSetTooltip>\n  </Box>\n}\n","import { Checkroom, ChevronRight } from '@mui/icons-material';\nimport { Button, CardContent, Grid, Skeleton, Typography, Box } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { uiInput as input } from '../../../../../Formula';\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\nimport { ICachedArtifact } from '../../../../../Types/artifact';\nimport { allSlotKeys, charKeyToLocCharKey } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\nimport { ArtifactSetBadges } from './ArtifactSetBadges';\n\ntype NewOld = {\n  newId: string,\n  oldId?: string\n}\n\ntype BuildDisplayItemProps = {\n  label?: Displayable,\n  compareBuild: boolean,\n  disabled?: boolean,\n  extraButtonsRight?: JSX.Element,\n  extraButtonsLeft?: JSX.Element,\n}\n//for displaying each artifact build\nexport default function BuildDisplayItem({ label, compareBuild, extraButtonsRight, extraButtonsLeft, disabled }: BuildDisplayItemProps) {\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const dataContext = useContext(DataContext)\n\n  const { data, oldData } = dataContext\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\n\n  const equipBuild = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\n    allSlotKeys.forEach(s => {\n      const aid = data.get(input.art[s].id).value\n      if (aid) database.arts.set(aid, { location: charKeyToLocCharKey(characterKey) })\n    })\n    database.weapons.set(data.get(input.weapon.id).value!, { location: charKeyToLocCharKey(characterKey) })\n  }, [characterKey, data, database])\n\n  const statProviderContext = useMemo(() => {\n    const dataContext_ = { ...dataContext }\n    if (!compareBuild) dataContext_.oldData = undefined\n    return dataContext_\n  }, [dataContext, compareBuild])\n\n  const artifactIdsBySlot = useMemo(() => Object.fromEntries(allSlotKeys.map(slotKey => [\n    slotKey,\n    data.get(input.art[slotKey].id).value\n  ])), [data])\n  const artifacts = useMemo(() => artifactIdsBySlot && Object.values(artifactIdsBySlot)\n    .map((artiId: string) => database.arts.get(artiId))\n    .filter(arti => arti) as ICachedArtifact[],\n    [artifactIdsBySlot, database.arts]\n  )\n\n  // Memoize Arts because of its dynamic onClick\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\n    <Grid item xs={1} key={slotKey} >\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={artifactIdsBySlot[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\n        const oldId = equippedArtifacts[slotKey]\n        const newId = artifactIdsBySlot[slotKey]!\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\n      }} />\n    </Grid>), [setNewOld, equippedArtifacts, mainStatAssumptionLevel, artifactIdsBySlot])\n\n  if (!oldData) return null\n  const currentlyEquipped = allSlotKeys.every(slotKey => artifactIdsBySlot[slotKey] === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\n\n  return <CardLight>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\n      <CardContent>\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\n          {label !== undefined && <SqBadge color=\"info\"><Typography><strong>{label}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\n          <ArtifactSetBadges artifacts={artifacts} currentlyEquipped={currentlyEquipped} />\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\n          </Box>\n          {extraButtonsLeft}\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped} startIcon={<Checkroom />}>Equip Build</Button>\n          {extraButtonsRight}\n        </Box>\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\n          <Grid item xs={1}>\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\n          </Grid>\n          {artNanos}\n        </Grid>\n        <DataContext.Provider value={statProviderContext}>\n          <StatDisplayComponent />\n        </DataContext.Provider>\n      </CardContent>\n    </Suspense>\n  </CardLight>\n}\n\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const onEquip = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\n    database.arts.set(newId, { location: charKeyToLocCharKey(characterKey) })\n    onClose()\n  }, [newId, database, characterKey, onClose])\n\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\n    <CardDark>\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip editorProps={{ disableSet: true, disableSlot: true }} /></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip editorProps={{ disableSet: true, disableSlot: true }} /></Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { IBuildResult } from \"../../../../Database/DataManagers/BuildResult\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildResult(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildResult, setBuildResult] = useState(() => database.buildResult.get(characterKey))\n  useEffect(() => setBuildResult(database.buildResult.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildResult.follow(characterKey, (k, r, v) => r === \"update\" && setBuildResult(v)),\n    [characterKey, setBuildResult, database])\n  const buildResultDispatch = useCallback((action: Partial<IBuildResult>) => characterKey && database.buildResult.set(characterKey, action), [characterKey, database],)\n\n  return { buildResult, buildResultDispatch }\n}\n","import { DotProps } from \"recharts\"\nimport EnhancedPoint from \"./EnhancedPoint\"\n\ntype CustomShapeType = \"circle\" | \"diamond\" | \"square\"\ntype CustomDotProps = DotProps & {\n  selectedPoint: EnhancedPoint | undefined\n  payload?: EnhancedPoint\n  radiusSelected?: number\n  radiusUnselected?: number\n  colorSelected?: string\n  colorUnselected: string\n  shape?: CustomShapeType\n}\nexport default function CustomDot({ cx, cy, payload, selectedPoint, radiusSelected = 6, radiusUnselected = 3, colorSelected = \"red\", colorUnselected, shape = \"circle\" }: CustomDotProps) {\n  if (!cx || !cy || !payload) {\n    return null\n  }\n\n  const isSelected = selectedPoint && selectedPoint.x === payload.x && selectedPoint.y === payload.y\n\n  return (\n    <g\n      className=\"custom-dot\"\n      data-chart-x={cx}\n      data-chart-y={cy}\n      data-x-value={payload.x}\n      data-y-value={payload.y}\n      data-radius={isSelected ? radiusUnselected : radiusSelected}\n    >\n      {!isSelected\n        ? <CustomShape id=\"customShapeUnselected\" shape={shape} cx={cx} cy={cy} r={radiusUnselected} fill={colorUnselected} />\n        : <>\n          <CustomShape id=\"customShapeSelected\" shape={shape} cx={cx} cy={cy} r={radiusSelected / 2} fill={colorSelected} />\n          <CustomShape id=\"customShapeBorder\" shape={shape} cx={cx} cy={cy} r={radiusSelected} fill=\"none\" stroke={colorSelected} />\n        </>\n      }\n    </g>\n  )\n}\nfunction CustomShape({ shape, id, cx, cy, r, fill, stroke}: { shape: CustomShapeType, id?: string, cx: number, cy: number, r: number, fill?: string, stroke?: string }) {\n  switch(shape) {\n    case \"circle\":\n      return <circle id={id} cx={cx} cy={cy} r={r} fill={fill} stroke={stroke} />\n    case \"square\":\n      return <rect id={id} x={cx-r} y={cy-r} width={r*2} height={r*2} fill={fill} stroke={stroke} />\n    case \"diamond\":\n      return <polygon id={id} points={`${cx},${cy+r*2.5} ${cx+r*1.5},${cy} ${cx},${cy-r*2.5} ${cx-r*1.5},${cy}`} fill={fill} stroke={stroke} />\n  }\n}\n","import { Button, CardContent, ClickAwayListener, Grid, Skeleton, Stack, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { TooltipProps } from \"recharts\"\nimport ArtifactCardPico from \"../../../../../../Components/Artifact/ArtifactCardPico\"\nimport BootstrapTooltip from \"../../../../../../Components/BootstrapTooltip\"\nimport CardDark from \"../../../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../../../Components/CloseButton\"\nimport SqBadge from \"../../../../../../Components/SqBadge\"\nimport { CharacterContext } from \"../../../../../../Context/CharacterContext\"\nimport { DataContext } from \"../../../../../../Context/DataContext\"\nimport { GraphContext } from \"../../../../../../Context/GraphContext\"\nimport { DatabaseContext } from \"../../../../../../Database/Database\"\nimport { input } from \"../../../../../../Formula\"\nimport { Unit, valueString } from \"../../../../../../KeyMap\"\nimport { ICachedArtifact } from \"../../../../../../Types/artifact\"\nimport { allSlotKeys } from \"../../../../../../Types/consts\"\nimport useBuildResult from \"../../useBuildResult\"\nimport { ArtifactSetBadges } from \"../ArtifactSetBadges\"\nimport EnhancedPoint from \"./EnhancedPoint\"\n\ntype CustomTooltipProps = TooltipProps<number, string> & {\n  xLabel: Displayable\n  xUnit: Unit | undefined\n  yLabel: Displayable\n  yUnit: Unit | undefined\n  selectedPoint: EnhancedPoint | undefined\n  setSelectedPoint: (pt: EnhancedPoint | undefined) => void\n  addBuildToList: (build: string[]) => void\n}\nexport default function CustomTooltip({ xLabel, xUnit, yLabel, yUnit, selectedPoint, setSelectedPoint, addBuildToList, ...tooltipProps }: CustomTooltipProps) {\n  const { database } = useContext(DatabaseContext)\n  const { data } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { graphBuilds } = useContext(GraphContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildResult: { builds } } = useBuildResult(characterKey)\n\n  const canAddBuild = useMemo(() => ![...builds, ...(graphBuilds ?? [])].some(artiIds =>\n    artiIds.every(id => selectedPoint?.artifactIds.includes(id))\n  ), [builds, graphBuilds, selectedPoint])\n\n  const artifactsBySlot: { [slot: string]: ICachedArtifact } = useMemo(() =>\n    selectedPoint && selectedPoint.artifactIds && Object.fromEntries(selectedPoint.artifactIds\n      .map(id => {\n        const artiObj = database.arts.get(id)\n        return [artiObj?.slotKey, artiObj]\n      })\n      .filter(arti => arti)\n    ),\n    [database.arts, selectedPoint]\n  )\n  const clickAwayHandler = useCallback((e) => {\n    if (!(e.target.id.includes(\"customShape\") || e.target.id.includes(\"chartContainer\"))) {\n      setSelectedPoint(undefined)\n    }\n  }, [setSelectedPoint])\n\n  const currentlyEquipped = artifactsBySlot && allSlotKeys.every(slotKey => artifactsBySlot[slotKey]?.id === data.get(input.art[slotKey].id).value)\n\n  if (tooltipProps.active && selectedPoint) {\n    return <ClickAwayListener onClickAway={clickAwayHandler}>\n      <CardDark sx={{ minWidth: \"400px\", maxWidth: \"400px\" }} onClick={(e) => e.stopPropagation()}>\n        <CardContent>\n          <Stack gap={1}>\n            <Stack direction=\"row\" alignItems=\"start\" gap={1}>\n              <Stack spacing={0.5} flexGrow={99}>\n                {currentlyEquipped && <SqBadge color=\"info\"><strong>{t(\"currentlyEquippedBuild\")}</strong></SqBadge>}\n                <Suspense fallback={<Skeleton width={300} height={50} />}>\n                  <ArtifactSetBadges artifacts={Object.values(artifactsBySlot)} currentlyEquipped={currentlyEquipped} />\n                </Suspense>\n              </Stack>\n              <Grid item flexGrow={1} />\n              <CloseButton onClick={() => setSelectedPoint(undefined)} />\n            </Stack>\n            <Grid container direction=\"row\" spacing={0.75} columns={5}>\n              {allSlotKeys.map(key =>\n                <Grid item key={key} xs={1}>\n                  <Suspense fallback={<Skeleton width={75} height={75} />}>\n                    <ArtifactCardPico artifactObj={artifactsBySlot[key]} slotKey={key} />\n                  </Suspense>\n                </Grid>\n              )}\n            </Grid>\n            <Typography><strong>{xLabel}</strong>: {valueString(xUnit === \"%\" ? selectedPoint.x / 100 : selectedPoint.x, xUnit)}</Typography>\n            <Typography><strong>{yLabel}</strong>: {valueString(yUnit === \"%\" ? selectedPoint.y / 100 : selectedPoint.y, yUnit)}</Typography>\n            <BootstrapTooltip title={canAddBuild ? \"\" : t(\"tcGraph.buildAlreadyInList\")} placement=\"top\">\n              <span>\n                <Button sx={{ width: \"100%\" }} disabled={!canAddBuild} color=\"info\" onClick={() => addBuildToList(selectedPoint.artifactIds)}>{t(\"addBuildToList\")}</Button>\n              </span>\n            </BootstrapTooltip>\n          </Stack>\n        </CardContent>\n      </CardDark>\n    </ClickAwayListener>\n  }\n\n  return null\n}\n","export default class EnhancedPoint {\n  public x: number\n  public trueY?: number\n  public artifactIds: string[]\n  public min?: number\n  public current?: number\n  public highlighted?: number\n\n  public constructor(x: number, y: number, artifactIds: string[]) {\n    this.x = x\n    this.trueY = y\n    this.artifactIds = artifactIds\n  }\n\n  public get y(): number {\n    return (this.trueY || this.current || this.highlighted) as number\n  }\n  public set y(y: number | undefined) {\n    this.trueY = y\n  }\n}\n","import { CheckBox, CheckBoxOutlineBlank, Download, Replay } from '@mui/icons-material';\nimport { Button, CardContent, Collapse, Divider, Grid, Slider, styled, Typography } from '@mui/material';\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CartesianGrid, ComposedChart, Label, Legend, LegendType, Line, ResponsiveContainer, Scatter, Tooltip, XAxis, YAxis } from 'recharts';\nimport BootstrapTooltip from '../../../../../../Components/BootstrapTooltip';\nimport CardDark from '../../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../../Components/Card/CardLight';\nimport InfoTooltip from '../../../../../../Components/InfoTooltip';\nimport { CharacterContext } from '../../../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../../../Context/DataContext';\nimport { GraphContext } from '../../../../../../Context/GraphContext';\nimport { ArtCharDatabase, DatabaseContext } from '../../../../../../Database/Database';\nimport { input } from '../../../../../../Formula';\nimport { NumNode } from '../../../../../../Formula/type';\nimport { valueString } from '../../../../../../KeyMap';\nimport { allSlotKeys, SlotKey } from '../../../../../../Types/consts';\nimport { objectKeyValueMap, objPathValue } from '../../../../../../Util/Util';\nimport useBuildResult from '../../useBuildResult';\nimport OptimizationTargetSelector from '../OptimizationTargetSelector';\nimport CustomDot from './CustomDot';\nimport CustomTooltip from './CustomTooltip';\nimport EnhancedPoint from './EnhancedPoint';\n\nexport type Point = {\n  x: number\n  y: number\n  artifactIds: string[]\n  min?: number\n}\ntype ChartCardProps = {\n  plotBase?: string[]\n  setPlotBase: (path: string[] | undefined) => void\n  disabled?: boolean\n  showTooltip?: boolean\n}\nexport default function ChartCard({ plotBase, setPlotBase, disabled = false, showTooltip = false }: ChartCardProps) {\n  const { t } = useTranslation([\"page_character_optimize\", \"ui\"])\n  const { data } = useContext(DataContext)\n  const { chartData } = useContext(GraphContext)\n  const [showDownload, setshowDownload] = useState(false)\n  const [showMin, setshowMin] = useState(true)\n  const { graphBuilds } = useContext(GraphContext)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildResult: { builds } } = useBuildResult(characterKey)\n\n  const [sliderLow, setSliderLow] = useState(-Infinity)\n  const [sliderHigh, setSliderHigh] = useState(Infinity)\n  const setSlider = useCallback(\n    (_e: unknown, value: number | number[]) => {\n      if (typeof value === \"number\") throw new TypeError()\n      const [l, h] = value\n      setSliderLow(l)\n      setSliderHigh(h)\n    },\n    [setSliderLow, setSliderHigh]\n  )\n  useEffect(() => { setSliderLow(-Infinity); setSliderHigh(Infinity) }, [chartData])\n\n  const { displayData, downloadData, sliderMin, sliderMax } = useMemo(() => {\n    if (!chartData) return { displayData: null, downloadData: null }\n    let sliderMin = Infinity\n    let sliderMax = -Infinity\n    const currentBuild = objectKeyValueMap(allSlotKeys, slotKey => [slotKey, data?.get(input.art[slotKey].id).value ?? \"\"])\n    const highlightedBuildsSlotMap = [...builds, ...(graphBuilds ?? [])].map(artiIds => convertArtiIdsToArtiSlotMap(artiIds, database))\n    // Shape the data so we know the current and highlighted builds\n    const points = chartData.data.map(({ value: y, plot: x, artifactIds }) => {\n      if (x === undefined) return null\n      if (x < sliderMin) sliderMin = x\n      if (x > sliderMax) sliderMax = x\n      const enhancedDatum: EnhancedPoint = new EnhancedPoint(x, y, artifactIds)\n      const datumSlotMap = convertArtiIdsToArtiSlotMap(artifactIds, database)\n\n      const isCurrentBuild = allSlotKeys.every(slotKey => currentBuild[slotKey] === datumSlotMap[slotKey])\n      if (isCurrentBuild) {\n        enhancedDatum.current = y\n        // Remove the Y-value so there are not 2 dots displayed for these builds\n        enhancedDatum.y = undefined\n        return enhancedDatum\n      }\n\n      const isHighlightedBuild = highlightedBuildsSlotMap.some(highlightedSlotMap =>\n        allSlotKeys.every(slotKey => highlightedSlotMap[slotKey] === datumSlotMap[slotKey])\n      )\n      if (isHighlightedBuild) {\n        enhancedDatum.highlighted = y\n        // Remove the Y-value so there are not 2 dots displayed for these builds\n        enhancedDatum.y = undefined\n      }\n      return enhancedDatum\n    })\n    .sort((a, b) => a!.x - b!.x) as EnhancedPoint[]\n\n    const minimumData: EnhancedPoint[] = []\n    for (const point of points) {\n      let last: EnhancedPoint | undefined\n      while ((last = minimumData.pop())) {\n        if (last.y > point.y) {\n          minimumData.push(last)\n          break\n        }\n      }\n      minimumData.push(point)\n    }\n\n    // Note:\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\n    // It could be faster too since there're no empty entries in `minimumData`.\n    // From my limited testing, using multiple data sources makes the graph behave strangely though.\n    if (minimumData[0]?.x !== points[0]?.x)\n      points[0].min = minimumData[0].y\n    minimumData.forEach(pt => { pt.min = pt.y })\n\n    const downloadData = {\n      minimum: minimumData.map(point => [point.x, point.y]),\n      allData: points.map(point => [point.x, point.y]),\n    }\n    return { displayData: points.filter(pt => pt && pt.x >= sliderLow && pt.x <= sliderHigh), downloadData, sliderMin, sliderMax }\n  }, [chartData, builds, data, database, graphBuilds, sliderLow, sliderHigh])\n\n  const plotBaseNode = plotBase && objPathValue(data?.getDisplay(), plotBase)\n  const invalidTarget = plotBase && (!plotBaseNode || plotBaseNode.isEmpty)\n\n  const buttonText = invalidTarget\n    ? t(\"page_character_optimize:targetSelector.invalidTarget\")\n    : t(\"page_character_optimize:targetSelector.selectGraphTarget\")\n\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <Typography >{t`tcGraph.vs`}</Typography>\n        </Grid>\n        <Grid item>\n          <BootstrapTooltip placement=\"top\" title={showTooltip ? t(\"page_character_optimize:selectTargetFirst\") : \"\"}>\n            <span>\n              <OptimizationTargetSelector\n                optimizationTarget={plotBase}\n                setTarget={target => setPlotBase(target)}\n                defaultText={buttonText}\n                disabled={disabled}\n              />\n            </span>\n          </BootstrapTooltip>\n        </Grid>\n        <Grid item>\n          <BootstrapTooltip title={!plotBase ? \"\" : t(\"ui:reset\")} placement=\"top\">\n            <span><Button color=\"error\" onClick={() => setPlotBase(undefined)} disabled={!plotBase}>\n              <Replay />\n            </Button></span>\n          </BootstrapTooltip>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <InfoTooltip placement=\"top\" title={t(\"page_character_optimize:tcGraph.desc\")} />\n        </Grid>\n        {!!downloadData && <Grid item>\n          <Button size='small' startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\n            color={showMin ? \"success\" : \"secondary\"}\n            onClick={() => setshowMin(!showMin)}>{t`tcGraph.showStatThr`}</Button>\n        </Grid>}\n        {!!downloadData && <Grid item>\n          <Button size='small' color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>{t`tcGraph.downloadData`}</Button>\n        </Grid>}\n      </Grid>\n    </CardContent>\n    {displayData && displayData.length && <Divider />}\n    {chartData && displayData && displayData.length && <CardContent>\n      <Collapse in={!!downloadData && showDownload}>\n        <CardDark sx={{ mb: 2 }}>\n          <CardContent>\n            <Typography>Min Data</Typography>\n            <DataDisplay data={downloadData?.minimum} />\n            <Typography>All Data</Typography>\n            <DataDisplay data={downloadData?.allData} />\n          </CardContent>\n        </CardDark>\n      </Collapse>\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\n      {displayData.length > 1 && <Slider\n        marks\n        value={[sliderLow, sliderHigh]}\n        onChange={setSlider}\n        onChangeCommitted={setSlider}\n        min={sliderMin}\n        max={sliderMax}\n        step={(sliderMax - sliderMin) / 20}\n        valueLabelDisplay=\"auto\"\n        valueLabelFormat={n => valueString(chartData.plotNode.info?.unit === \"%\" ? n / 100 : n, chartData.plotNode.info?.unit)}\n        sx={{ ml: \"6%\", width: \"93%\" }}\n      />}\n    </CardContent>}\n  </CardLight >\n}\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  fontFamily: \"monospace\",\n  resize: \"vertical\",\n  minHeight: \"5em\"\n})\nfunction DataDisplay({ data, }: { data?: object }) {\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\n    const target = e.target as HTMLTextAreaElement;\n    target.selectionStart = 0;\n    target.selectionEnd = target.value.length;\n  }} />\n}\n\nconst optTargetColor = \"#8884d8\"\nconst highlightedColor = \"cyan\"\nconst currentColor = \"#46a046\"\nconst lineColor = \"#ff7300\"\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\n  displayData: EnhancedPoint[]\n  plotNode: NumNode\n  valueNode: NumNode\n  showMin: boolean\n}) {\n  const { graphBuilds, setGraphBuilds } = useContext(GraphContext)\n  const { t } = useTranslation(\"page_character_optimize\")\n  const [selectedPoint, setSelectedPoint] = useState<EnhancedPoint>()\n  const addBuildToList = useCallback((build: string[]) => setGraphBuilds([...(graphBuilds ?? []), build]), [setGraphBuilds, graphBuilds])\n  const chartOnClick = useCallback(props => {\n    if (props && props.chartX && props.chartY) setSelectedPoint(getNearestPoint(props.chartX, props.chartY, 20, displayData))\n  }, [setSelectedPoint, displayData])\n\n  // Below works because character translation should already be loaded\n  const xLabelValue = getLabelFromNode(plotNode, t)\n  const yLabelValue = getLabelFromNode(valueNode, t)\n\n  return <ResponsiveContainer width=\"100%\" height={600}>\n    <ComposedChart id=\"chartContainer\" data={displayData} onClick={chartOnClick} style={{ cursor: \"pointer\" }}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis\n        dataKey=\"x\"\n        scale=\"linear\"\n        unit={plotNode.info?.unit}\n        domain={[\"auto\", \"auto\"]}\n        tick={{ fill: 'white' }}\n        type=\"number\"\n        tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)}\n        label={<Label fill=\"white\" dy={10}>{xLabelValue}</Label>}\n        height={50}\n      />\n      <YAxis\n        name=\"DMG\"\n        domain={[\"auto\", \"auto\"]}\n        unit={valueNode.info?.unit}\n        allowDecimals={false}\n        tick={{ fill: 'white' }}\n        type=\"number\"\n        label={<Label fill=\"white\" angle={-90} dx={-40}>{yLabelValue}</Label>}\n        width={100}\n      />\n      <Tooltip\n        content={<CustomTooltip\n          xLabel={xLabelValue}\n          xUnit={plotNode.info?.unit}\n          yLabel={yLabelValue}\n          yUnit={valueNode.info?.unit}\n          selectedPoint={selectedPoint}\n          setSelectedPoint={setSelectedPoint}\n          addBuildToList={addBuildToList}\n        />}\n        trigger=\"click\"\n        wrapperStyle={{ pointerEvents: \"auto\", cursor: \"auto\" }}\n        cursor={false}\n      />\n      <Legend payload={[\n        ...(showMin ? [{ id: \"min\", value: t`tcGraph.statReqThr`, type: \"line\" as LegendType, color: lineColor }] : []),\n        { id: \"trueY\", value: t`tcGraph.generatedBuilds`, type: \"circle\", color: optTargetColor },\n        { id: \"highlighted\", value: t`tcGraph.highlightedBuilds`, type: \"square\", color: highlightedColor },\n        { id: \"current\", value: t`tcGraph.currentBuild`, type: \"diamond\", color: currentColor },\n      ]}/>\n      {showMin && <Line\n        dataKey=\"min\"\n        stroke={lineColor}\n        type=\"stepBefore\"\n        connectNulls\n        strokeWidth={2}\n        isAnimationActive={false}\n        dot={false}\n        activeDot={false}\n      />}\n      <Scatter\n        dataKey=\"trueY\"\n        isAnimationActive={false}\n        shape={<CustomDot selectedPoint={selectedPoint} colorUnselected={optTargetColor} />}\n      />\n      <Scatter\n        dataKey=\"highlighted\"\n        isAnimationActive={false}\n        shape={<CustomDot shape=\"square\" selectedPoint={selectedPoint} colorUnselected={highlightedColor} />}\n      />\n      <Scatter\n        dataKey=\"current\"\n        isAnimationActive={false}\n        shape={<CustomDot shape=\"diamond\" selectedPoint={selectedPoint} colorUnselected={currentColor} />}\n      />\n    </ComposedChart>\n  </ResponsiveContainer>\n}\n\nfunction convertArtiIdsToArtiSlotMap(artifactIds: string[], database: ArtCharDatabase) {\n  // Create partial mapping of slotkey -> build artifact\n  const partialArtiSlotMap: Dict<SlotKey, string> = Object.fromEntries(artifactIds.map(artiId => {\n    const arti = database.arts.get(artiId)\n    return arti ? [arti.slotKey, arti.id] : []\n  }))\n  // Fill in the blanks so we have a StrictDict<SlotKey, string>\n  return objectKeyValueMap(allSlotKeys, slotKey => [slotKey, partialArtiSlotMap[slotKey] ?? \"\"])\n}\n\nfunction getNearestPoint(clickedX: number, clickedY: number, threshold: number, data: EnhancedPoint[]) {\n  const nearestDomPtData = Array.from(document.querySelectorAll(\".custom-dot\"))\n    .reduce((domPtA, domPtB) => {\n      const { chartX: aChartX, chartY: aChartY } = (domPtA as any).dataset\n      const aDistance = Math.sqrt((clickedX - aChartX) ** 2 + (clickedY - aChartY) ** 2)\n      const { chartX: bChartX, chartY: bChartY } = (domPtB as any).dataset\n      const bDistance = Math.sqrt((clickedX - bChartX) ** 2 + (clickedY - bChartY) ** 2)\n      return aDistance <= bDistance\n        ? domPtA\n        : domPtB\n    })[\"dataset\"]\n\n  // Don't select a point too far away\n  const distance = Math.sqrt((clickedX - nearestDomPtData.chartX) ** 2 + (clickedY - nearestDomPtData.chartY) ** 2)\n  return distance < threshold\n    ? data.find(d => d.x === +nearestDomPtData.xValue && d.y === +nearestDomPtData.yValue)\n    : undefined\n}\n\nfunction getLabelFromNode(node: NumNode, t: any) {\n  return typeof node.info?.name === \"string\"\n    ? node.info.name\n    : `${t(`${node.info?.name?.props.ns}:${node.info?.name?.props.key18}`)}${node.info?.textSuffix ? ` ${node.info?.textSuffix}` : \"\"}`\n}\n","import { Replay } from '@mui/icons-material';\nimport { Button, CardContent, Divider, Grid, Typography, Box } from '@mui/material';\nimport { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StatColoredWithUnit } from '../../../../../Components/StatDisplay';\nimport StatIcon from '../../../../../Components/StatIcon';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\nimport { allElementsWithPhy } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\n\nexport default function MainStatSelectionCard({ disabled = false, }: {\n  disabled?: boolean\n}) {\n  const { t } = useTranslation(\"artifact\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\n      const numSel = mainStatKeys[slotKey].length\n      return <Box key={slotKey}>\n        <Divider />\n        <CardContent sx={{ pt: 1 }}>\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\n              <span>{artifactSlotIcon(slotKey)}</span>\n            </BootstrapTooltip>\n            <Box flexGrow={1}>\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\n            </Box>\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\n              <Replay />\n            </Button>\n          </Box>\n          <Grid container spacing={1}>\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\n                ? element ?? \"success\"\n                : \"secondary\"\n              return <Grid item key={mainStatKey} flexGrow={1} xs={(i < 3 && slotKey !== \"goblet\") ? 4 : undefined} >\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong><StatColoredWithUnit statKey={mainStatKey} /></strong></Typography>} disableInteractive>\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\n                    {StatIcon[mainStatKey]}\n                  </Button>\n                </BootstrapTooltip>\n              </Grid>\n            })}\n          </Grid>\n        </CardContent>\n      </Box>\n    })}\n  </Box >\n}\n","import { CheckBox, CheckBoxOutlineBlank, DeleteForever } from \"@mui/icons-material\"\nimport { Button, ButtonGroup } from \"@mui/material\"\nimport { useCallback, useContext } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\"\nimport { DataContext } from \"../../../../../Context/DataContext\"\nimport { StatFilters, StatFilterSetting } from \"../../../../../Database/DataManagers/BuildSettingData\"\nimport { NodeDisplay } from \"../../../../../Formula/uiData\"\nimport { objPathValue } from \"../../../../../Util/Util\"\nimport OptimizationTargetSelector from \"./OptimizationTargetSelector\"\n\ntype OptimizationTargetEditorListProps = {\n  statFilters: StatFilters\n  setStatFilters: (statFilters: StatFilters) => void\n  disabled: boolean\n}\n\nexport default function OptimizationTargetEditorList({ statFilters, setStatFilters, disabled = false }: OptimizationTargetEditorListProps) {\n  const setTarget = useCallback((path: string[], oldPath?: string[], oldIndex?: number) => {\n    const statFilters_ = { ...statFilters }\n    const oldPathStr = JSON.stringify(oldPath)\n    const oldFilterArr = oldPath ? [...statFilters[oldPathStr]!] : undefined\n    const pathStr = JSON.stringify(path)\n    const filterArr = [...(statFilters[pathStr] ?? [])]\n    // Copy/create new setting\n    if (oldIndex !== undefined && oldFilterArr) filterArr.push(oldFilterArr[oldIndex])\n    else filterArr.push({ value: 0, disabled: false })\n    statFilters_[pathStr] = filterArr\n    // Remove old setting\n    if (oldIndex !== undefined && oldFilterArr) {\n      oldFilterArr.splice(oldIndex, 1)\n      if (!!oldFilterArr.length) statFilters_[oldPathStr] = oldFilterArr\n      else delete statFilters_[oldPathStr]\n    }\n    setStatFilters({ ...statFilters_ })\n  }, [setStatFilters, statFilters])\n\n  const delTarget = useCallback((path: string[], index: number) => {\n    const statFilters_ = { ...statFilters }\n    const pathStr = JSON.stringify(path)\n    const filterArr = [...statFilters[pathStr]!]\n    filterArr.splice(index, 1)\n    if (!!filterArr.length) statFilters_[pathStr] = filterArr\n    else delete statFilters_[pathStr]\n    setStatFilters({ ...statFilters_ })\n  }, [setStatFilters, statFilters])\n\n  const setTargetValue = useCallback((path: string[], index: number, value: number) => {\n    const statFilters_ = { ...statFilters }\n    const pathStr = JSON.stringify(path)\n    const filterArr = [...statFilters[pathStr]!]\n    filterArr[index] = { ...filterArr[index], value } as StatFilterSetting\n    statFilters_[pathStr] = filterArr\n    setStatFilters({ ...statFilters_ })\n  }, [setStatFilters, statFilters])\n\n  const setTargetDisabled = useCallback((path: string[], index: number, disabled: boolean) => {\n    const statFilters_ = { ...statFilters }\n    const pathStr = JSON.stringify(path)\n    const filterArr = [...statFilters[pathStr]!]\n    filterArr[index] = { ...filterArr[index], disabled } as StatFilterSetting\n    statFilters_[pathStr] = filterArr\n    setStatFilters({ ...statFilters_ })\n  }, [setStatFilters, statFilters])\n\n  return <>\n    {Object.entries(statFilters).flatMap(([pathStr, settings]) =>\n      settings?.map((setting, index) =>\n        <OptimizationTargetEditorItem path={JSON.parse(pathStr)} setting={setting} index={index} setTarget={setTarget} delTarget={delTarget} setValue={setTargetValue} setDisabled={setTargetDisabled} disabled={disabled} key={pathStr + index} />\n      )\n    )}\n    <OptimizationTargetEditorItem setTarget={setTarget} delTarget={delTarget} setValue={setTargetValue} setDisabled={setTargetDisabled} disabled={disabled} />\n  </>\n}\n\ntype OptimizationTargetEditorItemProps = {\n  path?: string[]\n  setting?: StatFilterSetting\n  index?: number\n  setTarget: (path: string[], oldPath?: string[], oldIndex?: number) => void\n  delTarget: (path: string[], index: number) => void\n  setValue: (path: string[], index: number, value: number) => void\n  setDisabled: (path: string[], index: number, disabled: boolean) => void\n  disabled: boolean\n}\nfunction OptimizationTargetEditorItem({ path, setting, index, setTarget, delTarget, setValue, setDisabled, disabled }: OptimizationTargetEditorItemProps) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { data } = useContext(DataContext)\n  const onChange = useCallback((val: number | undefined) => path && (index !== undefined) && setValue(path, index, val ?? 0), [setValue, path, index])\n  const buttonStyle = { p: 1, flexBasis: 30, flexGrow: 0, flexShrink: 0 }\n\n  const buildConstraintNode: NodeDisplay = objPathValue(data.getDisplay(), path ?? [])\n  const isPercent = buildConstraintNode?.info?.unit === \"%\"\n\n  return <ButtonGroup sx={{ \"& .MuiButtonGroup-grouped\": { minWidth: 24 }, width: \"100%\" }}>\n    {!!setting && !!path && (index !== undefined) && <Button sx={buttonStyle} color={setting.disabled ? \"secondary\" : \"success\"} onClick={() => setDisabled(path, index, !setting.disabled)} disabled={disabled}>\n      {setting.disabled ? <CheckBoxOutlineBlank /> : <CheckBox />}\n    </Button>}\n    <OptimizationTargetSelector showEmptyTargets optimizationTarget={path} setTarget={(target) => setTarget(target, path, index)} defaultText={t(\"targetSelector.selectBuildTarget\")} />\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: 150, flexGrow: 1 }}>\n      <CustomNumberInput\n        float\n        disabled={!path || disabled}\n        value={setting?.value}\n        placeholder=\"Stat Value\"\n        onChange={onChange}\n        sx={{ px: 1, }}\n        inputProps={{ sx: { textAlign: \"right\" } }}\n        endAdornment={isPercent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    {!!path && (index !== undefined) && <Button sx={buttonStyle} color=\"error\" onClick={() => delTarget(path, index)} disabled={disabled}>\n      <DeleteForever fontSize=\"small\" />\n    </Button>}\n  </ButtonGroup>\n}\n","import { Box, CardContent, Typography } from \"@mui/material\"\nimport { useCallback, useContext } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CardLight from \"../../../../../Components/Card/CardLight\"\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\nimport { StatFilters } from \"../../../../../Database/DataManagers/BuildSettingData\"\nimport useBuildSetting from \"../useBuildSetting\"\nimport OptimizationTargetEditorList from \"./OptimizationTargetEditorList\"\n\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setStatFilters = useCallback((statFilters: StatFilters) => buildSettingDispatch({ statFilters }), [buildSettingDispatch])\n\n  return <Box>\n    <CardLight>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography>{t`constraintFilter.title`}</Typography>\n        <InfoTooltip title={<Typography>{t`constraintFilter.tooltip`}</Typography>} />\n      </CardContent>\n    </CardLight>\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\n      <OptimizationTargetEditorList statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\n    </Box>\n  </Box>\n}\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\nimport CardDark from \"../../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\nimport CloseButton from \"../../../../../Components/CloseButton\";\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\nimport { ICachedCharacter } from \"../../../../../Types/character\";\nimport { CharacterKey } from \"../../../../../Types/consts\";\nimport useBuildSetting from \"../useBuildSetting\";\nconst CharacterSelectionModal = React.lazy(() => import('../../../../CharacterSelectionModal'))\n\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState(false)\n  const [{ equipmentPriority: tempEquipmentPriority }, setTO] = useState(database.displayOptimize.get())\n  useEffect(() => database.displayOptimize.follow((r, to) => setTO(to)), [database, setTO])\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => database.displayOptimize.set({ equipmentPriority }), [database])\n\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\n    const arr = [...equipmentPriority]\n    var element = arr[fromIndex];\n    arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, element);\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const removePrio = useCallback((fromIndex) => {\n    const arr = [...equipmentPriority]\n    arr.splice(fromIndex, 1)\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\n\n  const numAbove = useMemo(() => {\n    let numAbove = equipmentPriority.length\n    const index = equipmentPriority.indexOf(characterKey)\n    if (index >= 0) numAbove = index\n    return numAbove\n  }, [characterKey, equipmentPriority])\n  const numUseEquippedChar = useMemo(() => {\n    return database.chars.keys.length - 1 - numAbove\n  }, [numAbove, database])\n  const numUnlisted = useMemo(() => {\n    return database.chars.keys.length - equipmentPriority.length\n  }, [equipmentPriority, database])\n\n  return <Box display=\"flex\" gap={1}>\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{t`useEquipped.modal.title`}</Typography>\n          </Grid>\n          <Grid item sx={{ mb: -1 }}>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <CardLight sx={{ mb: 1 }}>\n          <CardContent>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\n          </CardContent>\n        </CardLight>\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n          {equipmentPriority.map((ck, i) =>\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"useEquipped.modal.clearList\">Clear List</Trans></Button>\n          </Box>\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\n        </Box>\n      </CardContent>\n    </CardDark ></ModalWrapper>\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\n        <Box>\n          <span><Trans t={t} i18nKey=\"useEquipped.title\">Use Equipped Artifacts</Trans></span>\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\n        </Box>\n      </Button>\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\n    </ButtonGroup>\n  </Box>\n}\n\nconst itemSize = 60\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\n  characterKey: CharacterKey,\n  rank: number,\n  maxRank: number,\n  setRank: (r: number | undefined) => void,\n  onRemove: () => void,\n  numAbove: number,\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { database } = useContext(DatabaseContext)\n  const character = useCharacter(characterKey)\n  const onClick = useCharSelectionCallback()\n  if (!character) return null\n  const { equippedWeapon, equippedArtifacts } = character\n  return <CardLight sx={{ p: 1 }}  >\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\n      <SqBadge color=\"info\">\n        <Typography>#{rank}</Typography>\n      </SqBadge>\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"useEquipped.modal.status.curr\">Current character</Trans>\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\n            <Trans t={t} i18nKey=\"useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\n      </SqBadge>\n      <Box>\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\n          <CustomNumberInputButtonGroupWrapper >\n            <CustomNumberInput onChange={setRank} value={rank}\n              // startAdornment=\"Rank:\"\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\n          </CustomNumberInputButtonGroupWrapper>\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\n            <KeyboardDoubleArrowUp />\n          </Button>\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\n            <KeyboardArrowUp />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\n            <KeyboardArrowDown />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\n            <KeyboardDoubleArrowDown />\n          </Button>\n          <Button color=\"error\" onClick={onRemove}>\n            <Close />\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n    <Grid container columns={7} spacing={1}>\n      <Grid item xs={1} >\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\n      </Grid>\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\n    </Grid>\n\n  </CardLight>\n}\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const [show, onOpen, onClose] = useBoolState(false)\n  const filter = useCallback((char?: ICachedCharacter) => {\n    if (!char) return false\n    return !list.includes(char.key)\n  }, [list])\n  return <>\n    <Suspense fallback={false}>\n      <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\n    </Suspense>\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\n      <Trans t={t} i18nKey=\"useEquipped.modal.add\">Add character to list</Trans>\n    </Button>\n  </>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport { Box, Button } from \"@mui/material\";\nimport { useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBuildSetting from \"../useBuildSetting\";\n\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\n    <Box>\n      <span><Trans t={t} i18nKey=\"useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\n    </Box>\n  </Button>\n}\n","import Alert from \"@mui/material/Alert\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function WorkerErr() {\n  const { t } = useTranslation(\"page_character_optimize\")\n  return <Alert severity=\"error\" variant=\"filled\" onClick={() => window.location.reload()} sx={{\n    \"& .MuiAlert-message\": {\n      flexGrow: 1,\n      cursor: \"pointer\"\n    }\n  }}>{t`workerLoadFailed`}</Alert>\n}\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\nimport { input } from \"../../../../Formula\";\nimport { computeUIData } from \"../../../../Formula/api\";\nimport { formulaString } from \"../../../../Formula/debug\";\nimport { Data, NumNode } from \"../../../../Formula/type\";\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\n\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\nexport const dynamicData = {\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\n}\n\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\n  const result: ArtifactsBySlot = {\n    base: {},\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\n  }\n  const keys = new Set<string>()\n\n  for (const art of arts) {\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\n\n    const data: ArtifactBuildData = {\n      id: art.id, set: art.setKey,\n      values: {\n        [art.setKey]: 1,\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n        ...Object.fromEntries(art.substats.map(substat =>\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n      },\n    }\n    delete data.values[\"\"]\n    result.values[art.slotKey].push(data)\n    Object.keys(data.values).forEach(x => keys.add(x))\n  }\n  result.base = objectKeyMap([...keys], _ => 0)\n  if (allowPartial)\n    for (const value of Object.values(result.values))\n      value.push({ id: \"\", values: {} })\n  return result\n}\n\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\n  const stats = { ...base }\n  for (const art of arts) {\n    for (const [key, value] of Object.entries(art.values)) {\n      stats[key] = (stats[key] ?? 0) + value\n    }\n  }\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\n  const uiData = computeUIData([data])\n  return {\n    base, arts, stats,\n    data, uiData,\n    nodes: nodes.map(formulaString),\n    results: nodes.map(node => uiData.get(node)),\n  }\n}\n","import { CheckBox, CheckBoxOutlineBlank, Close, DeleteForever, Science, TrendingUp } from '@mui/icons-material';\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography } from '@mui/material';\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { GraphContext } from '../../../../Context/GraphContext';\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { defThreads } from '../../../../Database/DataEntries/DisplayOptimizeEntry';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { optimize } from '../../../../Formula/optimization';\nimport { NumNode } from '../../../../Formula/type';\nimport { UIData } from '../../../../Formula/uiData';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\nimport useMediaQueryUp from '../../../../ReactHooks/useMediaQueryUp';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport { CharacterKey, charKeyToLocCharKey, LocationCharacterKey } from '../../../../Types/consts';\nimport { objPathValue, range } from '../../../../Util/Util';\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\nimport { maxBuildsToShowList } from './Build';\nimport { artSetPerm, Build, filterFeasiblePerm, mergeBuilds, mergePlot, pruneAll, pruneExclusion, RequestFilter } from './common';\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\nimport BonusStatsCard from './Components/BonusStatsCard';\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\nimport BuildDisplayItem from './Components/BuildDisplayItem';\nimport ChartCard from './Components/ChartCard';\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\nimport StatFilterCard from './Components/StatFilterCard';\nimport UseEquipped from './Components/UseEquipped';\nimport UseExcluded from './Components/UseExcluded';\nimport WorkerErr from './Components/WorkerErr';\nimport { compactArtifacts, dynamicData } from './foreground';\nimport useBuildResult from './useBuildResult';\nimport useBuildSetting from './useBuildSetting';\n\nexport default function TabBuild() {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const { setChartData, graphBuilds, setGraphBuilds } = useContext(GraphContext)\n\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\n  const generatingBuilds = buildStatus.type !== \"inactive\"\n\n  const [artsDirty, setArtsDirty] = useForceUpdate()\n\n  const [{ equipmentPriority, threads = defThreads }, setDisplayOptimize] = useState(database.displayOptimize.get())\n  useEffect(() => database.displayOptimize.follow((r, to) => setDisplayOptimize(to)), [database, setDisplayOptimize])\n\n  const maxWorkers = threads > defThreads ? defThreads : threads\n  const setMaxWorkers = useCallback(threads => database.displayOptimize.set({ threads }), [database],)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  // Clear state when changing characters\n  useEffect(() => {\n    setBuildStatus({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 })\n  }, [characterKey])\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n  const { buildResult: { builds, buildDate }, buildResultDispatch } = useBuildResult(characterKey)\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n  const optimizationTargetNode = optimizationTarget && objPathValue(data?.getDisplay(), optimizationTarget)\n  const isSM = [\"xs\", \"sm\"].includes(useMediaQueryUp())\n\n  //register changes in artifact database\n  useEffect(() =>\n    database.arts.followAny(setArtsDirty),\n    [setArtsDirty, database])\n\n  // Provides a function to cancel the work\n  const cancelToken = useRef(() => { })\n  //terminate worker when component unmounts\n  useEffect(() => () => cancelToken.current(), [])\n  const [workerErr, setWorkerErr] = useState(false)\n  const generateBuilds = useCallback(async () => {\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n    if (!characterKey || !optimizationTarget) return\n\n    let cantTakeList: Set<LocationCharacterKey> = new Set()\n    if (useEquippedArts) {\n      const index = equipmentPriority.indexOf(characterKey)\n      if (index < 0) equipmentPriority.forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\n      else equipmentPriority.slice(0, index).forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\n    }\n    const filteredArts = database.arts.values.filter(art => {\n      if (art.level < levelLow) return false\n      if (art.level > levelHigh) return false\n      const mainStats = mainStatKeys[art.slotKey]\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\n\n      // If its equipped on the selected character, bypass the check\n      if (art.location === charKeyToLocCharKey(characterKey)) return true\n\n      if (art.exclude && !useExcludedArts) return false\n      if (art.location && !useEquippedArts) return false\n      if (art.location && useEquippedArts && cantTakeList.has(art.location)) return false\n      return true\n    })\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\n\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let unoptimizedOptimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!unoptimizedOptimizationTargetNode) return\n    const targetNode = unoptimizedOptimizationTargetNode\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters)\n      .flatMap(([pathStr, settings]) =>\n        settings\n          .filter(setting => !setting.disabled)\n          .map(setting => {\n            const filterNode: NumNode = objPathValue(workerData.display ?? {}, JSON.parse(pathStr))\n            const minimum = filterNode.info?.unit === \"%\" ? setting.value / 100 : setting.value // TODO: Conversion\n            return { value: filterNode, minimum: minimum }\n          })\n      )\n      .filter(x => x.value && x.minimum > -Infinity)\n\n    setChartData(undefined)\n\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\n\n    let unoptimizedNodes = [...valueFilter.map(x => x.value), unoptimizedOptimizationTargetNode], arts = split!\n    const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\n\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\n    const plotBaseNumNode: NumNode = plotBase && objPathValue(workerData.display ?? {}, plotBase)\n    if (plotBaseNumNode) {\n      unoptimizedNodes.push(plotBaseNumNode)\n      minimum.push(-Infinity)\n    }\n\n    const prepruneArts = arts\n    let nodes = optimize(unoptimizedNodes, workerData, ({ path: [p] }) => p !== \"dyn\")\n    nodes = pruneExclusion(nodes, artSetExclusion);\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\n    }))\n    nodes = optimize(nodes, {}, _ => false)\n\n    const plotBaseNode = plotBaseNumNode ? nodes.pop() : undefined\n    let optimizationTargetNode = nodes.pop()!\n\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => ({ src: \"\", val: -Infinity })) }\n\n    const minFilterCount = 16_000_000, maxRequestFilterInFlight = maxWorkers * 16\n    const unprunedFilters = setPerms[Symbol.iterator](), requestFilters: RequestFilter[] = []\n    const idleWorkers: number[] = [], splittingWorkers = new Set<number>()\n    const workers: Worker[] = []\n\n    function getThreshold(): number {\n      return wrap.buildValues[maxBuildsToShow - 1].val\n    }\n    function fetchContinueWork(): WorkerCommand {\n      return { command: \"split\", filter: undefined, minCount: minFilterCount, threshold: getThreshold() }\n    }\n    function fetchPruningWork(): WorkerCommand | undefined {\n      const { done, value } = unprunedFilters.next()\n      return done ? undefined : {\n        command: \"split\", minCount: minFilterCount,\n        threshold: getThreshold(), filter: value,\n      }\n    }\n    function fetchRequestWork(): WorkerCommand | undefined {\n      const filter = requestFilters.pop()\n      return !filter ? undefined : {\n        command: \"iterate\",\n        threshold: getThreshold(), filter\n      }\n    }\n\n    const filters = nodes\n      .map((value, i) => ({ value, min: minimum[i] }))\n      .filter(x => x.min > -Infinity)\n\n    const finalizedList: Promise<FinalizeResult>[] = []\n    for (let i = 0; i < maxWorkers; i++) {\n      const worker = new Worker(new URL('./BackgroundWorker.ts', import.meta.url))\n      worker.addEventListener(\"error\", _ => {\n        console.error(\"Failed to load worker\")\n        setWorkerErr(true)\n        cancelToken.current()\n      });\n\n      const setup: Setup = {\n        command: \"setup\",\n        id: i, arts,\n        optimizationTarget: optimizationTargetNode,\n        plotBase: plotBaseNode,\n        maxBuilds: maxBuildsToShow,\n        filters\n      }\n      worker.postMessage(setup, undefined)\n      if (i === 0) {\n        const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\n        worker.postMessage(countCommand, undefined)\n      }\n      let finalize: (_: FinalizeResult) => void\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\n        setWorkerErr(false)\n        switch (data.command) {\n          case \"interim\":\n            status.tested += data.tested\n            status.failed += data.failed\n            status.skipped += data.skipped\n            if (data.buildValues) {\n              wrap.buildValues = wrap.buildValues.filter(({ src }) => src !== data.source)\n              wrap.buildValues.push(...data.buildValues.map(val => ({ src: data.source, val })))\n              wrap.buildValues.sort((a, b) => b.val - a.val).splice(maxBuildsToShow)\n            }\n            break\n          case \"split\":\n            if (data.filter) {\n              requestFilters.push(data.filter)\n              splittingWorkers.add(data.id)\n            } else splittingWorkers.delete(data.id)\n            idleWorkers.push(data.id)\n            break\n          case \"iterate\":\n            idleWorkers.push(data.id)\n            break\n          case \"finalize\":\n            worker.terminate()\n            finalize(data);\n            return\n          case \"count\":\n            const [pruned, prepruned] = data.counts\n            status.total = prepruned\n            status.skipped += prepruned - pruned\n            return\n          default: console.log(\"DEBUG\", data)\n        }\n        while (idleWorkers.length) {\n          const id = idleWorkers.pop()!, worker = workers[id]\n          let work: WorkerCommand | undefined\n          if (requestFilters.length < maxRequestFilterInFlight) {\n            work = fetchPruningWork()\n            if (!work && splittingWorkers.has(id)) work = fetchContinueWork()\n          }\n          if (!work) work = fetchRequestWork()\n          if (work) worker.postMessage(work)\n          else {\n            idleWorkers.push(id)\n            if (idleWorkers.length === 4 * maxWorkers) {\n              const command: WorkerCommand = { command: \"finalize\" }\n              workers.forEach(worker => worker.postMessage(command))\n            }\n            break\n          }\n        }\n      }\n\n      workers.push(worker)\n      cancelled.then(() => worker.terminate())\n      finalizedList.push(finalized)\n    }\n    for (let i = 0; i < 3; i++)\n      idleWorkers.push(...range(0, maxWorkers - 1))\n\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\n    clearInterval(buildTimer)\n    cancelToken.current = () => { }\n\n    if (!results) {\n      status.tested = 0\n      status.failed = 0\n      status.skipped = 0\n      status.total = 0\n    } else {\n      if (plotBaseNumNode) {\n        const plotData = mergePlot(results.map(x => x.plotData!))\n        let data = Object.values(plotData)\n        if (targetNode.info?.unit === \"%\")\n          data = data.map(({ value, plot, artifactIds }) => ({ value: value * 100, plot, artifactIds })) as Build[]\n        if (plotBaseNumNode.info?.unit === \"%\")\n          data = data.map(({ value, plot, artifactIds }) => ({ value, plot: (plot ?? 0) * 100, artifactIds })) as Build[]\n        setChartData({\n          valueNode: targetNode,\n          plotNode: plotBaseNumNode,\n          data\n        })\n      }\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\n      buildResultDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\n    }\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\n  }, [characterKey, database, buildResultDispatch, maxWorkers, buildSetting, equipmentPriority, setChartData])\n\n  const characterName = characterSheet?.name ?? \"Character Name\"\n\n  const setPlotBase = useCallback(plotBase => {\n    buildSettingDispatch({ plotBase })\n    setChartData(undefined)\n  }, [buildSettingDispatch, setChartData])\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return data && teamData && { data, teamData }\n  }, [data, teamData])\n\n  const targetSelector = <OptimizationTargetSelector\n    optimizationTarget={optimizationTarget}\n    setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n    disabled={!!generatingBuilds}\n  />\n\n  const getLabel0 = useCallback((index) => <Trans t={t} i18nKey=\"graphBuildLabel\" count={index + 1}>Graph #{{ count: index + 1 }}</Trans>, [t])\n  const getLabel1 = useCallback((index) => `#${index + 1}`, [])\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"><Trans t={t} i18nKey=\"noArtis\">Oops! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifacts\">Artifacts</Link> page and add some!</Trans></Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <CardLight>\n            <CardContent  >\n              <Typography gutterBottom>{t`mainStat.title`}</Typography>\n              <BootstrapTooltip placement=\"top\" title={<Box>\n                <Typography variant=\"h6\">{t`mainStat.levelAssTooltip.title`}</Typography>\n                <Typography>{t`mainStat.levelAssTooltip.desc`}</Typography>\n              </Box>}>\n                <Box>\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\n                </Box>\n              </BootstrapTooltip>\n            </CardContent>\n            {/* main stat selector */}\n            <MainStatSelectionCard disabled={generatingBuilds} />\n          </CardLight>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 3 */}\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <ArtifactSetConfig disabled={generatingBuilds} />\n\n          {/* use excluded */}\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\n\n          {/* use equipped */}\n          <UseEquipped disabled={generatingBuilds} />\n\n          <Button\n            fullWidth\n            startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />}\n            color={allowPartial ? \"success\" : \"secondary\"}\n            onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}\n            disabled={generatingBuilds}\n          >\n            {t`allowPartial`}\n          </Button>\n          { /* Level Filter */}\n          <CardLight>\n            <CardContent>{t`levelFilter`}</CardContent>\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n              disabled={generatingBuilds}\n            />\n          </CardLight>\n\n          {/*Minimum Final Stat Filter */}\n          <StatFilterCard disabled={generatingBuilds} />\n\n        </Grid>\n      </Grid>\n      {/* Footer */}\n      {isSM && targetSelector}\n      <ButtonGroup>\n        {!isSM && targetSelector}\n        <DropdownButton disabled={generatingBuilds || !characterKey}\n          title={<Trans t={t} i18nKey=\"build\" count={maxBuildsToShow}>\n            {{ count: maxBuildsToShow }} Builds\n          </Trans>}>\n          <MenuItem>\n            <Typography variant=\"caption\" color=\"info.main\">\n              {t(\"buildDropdownDesc\")}\n            </Typography>\n          </MenuItem>\n          <Divider />\n          {maxBuildsToShowList.map(v => <MenuItem key={v}\n            onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>\n            <Trans t={t} i18nKey=\"build\" count={v}>\n              {{ count: v }} Builds\n            </Trans>\n          </MenuItem>)}\n        </DropdownButton>\n        <DropdownButton disabled={generatingBuilds || !characterKey}\n          sx={{ borderRadius: \"4px 0px 0px 4px\" }}\n          title={<Trans t={t} i18nKey=\"thread\" count={maxWorkers}>\n            {{ count: maxWorkers }} Threads\n          </Trans>}>\n          <MenuItem>\n            <Typography variant=\"caption\" color=\"info.main\">\n              {t(\"threadDropdownDesc\")}\n            </Typography>\n          </MenuItem>\n          <Divider />\n          {range(1, defThreads).reverse().map(v => <MenuItem key={v}\n            onClick={() => setMaxWorkers(v)}>\n            <Trans t={t} i18nKey=\"thread\" count={v}>\n              {{ count: v }} Threads\n            </Trans>\n          </MenuItem>)}\n        </DropdownButton>\n        <BootstrapTooltip placement=\"top\" title={!optimizationTarget ? t(\"selectTargetFirst\") : \"\"}>\n          <span>\n            <Button\n              disabled={!characterKey || !optimizationTarget || !optimizationTargetNode || optimizationTargetNode.isEmpty}\n              color={generatingBuilds ? \"error\" : \"success\"}\n              onClick={generatingBuilds ? () => cancelToken.current() : generateBuilds}\n              startIcon={generatingBuilds ? <Close /> : <TrendingUp />}\n              sx={{ borderRadius: \"0px 4px 4px 0px\" }}\n            >{generatingBuilds ? t(\"generateButton.cancel\") : t(\"generateButton.generateBuilds\")}</Button>\n          </span>\n        </BootstrapTooltip>\n      </ButtonGroup>\n      {workerErr && <WorkerErr />}\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\n      <Box >\n        <ChartCard disabled={generatingBuilds || !optimizationTarget} plotBase={plotBase} setPlotBase={setPlotBase} showTooltip={!optimizationTarget} />\n      </Box>\n      <CardLight>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\n            <Typography sx={{ flexGrow: 1 }}>\n              {builds ? <span>Showing <strong>{builds.length + (graphBuilds ? graphBuilds.length : 0)}</strong> build generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\n                : <span>Select a character to generate builds.</span>}\n            </Typography>\n            <Button disabled={!builds.length} color=\"error\" onClick={() => { setGraphBuilds(undefined); buildResultDispatch({ builds: [], buildDate: 0 }) }} >Clear Builds</Button>\n          </Box>\n          <Grid container display=\"flex\" spacing={1}>\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\n            <Grid item flexGrow={1} />\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(_e, v) => characterDispatch({ compareData: v })} size=\"small\">\n              <ToggleButton value={false} disabled={!compareData}>Show new builds</ToggleButton>\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n            </SolidToggleButtonGroup></Grid>\n          </Grid>\n        </CardContent>\n      </CardLight>\n      <OptimizationTargetContext.Provider value={optimizationTarget}>\n        {graphBuilds && <BuildList builds={graphBuilds} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} getLabel={getLabel0} setBuilds={setGraphBuilds} />}\n        <BuildList builds={builds} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} getLabel={getLabel1} />\n      </OptimizationTargetContext.Provider>\n    </DataContext.Provider>}\n  </Box>\n}\nfunction BuildList({ builds, setBuilds, characterKey, data, compareData, disabled, getLabel }: {\n  builds: string[][]\n  setBuilds?: (builds: string[][] | undefined) => void\n  characterKey?: \"\" | CharacterKey\n  data?: UIData\n  compareData: boolean\n  disabled: boolean\n  getLabel: (index: number) => Displayable\n}) {\n  const deleteBuild = useCallback((index: number) => {\n    if (setBuilds) {\n      const builds_ = [...builds]\n      builds_.splice(index, 1)\n      setBuilds(builds_)\n    }\n  },\n  [builds, setBuilds])\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {builds?.map((build, index) => characterKey && data && <DataContextWrapper\n      key={index + build.join()}\n      characterKey={characterKey}\n      build={build}\n      oldData={data}\n    >\n      <BuildItemWrapper index={index} label={getLabel(index)} build={build} compareData={compareData} disabled={disabled} deleteBuild={setBuilds ? deleteBuild : undefined} />\n    </DataContextWrapper>\n    )}\n  </Suspense>, [builds, characterKey, data, compareData, disabled, getLabel, deleteBuild, setBuilds])\n  return list\n}\nfunction BuildItemWrapper({ index, label, build, compareData, disabled, deleteBuild }: {\n  index: number\n  label: Displayable\n  build: string[]\n  compareData: boolean\n  disabled: boolean\n  deleteBuild?: (index: number) => void\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const location = useLocation()\n  const navigate = useNavigate()\n  const toTC = useCallback(() => {\n    const paths = location.pathname.split(\"/\")\n    paths.pop()\n    navigate(`${paths.join(\"/\")}/theorycraft`, { state: { build } })\n  }, [navigate, build, location.pathname])\n\n  return <BuildDisplayItem label={label} compareBuild={compareData} disabled={disabled}\n    extraButtonsLeft={<>\n      <Button color=\"info\" size=\"small\" startIcon={<Science />} onClick={toTC}>{t(\"theorycraftButton\")}</Button>\n      {deleteBuild && <Button color=\"error\" size=\"small\" startIcon={<DeleteForever />} onClick={() => deleteBuild(index)}>{t(\"removeBuildButton\")}</Button>}\n    </>}\n  />\n}\n\ntype Prop = {\n  children: React.ReactNode\n  characterKey: CharacterKey,\n  build: string[],\n  oldData: UIData,\n}\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\n  const { database } = useContext(DatabaseContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  // Update the build when the build artifacts are changed.\n  const [dirty, setDirty] = useForceUpdate()\n  useEffect(() => database.arts.followAny((id) => build.includes(id) && setDirty()), [database, build, setDirty])\n  const buildsArts = useMemo(() => dirty && build.map(i => database.arts.get(i)!), [dirty, build, database])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, buildsArts)\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\n  if (!providerValue) return null\n  return <DataContext.Provider value={providerValue}>\n    {children}\n  </DataContext.Provider>\n}\n","import { Close, Difference } from \"@mui/icons-material\"\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { DataContext } from \"../../../../Context/DataContext\"\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\nimport { objectMap } from \"../../../../Util/Util\"\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\n\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onShow, onHide] = useBoolState(false)\n\n  return <>\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\n      <CompareContent artId={artId} weaponId={weaponId} onHide={onHide} />\n    </ModalWrapper>\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\n    </Tooltip>\n  </>\n}\nfunction CompareContent({ artId, weaponId, onHide }: { artId?: string, weaponId?: string, onHide: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { data: oldData } = useContext(DataContext)\n  const build = useMemo(() => {\n    const newArt = database.arts.get(artId ?? \"\")\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\n    return Object.values(artmap).filter(a => a)\n  }, [database, equippedArtifacts, artId])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\n      <BuildDisplayItem compareBuild={true} extraButtonsLeft={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /></>} extraButtonsRight={<><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\n    </DataContext.Provider>}\n  </Suspense>\n}\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\nimport { SlotKey } from \"../../../../Types/consts\"\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\nimport CompareBuildButton from \"./CompareBuildButton\"\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\n\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\n\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\n\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\n\n  const brPt = useMediaQueryUp()\n\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\n  const artIdList = useMemo(() => {\n    const filterFunc = filterFunction(filterOption, filterConfigs)\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\n\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\n    <CardDark>\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\n        </Suspense>\n        <Box mt={1}>\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\n              {artIdList.map(id =>\n                <Grid item key={id} xs={1} >\n                  <ArtifactCard\n                    artifactId={id}\n                    extraButtons={<CompareBuildButton artId={id} />}\n                    onClick={clickHandler}\n                  />\n                </Grid>)}\n            </Grid>\n          </Suspense>\n        </Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\nimport usePromise from \"../../../../ReactHooks/usePromise\"\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\nimport { weaponFilterConfigs, weaponSortConfigs, weaponSortMap } from '../../../../Util/WeaponSort'\nimport CompareBuildButton from \"./CompareBuildButton\"\n\nconst rarityHandler = handleMultiSelect([...allRarities])\n\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id: string) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\n\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = useMemo(() => (weaponSheets && dbDirty && database.weapons.values\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, weaponFilterConfigs(weaponSheets)))\n    .sort(sortFunction(weaponSortMap[\"level\"] ?? [], false, weaponSortConfigs(weaponSheets)))\n    .map(weapon => weapon.id)) ?? []\n    , [dbDirty, database, weaponSheets, rarity, weaponTypeKey, deferredSearchTerm])\n\n  return <ModalWrapper open={show} onClose={onClose} >\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Grid container spacing={1} mb={1}>\n          <Grid item>\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\n              </ToggleButton>)}\n            </SolidToggleButtonGroup>\n          </Grid>\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"page_weapon:weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          {weaponIdList.map(weaponId =>\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\n              <WeaponCard\n                weaponId={weaponId}\n                onClick={clickHandler}\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\n              />\n            </Grid>)}\n        </Grid>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Settings, SwapHoriz } from '@mui/icons-material';\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery, useTheme } from '@mui/material';\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\nimport ModalWrapper from '../../../../Components/ModalWrapper';\nimport PercentBadge from '../../../../Components/PercentBadge';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Artifact from '../../../../Data/Artifacts/Artifact';\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\nimport useBoolState from '../../../../ReactHooks/useBoolState';\nimport useCharMeta from '../../../../ReactHooks/useCharMeta';\nimport usePromise from '../../../../ReactHooks/usePromise';\nimport { allSubstatKeys } from '../../../../Types/artifact';\nimport { allSlotKeys, charKeyToLocCharKey, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport ArtifactSwapModal from './ArtifactSwapModal';\nimport WeaponSwapModal from './WeaponSwapModal';\n\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\n\nexport default function EquipmentSection() {\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { teamData, data } = useContext(DataContext)\n  const weaponSheet = teamData[characterKey]?.weaponSheet\n  const [weaponId, setweaponId] = useState(\"\")\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\n\n  //triggers when character swap weapons\n  useEffect(() => {\n    if (weaponId && weaponId !== equippedWeapon)\n      setweaponId(equippedWeapon)\n  }, [weaponId, equippedWeapon])\n\n  const theme = useTheme();\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\n  const { rvFilter } = useCharMeta(characterKey)\n  const deferredRvFilter = useDeferredValue(rvFilter)\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\n  return <Box >\n    <Suspense fallback={false}>\n      <WeaponEditor\n        weaponId={weaponId}\n        footer\n        onClose={hideWeapon}\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\n      />\n    </Suspense>\n    <Grid container spacing={1}>\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        {weaponDoc && weaponDoc}\n        <ArtifactSectionCard />\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\n        </Grid>\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\n          {!!data.get(input.art[slotKey].id).value ?\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editorProps={{}} canExclude canEquip /> :\n            <ArtSwapCard slotKey={slotKey} />}\n        </Grid>)}\n      </Grid>\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <ArtifactSectionCard />\n        </Grid>\n      </Grid>}\n    </Grid>\n  </Box>\n}\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\n    <CardContent>\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\n    </CardContent>\n    <Divider />\n    <Box sx={{\n      flexGrow: 1,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }}\n    >\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\n      </Button>\n    </Box>\n  </CardLight>\n}\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\n  </>\n}\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\n  </>\n}\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\n  </>\n}\nfunction ArtifactSectionCard() {\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\n  const { database } = useContext(DatabaseContext)\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\n  const unequipArts = useCallback(() => {\n    if (!character) return\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\n  }, [character, database, equippedArtifacts])\n\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\n  const { rvFilter } = useCharMeta(characterKey)\n  const setRVFilter = useCallback(rvFilter => database.charMeta.set(characterKey, { rvFilter }), [database, characterKey],)\n\n  const [show, onShow, onHide] = useBoolState()\n  const deferredrvFilter = useDeferredValue(rvFilter)\n  const { rvField, rvmField } = useMemo(() => {\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\n      const art = database.arts.get(artid)\n      if (art) {\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\n\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\n      }\n      return a\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\n    const rvField: IFieldDisplay = {\n      text: t`artifact:editor.curSubEff`,\n      value: !(currentEfficiency - currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\n    }\n    const rvmField: IFieldDisplay = {\n      text: t`artifact:editor.maxSubEff`,\n      canShow: () => !!(currentEfficiency_ - maxEfficiency_),\n      value: !(maxEfficiency - maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\n    }\n    return { rvField, rvmField }\n  }, [t, deferredrvFilter, equippedArtifacts, database])\n\n  return <CardLight>\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\n    <CardContent >\n      <Stack spacing={1}>\n        <CardDark >\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\n          <ModalWrapper open={show} onClose={onHide}>\n            <CardDark>\n              <CardContent>\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\n              </CardContent>\n            </CardDark>\n          </ModalWrapper>\n          <FieldDisplayList >\n            <BasicFieldDisplay field={rvField} component={ListItem} />\n            {rvmField?.canShow?.(data) && <BasicFieldDisplay field={rvmField} component={ListItem} />}\n          </FieldDisplayList>\n        </CardDark>\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey + setNumKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\n          </CardDark>)\n        )}\n      </Stack>\n    </CardContent>\n  </CardLight>\n}\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport { Badge, Box, CardActionArea, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Assets from \"../../../../Assets/Assets\";\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport SqBadge from \"../../../../Components/SqBadge\";\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext } from \"../../../../Context/DataContext\";\nimport { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\nimport { getLevelString } from \"../../../../Data/LevelData\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\nimport useCharMeta from \"../../../../ReactHooks/useCharMeta\";\nimport { allSlotKeys, Ascension, ElementKey } from \"../../../../Types/consts\";\nimport { range } from \"../../../../Util/Util\";\nimport EquipmentSection from \"./EquipmentSection\";\n\nexport default function TabOverview() {\n  const scrollRef = useRef<HTMLDivElement>()\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\n\n  return <Stack spacing={1}>\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\n        <CharacterProfileCard />\n      </Grid>\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <EquipmentRow onClick={onScroll} />\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\n          <StatDisplayComponent />\n        </CardLight>\n      </Grid>\n    </Grid >\n    <Box ref={scrollRef}>\n      <EquipmentSection />\n    </Box>\n  </Stack>\n}\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\n    <Grid item xs={1}>\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\n    </Grid>\n    {allSlotKeys.map(slotKey =>\n      <Grid item key={slotKey} xs={1} >\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\n      </Grid>)}\n  </Grid>\n}\n/* Image card with star and name and level */\nfunction CharacterProfileCard() {\n  const { database } = useContext(DatabaseContext)\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(characterKey)\n  const navigate = useNavigate()\n  const charEle = data.get(input.charEle).value as ElementKey\n  const weaponTypeKey = characterSheet.weaponTypeKey\n  const level = data.get(input.lvl).value\n  const ascension = data.get(input.asc).value as Ascension\n  const constellation = data.get(input.constellation).value\n  const tlvl = {\n    auto: data.get(input.total.auto).value,\n    skill: data.get(input.total.skill).value,\n    burst: data.get(input.total.burst).value,\n  }\n  const tBoost = {\n    auto: data.get(input.bonus.auto).value,\n    skill: data.get(input.bonus.skill).value,\n    burst: data.get(input.bonus.burst).value,\n  }\n  const { favorite } = useCharMeta(characterKey)\n  return <CardLight sx={{ height: \"100%\" }} >\n    <Box sx={{ position: \"relative\" }}>\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\n          <StarsDisplay stars={characterSheet.rarity} colored />\n        </Typography>\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\n          <Chip color={charEle} sx={{ height: \"auto\" }}\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\n              {StatIcon[charEle]}\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\n            </Typography>} />\n        </Box>\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => database.charMeta.set(characterKey, { favorite: !favorite })}>\n            {favorite ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </Box>\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\n          <SqBadge>{getLevelString(level, ascension)}</SqBadge>\n        </Typography>\n      </Box>\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\n    </Box>\n    <Box>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\n        <Grid container spacing={1} mt={-1}>\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\n            <Grid item xs={4} key={tKey}>\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\n                overlap=\"circular\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  \"& > .MuiBadge-badge\": {\n                    fontSize: \"1.25em\",\n                    padding: \".25em .4em\",\n                    borderRadius: \".5em\",\n                    lineHeight: 1,\n                    height: \"1.25em\"\n                  }\n                }}>\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey)?.img} width=\"100%\" height=\"auto\" />\n              </Badge>\n            </Grid>)}\n        </Grid>\n      </CardActionArea>\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\n      <Grid container spacing={1}>\n        {range(1, 6).map(i =>\n          <Grid item xs={4} key={i}>\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey)?.img}\n                sx={{\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\n                }}\n                width=\"100%\" height=\"auto\" />\n            </CardActionArea>\n          </Grid>)}\n      </Grid>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\n        <Grid container columns={3} spacing={1}>\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\n        </Grid>\n      </CardActionArea>\n    </Box>\n  </CardLight >\n}\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery, useTheme } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from 'react';\nimport CardDark from \"../../../Components/Card/CardDark\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\nimport { DataContext } from '../../../Context/DataContext';\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\nimport { uiInput as input } from \"../../../Formula\";\nimport { NumNode } from \"../../../Formula/type\";\nimport { NodeDisplay } from '../../../Formula/uiData';\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport { DocumentSection } from \"../../../Types/sheet\";\nimport { range } from \"../../../Util/Util\";\n\nconst talentSpacing = {\n  xs: 12,\n  sm: 6,\n  md: 4\n}\n\nexport default function CharacterTalentPane() {\n  const { character, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(character.key)\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n  const ascension = data.get(input.asc).value\n  const constellation = data.get(input.constellation).value\n\n  const theme = useTheme();\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\n    <SkillDisplayCard\n      talentKey={`constellation${i}` as TalentSheetElementKey}\n      subtitle={`Constellation Lv. ${i}`}\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\n    />), [constellation, characterDispatch])\n  return <>\n    <ReactionDisplay />\n    <Grid container spacing={1}>\n      {/* constellations for 4column */}\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\n        {/* auto, skill, burst */}\n        {skillBurstList.map(([tKey, tText]) =>\n          <Grid item key={tKey} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>)}\n        {!!characterSheet.getTalentOfKey(\"sprint\",) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"sprint\"\n            subtitle=\"Alternative Sprint\"\n          />\n        </Grid>}\n        {!!characterSheet.getTalentOfKey(\"passive\") && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"passive\"\n            subtitle=\"Passive\"\n          />\n        </Grid>}\n        {/* passives */}\n        {passivesList.map(([tKey, tText, asc]) => {\n          let enabled = ascension >= asc\n          if (!characterSheet.getTalentOfKey(tKey)) return null\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>\n        })}\n      </Grid>\n      {/* constellations for < 4 columns */}\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\n        <Grid item xs={12}>\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        </Grid>\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\n      </Grid>}\n    </Grid>\n  </>\n}\nfunction ReactionDisplay() {\n  const { data } = useContext(DataContext)\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1}>\n        {Object.entries(reaction).filter(([_, node]) => !node.isEmpty).map(([key, node]) => {\n          return <Grid item key={key}>\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\n              <NodeFieldDisplay node={node} />\n            </CardContent></CardDark>\n          </Grid>\n        })}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\ntype SkillDisplayCardProps = {\n  talentKey: TalentSheetElementKey,\n  subtitle: string,\n  onClickTitle?: (any) => any\n}\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n\n  const actionWrapeprFunc = useCallback(\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\n    [onClickTitle],\n  )\n\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\n\n  let header: Displayable | null = null\n\n  if (talentKey in talent) {\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\n    const level = data.get(input.total[talentKey]).value\n    const asc = data.get(input.asc).value\n\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\n      {range(1, talentLimits[asc]).map(i =>\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\n    </DropdownButton>\n  }\n  const talentSheet = characterSheet.getTalentOfKey(talentKey)\n\n  // Hide header if the header matches the current talent\n  const hideHeader = (section: DocumentSection): boolean => {\n    let headerAction = section.header?.action\n    if (headerAction && (typeof headerAction !== \"string\")) {\n      const key: string = headerAction.props.children.props.key18\n      return key.includes(talentKey)\n    }\n    return false\n  }\n\n  return <CardLight sx={{ height: \"100%\" }}>\n    {header}\n    <CardContent>\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\n          <Grid item>\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\n          </Grid>\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\n          </Grid>\n        </Grid>\n      </ConditionalWrapper>\n      {/* Display document sections */}\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\n    </CardContent>\n  </CardLight>\n}\n","import { PersonAdd } from \"@mui/icons-material\";\nimport { AutocompleteProps, CardContent, CardHeader, Divider, Grid, Skeleton, Typography, Box } from \"@mui/material\";\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\nimport ThumbSide from \"../../../Components/Character/ThumbSide\";\nimport ColorText from \"../../../Components/ColoredText\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport GeneralAutocomplete, { GeneralAutocompleteOption } from \"../../../Components/GeneralAutocomplete\";\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../../Data/Characters/CharacterSheet\";\nimport { resonanceSheets } from \"../../../Data/Resonance\";\nimport { DatabaseContext } from \"../../../Database/Database\";\nimport { NodeDisplay } from \"../../../Formula/uiData\";\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\nimport useDBMeta from \"../../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../../ReactHooks/usePromise\";\nimport { CharacterKey, charKeyToCharName } from \"../../../Types/consts\";\nimport { objPathValue, range } from \"../../../Util/Util\";\n\nexport default function TabTeambuffs() {\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\n    <Grid container spacing={1}>\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <TeamBuffDisplay />\n        <ResonanceDisplay />\n      </Grid>\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\n        <TeammateDisplay index={i} />\n      </Grid>)}\n    </Grid>\n  </Box>\n}\nexport function TeamBuffDisplay() {\n  const { data, oldData } = useContext(DataContext)\n  const teamBuffs = data.getTeamBuff()\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\n  if (!nodes.length) return null\n  return <CardLight>\n    <CardContent>\n      <Typography>Team Buffs</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Grid container>\n        {nodes.map(([path, n]) => n && <Grid item xs={12} key={JSON.stringify(n.info)} >\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\n        </Grid>)}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\nfunction ResonanceDisplay() {\n  const { t } = useTranslation(\"page_character\")\n  const { data } = useContext(DataContext)\n  const { character: { team } } = useContext(CharacterContext)\n  const teamCount = team.reduce((a, t) => a + (t ? 1 : 0), 1)\n  return <>\n    <CardLight>\n      <CardHeader title={<span>{t<string>(\"tabTeambuff.team_reso\")} <strong><ColorText color={teamCount >= 4 ? \"success\" : \"warning\"}>({teamCount}/4)</ColorText></strong> <InfoTooltip title={<Typography>{t`tabTeambuff.resonance_tip`}</Typography>} /></span>}\n        titleTypographyProps={{ variant: \"subtitle2\" }} />\n    </CardLight>\n    {resonanceSheets.map((res, i) => {\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\n      const title = <span>{res.name} {icon}</span>\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        {res.canShow(data) && <Divider />}\n        {res.canShow(data) && <CardContent>\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\n        </CardContent>}\n      </CardLight>\n    })}\n  </>\n}\nfunction TeammateDisplay({ index }: { index: number }) {\n  const { teamData } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character\")\n  const { character: active, character: { key: activeCharacterKey }, characterDispatch } = useContext(CharacterContext)\n  const teamMateKey = active.team[index]\n  const team = useMemo(() => [activeCharacterKey, ...active.team].filter((t, i) => (i - 1) !== index), [active.team, activeCharacterKey, index])\n  const onClickHandler = useCharSelectionCallback()\n  const setTeammate = useCallback((charKey: CharacterKey | \"\") => characterDispatch({ type: \"team\", index, charKey }), [index, characterDispatch])\n\n  const dataBundle = teamData[teamMateKey]\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\n    character: { ...dataBundle.character, conditional: active.teamConditional[teamMateKey] ?? {} },\n    characterSheet: dataBundle.characterSheet,\n    characterDispatch: (state) => {\n      if (!teamMateKey) return\n      if (!(\"conditional\" in state)) return\n      const { conditional } = state\n      characterDispatch({ type: \"teamConditional\", teamMateKey: teamMateKey, conditional })\n    }\n  }, [active, teamMateKey, dataBundle, characterDispatch])\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\n    data: dataBundle.target,\n    teamData: teamData,\n  }, [dataBundle, teamData])\n  return <CardLight>\n    <TeammateAutocomplete characterKey={teamMateKey} team={team}\n      setChar={setTeammate}\n      label={t(\"teammate\", { count: index + 1 })}\n    />\n    {teamMateKey && teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\n        <CharacterCard characterKey={teamMateKey}\n          onClickHeader={onClickHandler}\n          // Need to wrap these elements with the providers for them to use the correct functions.\n          artifactChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharArtifactCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          weaponChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharWeaponCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          characterChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharTalentCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          isTeammateCard\n        />\n      </DataContext.Provider>}\n    </CharacterContext.Provider>}\n  </CardLight>\n}\nfunction CharArtifactCondDisplay() {\n  const { data, } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const sections = useMemo(() => artifactSheets &&\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\n      .flatMap(([setKey, setNums]) =>\n        setNums.flatMap(sn => artifactSheets(setKey)!.setEffectDocument(sn)!))\n    , [artifactSheets, data])\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\nfunction CharWeaponCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const weaponSheet = teamData[charKey]!.weaponSheet\n  if (!weaponSheet.document) return null\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\n}\nfunction CharTalentCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const characterSheet = teamData[charKey]!.characterSheet\n  const sections = Object.values(characterSheet.talent).flatMap(sts => sts.sections)\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\n\nfunction TeammateAutocomplete({ characterKey, team, label, setChar, autoCompleteProps = {} }:\n  { characterKey, team: Array<CharacterKey | \"\">, label: string, setChar: (k: CharacterKey | \"\") => void, autoCompleteProps?: Omit<AutocompleteProps<GeneralAutocompleteOption<CharacterKey | \"\">, false, true, false>, \"renderInput\" | \"onChange\" | \"options\"> }) {\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\", \"sheet_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\n  const toText = useCallback((key: CharacterKey): string => key.startsWith(\"Traveler\") ? `${t(`charNames_gen:${charKeyToCharName(key, gender)}`)} (${t(`sheet_gen:element.${characterSheets?.(key, gender)?.elementKey}`)})` : t(`charNames_gen:${key}`), [characterSheets, t, gender])\n  const toImg = useCallback((key: CharacterKey | \"\") => key === \"\" ? <PersonAdd /> : characterSheets ? <ThumbSide src={characterSheets(key, gender)?.thumbImgSide} sx={{ pr: 1 }} /> : <></>, [characterSheets, gender])//\n  const isFavorite = useCallback((key: CharacterKey) => database.charMeta.get(key).favorite, [database])\n  const onDisable = useCallback(({ key }: { key: CharacterKey | \"\" }) => team.filter(t => t && t !== characterKey).includes(key) || (key.startsWith(\"Traveler\") && team.some((t, i) => t.startsWith(\"Traveler\"))), [team, characterKey])\n  const values: GeneralAutocompleteOption<CharacterKey | \"\">[] = useMemo(() => [{\n    key: \"\",\n    label: t`page_character:none`,\n  },\n  ...database.chars.keys\n    .map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\n    .sort((a, b) => {\n      if (a.favorite && !b.favorite) return -1\n      if (!a.favorite && b.favorite) return 1\n      return a.label.localeCompare(b.label)\n    })\n  ], [t, toText, isFavorite, database])\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><GeneralAutocomplete size=\"small\" label={label} options={values} valueKey={characterKey} clearKey=\"\" onChange={setChar} getOptionDisabled={onDisable} toImg={toImg} {...autoCompleteProps} /></Suspense>\n}\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CopyAll, DeleteForever, Info, Refresh } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardHeader, Divider, Grid, ListItem, MenuItem, Skeleton, Slider, Stack, ToggleButton, Typography } from \"@mui/material\";\nimport React, { Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport { ArtifactSetSingleAutocomplete } from \"../../../../Components/Artifact/ArtifactAutocomplete\";\nimport ArtifactSetTooltip from \"../../../../Components/Artifact/ArtifactSetTooltip\";\nimport SetEffectDisplay from \"../../../../Components/Artifact/SetEffectDisplay\";\nimport { slotIconSVG } from \"../../../../Components/Artifact/SlotNameWIthIcon\";\nimport BootstrapTooltip from \"../../../../Components/BootstrapTooltip\";\nimport CardDark from \"../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ColorText from \"../../../../Components/ColoredText\";\nimport CustomNumberInput from \"../../../../Components/CustomNumberInput\";\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../../Components/DropdownMenu/DropdownButton\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../../../Components/FieldDisplay\";\nimport FontAwesomeSvgIcon from \"../../../../Components/FontAwesomeSvgIcon\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport LevelSelect from \"../../../../Components/LevelSelect\";\nimport RefinementDropdown from \"../../../../Components/RefinementDropdown\";\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\";\nimport { StatColoredWithUnit, StatWithUnit } from \"../../../../Components/StatDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../../Context/DataContext\";\nimport Artifact, { maxArtifactLevel } from \"../../../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../../../Data/Artifacts/ArtifactSheet\";\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\";\nimport { initCharTC } from \"../../../../Database/DataManagers/CharacterTCData\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../../../Formula/api\";\nimport { constant, percent } from \"../../../../Formula/utils\";\nimport KeyMap, { cacheValueString } from \"../../../../KeyMap\";\nimport useBoolState from \"../../../../ReactHooks/useBoolState\";\nimport usePromise from \"../../../../ReactHooks/usePromise\";\nimport useTeamData from \"../../../../ReactHooks/useTeamData\";\nimport { ICachedArtifact, MainStatKey, SubstatKey } from \"../../../../Types/artifact\";\nimport { ICharTC, ICharTCArtifactSlot } from \"../../../../Types/character\";\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey, SubstatType, substatType, WeaponTypeKey } from \"../../../../Types/consts\";\nimport { ICachedWeapon } from \"../../../../Types/weapon\";\nimport { deepClone, objectMap } from \"../../../../Util/Util\";\nimport { defaultInitialWeaponKey } from \"../../../../Util/WeaponUtil\";\nimport useCharTC from \"./useCharTC\";\nconst WeaponSelectionModal = React.lazy(() => import('../../../../Components/Weapon/WeaponSelectionModal'))\n\ntype ISet = Partial<Record<ArtifactSetKey, 1 | 2 | 4>>\nexport default function TabTheorycraft() {\n  const { database } = useContext(DatabaseContext)\n  const { data: oldData } = useContext(DataContext)\n  const { character, character: { key: characterKey, compareData }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const data = useCharTC(characterKey, defaultInitialWeaponKey(characterSheet.weaponTypeKey))\n  const setData = useCallback((data: ICharTC) => database.charTCs.set(characterKey, data), [characterKey, database])\n  const resetData = useCallback(() => {\n    setData(initCharTC(defaultInitialWeaponKey(characterSheet.weaponTypeKey)))\n  }, [setData, characterSheet])\n  const setWeapon = useCallback(\n    (action: Partial<ICharTC[\"weapon\"]>) => {\n      setData({ ...data, weapon: { ...data.weapon, ...action } })\n    },\n    [setData, data],\n  )\n\n  const copyFrom = useCallback(\n    (eWeapon: ICachedWeapon, build: ICachedArtifact[]) => {\n      const newData = initCharTC(eWeapon.key)\n      newData.artifact.substats.type = data.artifact.substats.type\n\n      newData.weapon.level = eWeapon.level\n      newData.weapon.ascension = eWeapon.ascension\n      newData.weapon.refinement = eWeapon.refinement\n\n      const sets = {}\n      build.forEach(art => {\n        if (!art) return\n        const { slotKey, setKey, substats, mainStatKey, level, rarity } = art\n        newData.artifact.slots[slotKey].level = level\n        newData.artifact.slots[slotKey].statKey = mainStatKey\n        newData.artifact.slots[slotKey].rarity = rarity\n        sets[setKey] = (sets[setKey] ?? 0) + 1\n        substats.forEach(substat => {\n          if (substat.key) newData.artifact.substats.stats[substat.key] = (newData.artifact.substats.stats[substat.key] ?? 0) + substat.accurateValue\n        })\n      })\n      newData.artifact.sets = Object.fromEntries(Object.entries(sets).map(([key, value]) => [key,\n        value === 3 ? 2 :\n          value === 5 ? 4 :\n            value === 1 && !(key as string).startsWith(\"PrayersFor\") ? 0 : value\n      ]).filter(([key, value]) => value))\n      setData(newData)\n    },\n    [data, setData],\n  )\n  const location = useLocation()\n  const { build: locBuild } = (location.state as { build: string[] } | undefined) ?? { build: undefined }\n  useEffect(() => {\n    if (!locBuild) return\n    const eWeapon = database.weapons.get(character.equippedWeapon)!\n    copyFrom(eWeapon, locBuild.map(i => database.arts.get(i)!))\n    // WARNING: if copyFrom is included, it will cause a render loop due to its setData <---> data\n    // eslint-disable-next-line\n  }, [locBuild, database])\n\n  const copyFromEquipped = useCallback(\n    () => {\n      const eWeapon = database.weapons.get(character.equippedWeapon)!\n      copyFrom(eWeapon, Object.values(character.equippedArtifacts).map(a => database.arts.get(a)!).filter(a => a))\n    },\n    [database, character.equippedArtifacts, character.equippedWeapon, copyFrom],\n  )\n\n  const weapon: ICachedWeapon = useMemo(() => {\n    return {\n      ...data.weapon,\n      location: \"\",\n      lock: false,\n      id: \"\"\n    }\n  }, [data])\n  const setArtifact = useCallback((artifact: ICharTC[\"artifact\"]) => {\n    const data_ = deepClone(data)\n    data_.artifact = artifact\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstatsType = useCallback((t: SubstatType) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.type = t\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstats = useCallback((setSubstats: Record<SubstatKey, number>) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.stats = setSubstats\n    setData(data_)\n  }, [data, setData])\n\n  const deferredData = useDeferredValue(data)\n  const overriderArtData = useMemo(() => {\n    const stats = { ...deferredData.artifact.substats.stats }\n    Object.values(deferredData.artifact.slots).forEach(({ statKey, rarity, level }) =>\n      stats[statKey] = (stats[statKey] ?? 0) + Artifact.mainStatValue(statKey, rarity, level))\n    return {\n      art: objectMap(stats, (v, k) => k.endsWith(\"_\") ? percent(v / 100) : constant(v)),\n      artSet: objectMap(deferredData.artifact.sets, v => constant(v)),\n    }\n  }, [deferredData])\n\n  const overrideWeapon: ICachedWeapon = useMemo(() => ({\n    id: \"\",\n    location: \"\",\n    key: data.weapon.key,\n    level: data.weapon.level,\n    ascension: data.weapon.ascension,\n    refinement: data.weapon.refinement,\n    lock: false\n  }), [data])\n  const teamData = useTeamData(characterKey, 0, overriderArtData, overrideWeapon)\n\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n    }\n  }, [charUIData, teamData])\n  const dataContextValueWithOld: dataContextObj | undefined = useMemo(() => {\n    if (!dataContextValue) return undefined\n    return {\n      ...dataContextValue,\n      oldData: compareData ? oldData : undefined,\n    }\n  }, [dataContextValue, compareData, oldData])\n  return <Stack spacing={1}>\n    <CardLight>\n      <Box sx={{ display: \"flex\", gap: 1, p: 1 }}>\n        <Box sx={{ flexGrow: 1, display: \"flex\", gap: 1 }}>\n          <Button color=\"info\" onClick={copyFromEquipped} startIcon={<CopyAll />}>Copy from equipped</Button>\n          <Button color=\"error\" onClick={resetData} startIcon={<Refresh />}>Reset</Button>\n        </Box>\n        <SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n          <ToggleButton value={false} disabled={!compareData}>Show TC stats</ToggleButton>\n          <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n        </SolidToggleButtonGroup>\n      </Box>\n    </CardLight>\n    {dataContextValue ? <DataContext.Provider value={dataContextValue}>\n      <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n        <Grid item sx={{ flexGrow: -1 }}  >\n          <WeaponEditorCard weapon={weapon} setWeapon={setWeapon} weaponTypeKey={characterSheet.weaponTypeKey} />\n          <ArtifactMainLevelCard artifactData={data.artifact} setArtifactData={setArtifact} />\n        </Grid>\n        <Grid item sx={{ flexGrow: 1 }}  >\n          <ArtifactSubCard substats={data.artifact.substats.stats} setSubstats={setSubstats} substatsType={data.artifact.substats.type} setSubstatsType={setSubstatsType} mainStatKeys={Object.values(data.artifact.slots).map(s => s.statKey)} />\n        </Grid>\n      </Grid >\n    </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={500} />}\n    <CardLight sx={{ flexGrow: 1, p: 1 }}>\n      {dataContextValueWithOld ? <DataContext.Provider value={dataContextValueWithOld}>\n        <StatDisplayComponent />\n      </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={500} />}\n    </CardLight>\n\n  </Stack>\n}\n\nfunction WeaponEditorCard({ weapon, setWeapon, weaponTypeKey }: { weapon: ICachedWeapon, weaponTypeKey: WeaponTypeKey, setWeapon: (action: Partial<ICharTC[\"weapon\"]>) => void }) {\n  const { key, level = 0, refinement = 1, ascension = 0 } = weapon\n  const weaponSheet = usePromise(() => WeaponSheet.get(key), [key])\n  const [show, onShow, onHide] = useBoolState()\n  const { data } = useContext(DataContext)\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  return <CardLight sx={{ p: 1, mb: 1 }} >\n    <WeaponSelectionModal ascension={ascension} show={show} onHide={onHide} onSelect={k => setWeapon({ key: k })} weaponTypeFilter={weaponTypeKey} />\n    <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n      <Box display=\"flex\" gap={1}>\n        {weaponSheet && <Box\n          className={`grad-${weaponSheet.rarity}star`}\n          component=\"img\"\n          src={weaponSheet.getImg(weapon.ascension)}\n          sx={{ flexshrink: 1, flexBasis: 0, maxWidth: \"30%\", borderRadius: 1 }}\n        />}\n        <Stack spacing={1} flexGrow={1}>\n          <Button fullWidth color=\"info\" sx={{ flexGrow: 1 }} onClick={onShow}><Box sx={{ maxWidth: \"10em\" }}>{weaponSheet?.name}</Box></Button>\n          {weaponSheet?.hasRefinement && <RefinementDropdown refinement={refinement} setRefinement={r => setWeapon({ refinement: r })} />}\n        </Stack>\n      </Box>\n      {weaponSheet && <LevelSelect level={level} ascension={ascension} setBoth={setWeapon} useLow={!weaponSheet.hasRefinement} />}\n      <CardDark >\n        <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        <Divider />\n        {weaponUIData && <FieldDisplayList>\n          {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\n            const n = weaponUIData.get(node)\n            if (n.isEmpty || !n.value) return null\n            return <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} component={ListItem} />\n          })}\n        </FieldDisplayList>}\n      </CardDark>\n      {data && weaponSheet?.document && <DocumentDisplay sections={weaponSheet.document} />}\n    </Box>\n  </CardLight >\n}\n\nfunction ArtifactMainLevelCard({ artifactData, setArtifactData }:\n  { artifactData: ICharTC[\"artifact\"], setArtifactData: (a: ICharTC[\"artifact\"]) => void }) {\n  const setSlot = useCallback((slotKey: SlotKey) => (slot: ICharTCArtifactSlot) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.slots[slotKey] = slot\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  const setArtSet = useCallback((artSet: ISet) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.sets = artSet\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  return <Stack spacing={1} >\n    <CardLight sx={{ p: 1 }}>\n      <Stack spacing={1}>\n        {allSlotKeys.map(s => <ArtifactMainLevelSlot key={s} slotKey={s} slot={artifactData.slots[s]} setSlot={setSlot(s)} />)}\n      </Stack>\n    </CardLight>\n    <Suspense fallback={<Skeleton variant='rectangular' width='100%' height={200} />}>\n      <ArtifactSetsEditor artSet={artifactData.sets} setArtSet={setArtSet} />\n    </Suspense>\n  </Stack>\n}\nfunction ArtifactMainLevelSlot({ slotKey, slot, setSlot: setSlotProp }: { slotKey: SlotKey, slot: ICharTCArtifactSlot, setSlot: (s: ICharTCArtifactSlot) => void }) {\n  const { level, statKey, rarity } = slot\n  const keys = Artifact.slotMainStats(slotKey)\n  const setSlot = useCallback((action: Partial<ICharTCArtifactSlot>) => {\n    setSlotProp({ ...slot, ...action })\n  }, [slot, setSlotProp])\n  const setRarity = useCallback(\n    (r: ArtifactRarity) => {\n      const mLvl = maxArtifactLevel[r] ?? 0\n      if (level > mLvl) setSlot({ rarity: r, level: mLvl })\n      else setSlot({ rarity: r })\n    }, [level, setSlot])\n\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n    <FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"5em\", flexGrow: 1, display: \"flex\" }}>\n      {keys.length === 1 ?\n        <Box p={1} justifyContent=\"center\" alignItems=\"center\" width=\"100%\" display=\"flex\" gap={1}>{StatIcon[keys[0]]}{KeyMap.getStr(keys[0])}</Box> :\n        <DropdownButton sx={{ px: 0 }} fullWidth title={<StatWithUnit statKey={statKey} />} color={KeyMap.getVariant(statKey) ?? \"success\"}>\n          {keys.map(msk =>\n            <MenuItem key={msk} disabled={statKey === msk} onClick={() => setSlot({ statKey: msk })}>\n              <StatColoredWithUnit statKey={msk} />\n            </MenuItem>)}\n        </DropdownButton>}\n    </CardDark>\n    <DropdownButton sx={{ px: 0 }} title={<span>{rarity} <FontAwesomeIcon icon={faStar} /></span>} >\n      {[5, 4, 3].map(r =>\n        <MenuItem key={r} disabled={rarity === r} onClick={() => setRarity(r as ArtifactRarity)}>\n          <span>{r} <FontAwesomeIcon icon={faStar} /></span>\n        </MenuItem>)}\n    </DropdownButton>\n    <CustomNumberInput startAdornment=\"+\" value={level} color={Artifact.levelVariant(level)} onChange={l => l !== undefined && setSlot({ level: l })} sx={{ borderRadius: 1, pl: 1, my: 0, height: \"100%\" }} inputProps={{ sx: { pl: 0.5, width: \"2em\" }, max: 20, min: 0 }} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"4em\" }}>\n      <Box p={1} textAlign=\"center\">{`${cacheValueString(Artifact.mainStatValue(statKey, rarity, level), KeyMap.unit(statKey))}${KeyMap.unit(statKey)}`}</Box>\n    </CardDark>\n  </Box>\n}\n\nfunction ArtifactSetsEditor({ artSet, setArtSet }: { artSet: ISet, setArtSet(artSet: ISet) }) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const setSet = useCallback((setKey: ArtifactSetKey | \"\") => {\n    if (!setKey || !artifactSheets) return\n    setArtSet({ ...artSet, [setKey]: parseInt(Object.keys(artifactSheets(setKey).setEffects)[0]) })\n  }, [artSet, setArtSet, artifactSheets])\n\n  const setValue = useCallback((setKey: ArtifactSetKey) => (value: 1 | 2 | 4) => setArtSet({ ...artSet, [setKey]: value }), [artSet, setArtSet])\n  const deleteValue = useCallback((setKey: ArtifactSetKey) => () => {\n    const { [setKey]: _, ...rest } = artSet\n    setArtSet({ ...rest })\n  }, [artSet, setArtSet])\n\n  const remaining = 5 - Object.values(artSet).reduce((a, b) => a + b, 0)\n\n  return <Stack spacing={1} sx={{ flexGrow: 1 }}>\n    {Object.entries(artSet).map(([setKey, value]) => <ArtifactSetEditor key={setKey} setKey={setKey} value={value} setValue={setValue(setKey)} deleteValue={deleteValue(setKey)} remaining={remaining} />)}\n    <CardLight sx={{ flexGrow: 1 }}>\n      <ArtifactSetSingleAutocomplete\n        showDefault\n        disableClearable\n        size=\"small\"\n        artSetKey={\"\"}\n        setArtSetKey={setSet}\n        sx={(theme) => ({\n          flexGrow: 1,\n          \".MuiFilledInput-root\": {\n            borderBottomRightRadius: theme.shape.borderRadius,\n            borderBottomLeftRadius: theme.shape.borderRadius\n          }\n        })}\n        defaultText={\"New Artifact Set\"}\n        disable={(setKey) => Object.keys(artSet).includes(setKey) || !artifactSheets?.(setKey) || Object.keys(artifactSheets(setKey).setEffects).every(n => parseInt(n) > remaining)}\n      />\n    </CardLight>\n\n  </Stack>\n}\nfunction ArtifactSetEditor({ setKey, value, setValue, deleteValue, remaining }: { setKey: ArtifactSetKey, value: 1 | 2 | 4, setValue: (v: 1 | 2 | 4) => void, deleteValue: () => void, remaining: number }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (value < 4 || !artifactSheet) return []\n    return Object.keys(artifactSheet.setEffects).filter(setNumKey => artifactSheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [artifactSheet, value])\n\n  if (!artifactSheet) return null\n  return <CardLight>\n    <Box display=\"flex\">\n      <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={value}>\n        <Box flexGrow={1} p={1} display=\"flex\" gap={1} alignItems=\"center\">\n          <ImgIcon size={2} sx={{ m: -1 }} src={artifactSheet.defIconSrc} />\n          <Box >{artifactSheet.setName}</Box>\n          <Info />\n        </Box>\n      </ArtifactSetTooltip>\n      <ButtonGroup>\n        <DropdownButton size=\"small\" title={<Box whiteSpace=\"nowrap\">{value}-set</Box>}>\n          {Object.keys(artifactSheet.setEffects).map(setKey => parseInt(setKey)).map(setKey =>\n            <MenuItem key={setKey} disabled={value === setKey || setKey > (remaining + value)} onClick={() => setValue(setKey as 1 | 2 | 4)}>{setKey}-set</MenuItem>\n          )}\n        </DropdownButton>\n        <Button color=\"error\" size=\"small\" onClick={deleteValue}>\n          <DeleteForever />\n        </Button>\n      </ButtonGroup>\n    </Box>\n    {!!set4CondNums.length && <Stack spacing={1} sx={{ p: 1 }}>\n      {set4CondNums.map(setNumKey =>\n        <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n      )}\n    </Stack>}\n  </CardLight>\n}\nfunction ArtifactSubCard({ substats, setSubstats, substatsType, setSubstatsType, mainStatKeys }: { substats: Record<SubstatKey, number>, setSubstats: (substats: Record<SubstatKey, number>) => void, substatsType: SubstatType, setSubstatsType: (t: SubstatType) => void, mainStatKeys: MainStatKey[] }) {\n  const setValue = useCallback((key: SubstatKey) => (v: number) => setSubstats({ ...substats, [key]: v }), [substats, setSubstats])\n  const { t } = useTranslation(\"page_character\")\n  const rv = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k)), 0) * 100\n  const rolls = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k, undefined, substatsType)), 0)\n  return <CardLight sx={{ p: 1, height: \"100%\" }}>\n    <Box sx={{ mb: 1, display: \"flex\", gap: 1 }}>\n      <DropdownButton fullWidth title={t(`tabTheorycraft.substatType.${substatsType}`)}>\n        {substatType.map(st => <MenuItem key={st} disabled={substatsType === st} onClick={() => setSubstatsType(st)}>{t(`tabTheorycraft.substatType.${st}`)}</MenuItem>)}\n      </DropdownButton>\n      <BootstrapTooltip title={<Typography>{t`tabTheorycraft.maxTotalRolls`}</Typography>} placement=\"top\">\n        <CardDark sx={{ textAlign: \"center\", py: 0.5, px: 1, minWidth: \"15em\", whiteSpace: \"nowrap\", display: \"flex\", gap: 2, justifyContent: \"flex-end\", alignItems: \"center\" }}>\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >Rolls: <strong>{rolls.toFixed(0)}</strong></ColorText>\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\n        </CardDark>\n      </BootstrapTooltip>\n    </Box>\n    <Stack spacing={1}>\n      {Object.entries(substats).map(([k, v]) => <ArtifactSubstatEditor key={k} statKey={k} value={v} setValue={setValue(k)} substatsType={substatsType} mainStatKeys={mainStatKeys} />)}\n    </Stack>\n  </CardLight>\n}\nfunction ArtifactSubstatEditor({ statKey, value, setValue, substatsType, mainStatKeys }: { statKey: SubstatKey, value: number, setValue: (v: number) => void, substatsType: SubstatType, mainStatKeys: MainStatKey[] }) {\n  const { t } = useTranslation(\"page_character\")\n  const substatValue = Artifact.substatValue(statKey, 5, substatsType)\n  const [rolls, setRolls] = useState(() => value / substatValue)\n  useEffect(() => setRolls(value / substatValue), [value, substatValue])\n\n  const unit = KeyMap.unit(statKey)\n  const displayValue = rolls * substatValue\n\n  const rv = (rolls * substatValue) / Artifact.substatValue(statKey) * 100\n  const numMains = mainStatKeys.reduce((t, ms) => t + (ms === statKey ? 1 : 0), 0)\n  const maxRolls = (5 - numMains) * 6\n  // 0.0001 to nudge float comparasion\n  const invalid = (rolls - 0.0001) > maxRolls\n  const setRValue = useCallback((r: number) => setValue(r * substatValue), [setValue, substatValue])\n\n  return <Stack spacing={0.5}>\n    <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n      <CardDark sx={{ p: 0.5, minWidth: \"11em\", flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        {StatIcon[statKey]}{KeyMap.getStr(statKey)}{KeyMap.unit(statKey)}\n      </CardDark>\n      <BootstrapTooltip title={<Typography>{t(numMains ? `tabTheorycraft.maxRollsMain` : `tabTheorycraft.maxRolls`, { value: maxRolls })}</Typography>} placement=\"top\">\n        <CardDark sx={{ textAlign: \"center\", p: 0.5, minWidth: \"8em\" }}>\n          <ColorText color={invalid ? \"warning\" : undefined}>RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\n        </CardDark>\n      </BootstrapTooltip>\n    </Box>\n    <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n      <CustomNumberInput\n        color={displayValue ? \"success\" : \"primary\"}\n        float={KeyMap.unit(statKey) === \"%\"}\n        endAdornment={KeyMap.unit(statKey) || <Box width=\"1em\" component=\"span\" />}\n        value={parseFloat(displayValue.toFixed(2))}\n        onChange={v => v !== undefined && setValue(v)}\n        sx={{ borderRadius: 1, px: 1, height: \"100%\", width: \"6em\" }}\n        inputProps={{ sx: { textAlign: \"right\" }, min: 0 }} />\n      <CardDark sx={{ px: 2, flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Slider\n          size=\"small\"\n          value={rolls}\n          max={maxRolls}\n          min={0}\n          step={1}\n          marks\n          onChange={(e, v) => setRolls(v as number)}\n          onChangeCommitted={(e, v) => setRValue(v as number)}\n        />\n      </CardDark>\n      <CustomNumberInput\n        color={value ? (invalid ? \"warning\" : \"success\") : \"primary\"}\n        float\n        startAdornment={<Box sx={{ whiteSpace: \"nowrap\", width: \"7em\", display: \"flex\", justifyContent: \"space-between\" }}><span>{cacheValueString(substatValue, unit)}{unit}</span><span>x</span></Box>}\n        value={parseFloat(rolls.toFixed(2))}\n        onChange={v => v !== undefined && setValue(v * substatValue)}\n        sx={{ borderRadius: 1, px: 1, my: 0, height: \"100%\", width: \"7em\" }}\n        inputProps={{ sx: { textAlign: \"right\", pr: 0.5, }, min: 0, step: 1 }} />\n    </Box>\n  </Stack>\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { CharacterKey, WeaponKey } from \"../../../../Types/consts\"\n\nexport default function useCharTC(characterKey: CharacterKey, defWeapon: WeaponKey) {\n  const { database } = useContext(DatabaseContext)\n  const [charTC, setCharTC] = useState(() => database.charTCs.getWithInit(characterKey, defWeapon))\n  useEffect(() => setCharTC(database.charTCs.getWithInit(characterKey, defWeapon)), [database, characterKey, defWeapon])\n  useEffect(() =>\n    characterKey ? database.charTCs.follow(characterKey, (k, r, v) => r === \"update\" && setCharTC(v)) : undefined,\n    [characterKey, setCharTC, database])\n  return charTC\n}\n","import { MenuItem } from '@mui/material';\nimport { useContext } from 'react';\nimport ColorText from '../../Components/ColoredText';\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { stg } from '../../Data/SheetUtil';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\nimport { allElements, travelerElements, TravelerKey, TravelerToElement } from '../../Types/consts';\n\nexport default function TravelerElementSelect() {\n  const { character } = useContext(CharacterContext)\n  const { key } = character\n  const setCharacter = useCharSelectionCallback()\n  if (!(key.startsWith(\"Traveler\"))) return null\n\n  const elementKey = allElements.find(e => key.toLowerCase().includes(e))!\n\n  return <DropdownButton color={elementKey} title={<strong>{stg(`element.${elementKey}`)}</strong>}>\n    {travelerElements.map(eleKey =>\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => setCharacter(TravelerToElement(key as TravelerKey, eleKey))}>\n        <strong><ColorText color={eleKey}>{stg(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\n  </DropdownButton>\n}\n","import { Female, Male } from '@mui/icons-material';\nimport { Button } from '@mui/material';\nimport { useCallback, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DatabaseContext } from '../../Database/Database';\nimport useDBMeta from '../../ReactHooks/useDBMeta';\n\nexport default function TravelerGenderSelect() {\n  const { t } = useTranslation(\"ui\")\n  const { database } = useContext(DatabaseContext)\n  const { character } = useContext(CharacterContext)\n  const { key } = character\n  const { gender } = useDBMeta()\n  const toggleGender = useCallback(() => database.dbMeta.set({ gender: gender === \"F\" ? \"M\" : \"F\" }), [gender, database])\n  if (!(key.startsWith(\"Traveler\"))) return null\n  return <Button onClick={toggleGender} startIcon={gender === \"F\" ? <Female /> : <Male />}><strong>{t(`gender.${gender}`)}</strong>  </Button>\n}\n","import { BarChart, Calculate, FactCheck, Groups, Person, Science, TrendingUp } from '@mui/icons-material';\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\nimport { Suspense, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\nimport LevelSelect from '../../Components/LevelSelect';\nimport SqBadge from '../../Components/SqBadge';\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\nimport { ChartData, GraphContext, GraphContextObj } from '../../Context/GraphContext';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport { DatabaseContext } from '../../Database/Database';\nimport useBoolState from '../../ReactHooks/useBoolState';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport useDBMeta from '../../ReactHooks/useDBMeta';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport useTitle from '../../ReactHooks/useTitle';\nimport { CharacterKey, charKeyToCharName } from '../../Types/consts';\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\nimport CharSelectDropdown from './CharSelectDropdown';\nimport FormulaModal from './FormulaModal';\nimport StatModal from './StatModal';\nimport TabBuild from './Tabs/TabOptimize';\nimport TabOverview from './Tabs/TabOverview';\nimport TabTalent from './Tabs/TabTalent';\nimport TabTeambuffs from './Tabs/TabTeambuffs';\nimport TabTheorycraft from './Tabs/TabTheorycraft';\nimport TravelerElementSelect from './TravelerElementSelect';\nimport TravelerGenderSelect from './TravelerGenderSelect';\n\nexport default function CharacterDisplay() {\n  const navigate = useNavigate();\n  const { database } = useContext(DatabaseContext)\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !database.chars.keys.includes(characterKey as CharacterKey)\n  if (invalidKey)\n    return <Navigate to=\"/characters\" />\n\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\n    </Suspense>\n  </Box>\n}\n\ntype CharacterDisplayCardProps = {\n  characterKey: CharacterKey,\n  onClose?: () => void,\n}\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\n  const character = useCharacter(characterKey)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n  const teamData = useTeamData(characterKey)\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\"])\n\n  useTitle(useMemo(() => `${t(`charNames_gen:${charKeyToCharName(characterKey, gender)}`)} - ${t(`page_character:tabs.${tab}`)}`, [t, characterKey, gender, tab]))\n\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n      oldData: undefined,\n    }\n  }, [charUIData, teamData])\n\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\n    if (!character || !characterSheet) return undefined\n    return {\n      character,\n      characterSheet,\n      characterDispatch\n    }\n  }, [character, characterSheet, characterDispatch])\n\n  const [chartData, setChartData] = useState(undefined as ChartData | undefined)\n  const [graphBuilds, setGraphBuilds] = useState<string[][]>()\n  const graphContextValue: GraphContextObj | undefined = useMemo(() => {\n    return {\n      chartData,\n      setChartData,\n      graphBuilds,\n      setGraphBuilds\n    }\n  }, [chartData, graphBuilds])\n\n  // Clear state when switching characters\n  useEffect(() => {\n    setChartData(undefined)\n    setGraphBuilds(undefined)\n  }, [characterKey])\n\n  return <CardDark >\n    {dataContextValue && characterContextValue && graphContextValue\n      ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}><GraphContext.Provider value={graphContextValue}>\n        <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <Box display=\"flex\" >\n            <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\n              <CharSelectDropdown />\n              <TravelerElementSelect />\n              <TravelerGenderSelect />\n              <DetailStatButton />\n              <CustomMultiTargetButton />\n              <FormulasButton />\n            </Box>\n            {!!onClose && <CloseButton onClick={onClose} />}\n          </Box>\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n            {character && <LevelSelect level={character.level} ascension={character.ascension} setBoth={characterDispatch} />}\n            <HitModeToggle size=\"small\" />\n            <InfusionAuraDropdown />\n            <ReactionToggle size=\"small\" />\n          </Box>\n          <CardLight>\n            <TabNav tab={tab} />\n          </CardLight>\n          <CharacterPanel />\n          <CardLight>\n            <TabNav tab={tab} />\n          </CardLight>\n        </CardContent></FormulaDataWrapper>\n      </GraphContext.Provider></DataContext.Provider></CharacterContext.Provider>\n      : <Skeleton variant='rectangular' width='100%' height={1000} />\n    }\n  </CardDark >\n}\nfunction CharacterPanel() {\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\n    <Routes>\n      {/* Character Panel */}\n      <Route index element={<TabOverview />} />\n      <Route path=\"/talent\" element={<TabTalent />} />\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\n      <Route path=\"/optimize\" element={<TabBuild />} />\n      <Route path=\"/theorycraft\" element={<TabTheorycraft />} />\n    </Routes>\n  </Suspense>\n}\nfunction TabNav({ tab }: { tab: string }) {\n  const { t } = useTranslation(\"page_character\")\n  return <Tabs\n    value={tab}\n    variant=\"scrollable\"\n    allowScrollButtonsMobile\n    sx={{\n      \"& .MuiTab-root:hover\": {\n        transition: \"background-color 0.25s ease\",\n        backgroundColor: \"rgba(255,255,255,0.1)\"\n      },\n    }}\n  >\n    <Tab sx={{ minWidth: \"20%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"theorycraft\" label={t(\"tabs.theorycraft\")} icon={<Science />} component={RouterLink} to=\"theorycraft\" />\n  </Tabs>\n}\n\n\nfunction DetailStatButton() {\n  const { t } = useTranslation(\"page_character\")\n  const [open, onOpen, onClose] = useBoolState()\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const bStatsNum = Object.keys(bonusStats).length\n  return <>\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>\n      {t`addStats.title`}{!!bStatsNum && <SqBadge sx={{ ml: 1 }} color=\"success\" >{bStatsNum}</SqBadge>}\n    </Button>\n    <StatModal open={open} onClose={onClose} />\n  </>\n}\nfunction FormulasButton() {\n  const { onModalOpen } = useContext(FormulaDataContext)\n  return <>\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\n    <FormulaModal />\n  </>\n}\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../Assets/Assets\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport { LocationAutocomplete } from \"../Components/Character/LocationAutocomplete\"\nimport LocationName from \"../Components/Character/LocationName\"\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { StarsDisplay } from \"../Components/StarDisplay\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport { nodeVStr } from \"../Formula/uiData\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { LocationKey } from \"../Types/consts\"\n\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\n  const { database } = useContext(DatabaseContext)\n  const databaseWeapon = useWeapon(weaponId)\n  const weapon = databaseWeapon\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\n\n  const filter = useCallback((cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType, [weaponSheet])\n\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\n  const setLocation = useCallback((k: LocationKey) => weaponId && database.weapons.set(weaponId, { location: k }), [database, weaponId])\n\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n\n  if (!weapon || !weaponSheet || !UIData) return null;\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\n  const img = weaponSheet.getImg(ascension)\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\n            {lock ? <Lock /> : <LockOpen />}\n          </IconButton>}\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\n            </Box>\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n          </Box>\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\n            <Box\n              component=\"img\"\n              src={img ?? \"\"}\n              width=\"auto\"\n              height=\"100%\"\n              sx={{ float: \"right\" }}\n            />\n          </Box>\n        </Box>\n        <CardContent>\n          {stats.map(node => {\n            if (!node.info.name) return null\n            return <Box key={JSON.stringify(node.info)} sx={{ display: \"flex\" }}>\n              <Typography flexGrow={1}>{node.info.icon} {node.info.name}</Typography>\n              <Typography>{nodeVStr(node)}</Typography>\n            </Box>\n          })}\n        </CardContent>\n      </ConditionalWrapper>\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Box sx={{ flexGrow: 1 }}>\n          {canEquip\n            ? <LocationAutocomplete location={location} setLocation={setLocation} filter={filter} autoCompleteProps={{ getOptionDisabled: t => !t.key, disableClearable: true }} />\n            : <LocationName location={location} />}\n        </Box>\n        <ButtonGroup sx={{ height: \"100%\" }}>\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\n            <Button color=\"info\" onClick={() => onEdit(id)} >\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n          </Button>}\n          {extraButtons}\n        </ButtonGroup>\n      </Box>\n    </CardLight>\n  </Suspense>\n}\n"],"names":["MenuItemWithImage","value","image","text","theme","isSelected","addlElement","props","MenuItem","ListItemIcon","ListItemText","primaryTypographyProps","style","fontWeight","typography","fontWeightMedium","fontWeightRegular","ArtifactMultiAutocomplete","allArtifactKeysWithGrouper","selectedArtifactKeys","setArtifactKeys","getName","getImage","label","useTheme","options","useMemo","map","key","grouper","Autocomplete","autoHighlight","multiple","disableCloseOnSelect","onChange","_","v","getOptionLabel","option","isOptionEqualToValue","renderInput","params","TextField","variant","InputLabelProps","color","palette","primary","length","type","renderOption","KeyMap","includes","renderTags","selected","getTagProps","index","element","allElementsWithPhy","ele","undefined","Chip","icon","ArtifactSetMultiAutocomplete","artSetKeys","setArtSetKeys","artifactSheets","usePromise","ArtifactSheet","t","useTranslation","allArtifactSetsAndRarities","Object","entries","flatMap","rarity","set","sort","sortByRarityAndName","defIcon","groupBy","toString","renderGroup","group","List","component","Box","ListSubheader","sx","top","stars","children","ArtifactMainStatMultiAutocomplete","mainStatKeys","setMainStatKeys","allMainStatKeys","StatIcon","ArtifactSubstatMultiAutocomplete","substatKeys","setSubstatKeys","allSubstatKeys","ArtifactSingleAutocomplete","selectedArtifactKey","setArtifactKey","disable","showDefault","defaultText","defaultIcon","concat","clearIcon","event","newValue","reason","getOptionDisabled","startAdornment","hasValue","ArtifactSetSingleAutocomplete","artSetKey","setArtSetKey","a","b","aName","i18n","bName","ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","TypeError","l","h","useEffect","width","display","alignItems","bgcolor","val","clamp","px","pl","inputProps","textAlign","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","ConditionalSelector","conditional","keys","states","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","Divider","st","ButtonGroup","orientation","disableElevation","isElement","disp","stateName","badgeColor","badgeText","ml","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","description","displayTitle","InfoTooltip","Typography","LevelSelect","level","ascension","useLow","ascensionMaxLevels","ascensionMaxLevelLow","ascensionMaxLevel","setLevel","maxLevelLow","maxLevel","findIndex","ascenML","setAscension","lowerAscension","contentDark","main","height","whiteSpace","ambiguousLevelLow","ambiguousLevel","milestoneLevelsLow","milestoneLevels","lv","as","RefinementDropdown","refinement","setRefinement","allRefinement","r","DisabledButton","styled","backgroundColor","secondary","TextButton","GraphContext","createContext","CharacterSelectionModal","React","CharSelectDropdown","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","Suspense","fallback","show","onHide","onSelect","ThumbSide","src","thumbImgSide","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","open","onClose","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Skeleton","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","database","DatabaseContext","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","handleChange","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","nodeVStr","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","CustomNumberInput","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","enemyOverride","flexWrap","EnemyResText","justifyContent","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","bsProps","xs","md","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","Grid","container","spacing","item","href","target","rel","contentLight","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","lg","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","JSON","stringify","specialNode","charEle","elementKey","isMelee","otherStatReadNodes","n","miscStatReadNodes","StatDisplayCard","py","OptimizationTargetContext","filterFeasiblePerm","artSetPerm","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","some","x","newArts","newNodes","pruneExclusion","maxValues","mapFormulas","f","operation","operands","pass","fail","thres","threshold","forceRename","affineNodes","Set","topLevelAffine","visit","isAffine","add","forEach","op","has","dynKeys","forEachNodes","nonConst","assertUnreachable","base","nextDynKey","affine","affineMap","Map","customRead","accu","reaffineArt","stat","constantFold","dyn","objectMap","constant","fromEntries","result","objectKeyMap","allSlotKeys","slot","id","offsets","baseValue","progress","allowRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","art","otherBetterEqual","otherMaybeBetter","otherBetter","canSwitch","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","newOperands","op1","op2","j","ranges","range","reads","Error","computeMinMax","allOperations","reduce","c","sum","NaN","minMaxes","Math","mergeBuilds","builds","maxNum","slice","mergePlot","plots","scale","round","plot","build","filters","_artSets","artSets","available","kind","sets","exclusionToAllowed","populateShapes","indexOfShape","check","shape","check_free","remaining","rainbows","isolated","missing","rejected","required","allowedSet","allowedCounts","counts","push","find","groupped","used","requiredRainbows","usableRainbows","delete","replacing","allowedRainbows","shapes","noFilter","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","document","setEffectDocument","useBuildSetting","characterKey","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","useForceUpdate","dbDirty","forceUpdate","followAny","artKeysByRarity","reverse","artSlotCount","slotKey","artKeys","getNumSlots","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","allArtifactSets","fakeDataContextObj","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","className","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","large","setExclusionSet","slots","set4CondNums","setEffects","doc","opacity","defIconSrc","paddingTop","artifactSlotIcon","parseInt","tot","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","Assets","mainStatKey","substats","location","mainStatLevel","mainStatUnit","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","Artifact","LocationIcon","charKey","chars","LocationToCharacterKey","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","SubstatDisplay","numRolls","rolls","rollColor","unit","alignContent","gender","useDBMeta","CharacterSheet","marginTop","BusinessCenter","StatDisplayComponent","Masonry","sm","xl","Section","optimizationTarget","displayNsReads","nodeKey","emphasize","WeaponCardNano","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","computeUIData","dataObjForWeapon","WeaponNameTooltip","getImg","hasRefinement","WeaponStat","ArtifactSetBadges","artifacts","currentlyEquipped","setToSlots","arti","acc","curr","slotarr1","slotarr","ArtifactSetBadge","artifactSheet","numInSet","setActive","ArtifactSetTooltip","BuildDisplayItem","compareBuild","extraButtonsRight","extraButtonsLeft","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","aid","charKeyToLocCharKey","weapons","statProviderContext","dataContext_","artifactIdsBySlot","artiId","artNanos","oldId","newId","CompareArtifactModal","Checkroom","onEquip","containerProps","minWidth","ArtifactCard","canExclude","canEquip","editorProps","disableSet","disableSlot","ChevronRight","fontSize","useBuildResult","buildResult","setBuildResult","buildResultDispatch","CustomDot","cx","cy","payload","selectedPoint","radiusSelected","radiusUnselected","colorSelected","colorUnselected","y","CustomShape","fill","stroke","points","CustomTooltip","xLabel","xUnit","yLabel","yUnit","setSelectedPoint","addBuildToList","tooltipProps","graphBuilds","canAddBuild","artiIds","artifactIds","artifactsBySlot","artiObj","clickAwayHandler","active","ClickAwayListener","onClickAway","stopPropagation","direction","ArtifactCardPico","artifactObj","valueString","EnhancedPoint","trueY","highlighted","this","ChartCard","plotBase","setPlotBase","showTooltip","chartData","showDownload","setshowDownload","showMin","setshowMin","setSliderLow","setSliderHigh","_e","displayData","downloadData","sliderMin","sliderMax","currentBuild","objectKeyValueMap","highlightedBuildsSlotMap","convertArtiIdsToArtiSlotMap","enhancedDatum","datumSlotMap","highlightedSlotMap","minimumData","point","last","pop","allData","plotBaseNode","objPathValue","getDisplay","buttonText","OptimizationTargetSelector","setTarget","Download","DataDisplay","Chart","plotNode","valueNode","Slider","valueLabelFormat","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","optTargetColor","highlightedColor","currentColor","lineColor","setGraphBuilds","chartOnClick","chartX","chartY","clickedX","clickedY","nearestDomPtData","Array","from","querySelectorAll","domPtA","domPtB","dataset","aChartX","aChartY","aDistance","sqrt","bChartX","bChartY","d","xValue","yValue","getNearestPoint","xLabelValue","getLabelFromNode","yLabelValue","ResponsiveContainer","ComposedChart","cursor","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","tickFormatter","Label","dy","YAxis","allowDecimals","angle","dx","Tooltip","wrapperStyle","Legend","Line","connectNulls","strokeWidth","isAnimationActive","dot","activeDot","Scatter","partialArtiSlotMap","textSuffix","artifactsSlotsToSelectMainStats","MainStatSelectionCard","numSel","mt","OptimizationTargetEditorList","oldPath","oldIndex","statFilters_","oldPathStr","oldFilterArr","pathStr","filterArr","splice","delTarget","setTargetValue","setTargetDisabled","settings","setting","OptimizationTargetEditorItem","parse","setValue","setDisabled","buttonStyle","buildConstraintNode","isPercent","showEmptyTargets","DeleteForever","StatFilterCard","UseEquipped","useEquippedArts","useBoolState","displayOptimize","tempEquipmentPriority","equipmentPriority","setTO","to","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","char","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","WorkerErr","reload","dynamic","setReadNodeKeys","dynamicData","compactArtifacts","allowPartial","flower","plume","goblet","circlet","sands","mainStatVal","endsWith","substat","accurateValue","TabBuild","compareData","setChartData","buildStatus","setBuildStatus","setArtsDirty","threads","defThreads","setDisplayOptimize","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","maxBuildsToShow","buildDate","teamData","useTeamData","optimizationTargetNode","isSM","useMediaQueryUp","cancelToken","workerErr","setWorkerErr","generateBuilds","getThreshold","fetchContinueWork","fetchPruningWork","fetchRequestWork","requestFilters","command","unprunedFilters","next","done","minCount","minFilterCount","buildValues","cantTakeList","ek","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","unoptimizedOptimizationTargetNode","targetNode","valueFilter","filterNode","cancelled","Promise","unoptimizedNodes","setPerms","plotBaseNumNode","prepruneArts","optimize","maxRequestFilterInFlight","Symbol","iterator","idleWorkers","splittingWorkers","workers","finalizedList","worker","Worker","URL","addEventListener","console","error","setup","maxBuilds","postMessage","countCommand","finalize","finalized","onmessage","source","terminate","pruned","prepruned","log","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","Date","targetSelector","getLabel0","getLabel1","Link","RouterLink","CharacterCard","maxBuildsToShowList","TrendingUp","SolidToggleButtonGroup","exclusive","ToggleButton","Provider","BuildList","getLabel","setBuilds","deleteBuild","builds_","DataContextWrapper","BuildItemWrapper","join","useLocation","navigate","useNavigate","toTC","paths","pathname","Science","dirty","setDirty","buildsArts","providerValue","CompareBuildButton","artId","onShow","CompareContent","arrow","Difference","newArt","artmap","dataProviderValue","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","extraButtons","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","weaponSheets","setRarity","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","weaponType","weaponFilterConfigs","sortFunction","weaponSortMap","weaponSortConfigs","star","autoFocus","InputProps","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","rvFilter","useCharMeta","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","setRVFilter","charMeta","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","constellation","tlvl","auto","skill","burst","tBoost","favorite","left","colored","Favorite","FavoriteBorder","right","getLevelString","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","teamCount","titleTypographyProps","resonanceSheets","res","desc","activeCharacterKey","teamMateKey","onClickHandler","setTeammate","dataBundle","teammateCharacterContext","teamConditional","teamMateDataContext","TeammateAutocomplete","setChar","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","sts","autoCompleteProps","characterSheets","toText","startsWith","charKeyToCharName","toImg","PersonAdd","pr","isFavorite","onDisable","localeCompare","GeneralAutocomplete","valueKey","clearKey","WeaponSelectionModal","TabTheorycraft","defWeapon","charTCs","getWithInit","charTC","setCharTC","useCharTC","defaultInitialWeaponKey","setData","resetData","initCharTC","setWeapon","copyFrom","eWeapon","newData","artifact","stats","locBuild","copyFromEquipped","lock","setArtifact","data_","setSubstatsType","setSubstats","deferredData","overriderArtData","overrideWeapon","charUIData","dataContextValue","dataContextValueWithOld","CopyAll","Refresh","WeaponEditorCard","ArtifactMainLevelCard","artifactData","setArtifactData","ArtifactSubCard","substatsType","weaponUIData","weaponTypeFilter","flexshrink","setSlot","artifactData_","setArtSet","ArtifactMainLevelSlot","ArtifactSetsEditor","setSlotProp","mLvl","maxArtifactLevel","FontAwesomeSvgIcon","slotIconSVG","msk","faStar","my","setSet","deleteValue","rest","ArtifactSetEditor","disableClearable","setName","Info","rv","substatType","ArtifactSubstatEditor","substatValue","setRolls","displayValue","numMains","ms","maxRolls","invalid","setRValue","parseFloat","TravelerElementSelect","allElements","toLowerCase","stg","travelerElements","TravelerToElement","TravelerGenderSelect","toggleGender","dbMeta","Female","Male","CharacterDisplay","useParams","CharacterDisplayCard","useMatch","end","tab","useTitle","characterContextValue","graphContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","bStatsNum","BarChart","onModalOpen","Calculate","onDelete","cs","falseWrapperFunc","setLocation","falseWrapper","noWrap","faEdit","faTrashAlt"],"sourceRoot":""}