{"version":3,"file":"26.8a759a01d80df806.js","mappings":"uFAEIA,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,iDACD,QACJN,EAAQ,EAAUG,C,4MCNH,SAASI,EAAY,GAMjC,IANsD,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,EAAQ,UAAEC,EAAS,YAAEC,GAMhG,EANgHC,GAAK,YAOpH,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,IAAe,MAC7B,OAAO,QAAC,IAAG,CAACC,QAAQ,OAAOC,WAAW,SAASC,IAAK,EAAE,WACpD,QAAC,KAAK,CAACJ,EAAGA,EAAGK,QAAQ,SAAQ,SAAC,eAC9B,QAAC,IAAW,iBAAKN,EAAK,YACpB,QAAC,IAAc,CAACO,OAAO,QAAC,KAAK,CAACN,EAAGA,EAAGK,QAAU,WAAUV,IAAQ,SAAE,CAAEA,MAAOK,EAAG,WAAUL,QAAoB,SACzGD,EAASa,KAAIC,IACZ,QAAC,IAAQ,CAAWC,SAAUd,IAAUa,EAAKE,SAAUf,IAAUa,EAAKG,QAAS,IAAMf,EAASY,GAAK,SAAER,EAAG,WAAUQ,MAAnGA,QAEnB,QAAC,IAAM,CAACG,QAAS,IAAMb,GAAaD,GAAYe,WAAW,QAAC,IAAQ,CAACC,GAAI,CAAEC,UAAWjB,EAAY,eAAiB,cAAiB,SACjIA,GAAY,QAAC,KAAK,CAACG,EAAGA,EAAGK,QAAQ,YAAW,SAAE,eAAoB,QAAC,KAAK,CAACL,EAAGA,EAAGK,QAAQ,aAAY,SAAE,uBAI9G,C","sources":["webpack:///../../node_modules/@mui/icons-material/Sort.js","webpack:///./src/app/Components/SortByButton.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\"\n}), 'Sort');\nexports.default = _default;","import SortIcon from '@mui/icons-material/Sort';\nimport { Box, Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\n\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\nexport default function SortByButton<Key extends string>({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: ButtonGroupProps & {\n  sortKeys: Key[]\n  value: Key\n  onChange: (value: Key) => void\n  ascending: boolean\n  onChangeAsc: (value: boolean) => void\n}) {\n  const { t } = useTranslation(\"ui\")\n  return <Box display=\"flex\" alignItems=\"center\" gap={1}>\n    <Trans t={t} i18nKey=\"sortBy\">Sort by: </Trans>\n    <ButtonGroup {...props} >\n      <DropdownButton title={<Trans t={t} i18nKey={`sortMap.${value}`}>{{ value: t(`sortMap.${value}`) }}</Trans>}>\n        {sortKeys.map(key =>\n          <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`)}</MenuItem>)}\n      </DropdownButton>\n      <Button onClick={() => onChangeAsc(!ascending)} startIcon={<SortIcon sx={{ transform: ascending ? \"scale(1, -1)\" : \"scale(1)\" }} />}>\n        {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\n      </Button>\n    </ButtonGroup>\n  </Box>\n}\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","SortByButton","sortKeys","value","onChange","ascending","onChangeAsc","props","t","useTranslation","display","alignItems","gap","i18nKey","title","map","key","selected","disabled","onClick","startIcon","sx","transform"],"sourceRoot":""}