{"version":3,"file":"786.30a0fc80fc8e0656.js","mappings":"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","sources":["webpack:///../../node_modules/@mui/icons-material/esm/FactCheck.js","webpack:///../../node_modules/@mui/icons-material/esm/FavoriteBorder.js","webpack:///../../node_modules/@mui/icons-material/esm/Science.js","webpack:///../../node_modules/@mui/icons-material/esm/TrendingUp.js","webpack:///./src/app/Components/Artifact/ArtifactCardPico.tsx","webpack:///./src/app/Components/Artifact/ArtifactTooltip.tsx","webpack:///./src/app/SVGIcons/ArtifactSlot/CircletIcon.tsx","webpack:///./src/app/SVGIcons/ArtifactSlot/GobletIcon.tsx","webpack:///./src/app/SVGIcons/ArtifactSlot/SandsIcon.tsx","webpack:///./src/app/Components/Artifact/SlotIcon.tsx","webpack:///./src/app/Components/Weapon/WeaponFullCard.tsx","webpack:///./src/app/Components/Character/CharacterCard.tsx","webpack:///./src/app/Components/Character/CharacterCardPico.tsx","webpack:///./src/app/Components/ToggleButton/WeaponToggle.tsx","webpack:///./src/app/Components/Weapon/WeaponCardPico.tsx","webpack:///./src/app/Components/Weapon/WeaponNameTooltip.tsx","webpack:///./src/app/Data/Resonance.tsx","webpack:///./src/app/Components/ElementCycle.tsx","webpack:///./src/app/ReactHooks/useCharMeta.tsx","webpack:///./src/app/ReactHooks/useCharSelectionCallback.tsx","webpack:///./src/app/ReactHooks/useCharacter.tsx","webpack:///./src/app/ReactHooks/useCharacterReducer.tsx","webpack:///./src/app/ReactHooks/useTeamData.tsx","webpack:///./src/app/ReactHooks/useWeapon.tsx","webpack:///./src/app/SVGIcons/ArtifactSlot/PlumeIcon.tsx","webpack:///./src/app/Util/totalUtils.ts"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M20 3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM10 17H5v-2h5v2zm0-4H5v-2h5v2zm0-4H5V7h5v2zm4.82 6L12 12.16l1.41-1.41 1.41 1.42L17.99 9l1.42 1.42L14.82 15z\"\n}), 'FactCheck');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorder');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.8 18.4 14 10.67V6.5l1.35-1.69c.26-.33.03-.81-.39-.81H9.04c-.42 0-.65.48-.39.81L10 6.5v4.17L4.2 18.4c-.49.66-.02 1.6.8 1.6h14c.82 0 1.29-.94.8-1.6z\"\n}), 'Science');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","import { allElementsWithPhy, SlotKey } from '@genshin-optimizer/consts';\r\nimport { artifactAsset } from '@genshin-optimizer/g-assets';\r\nimport { Box, Typography } from '@mui/material';\r\nimport Assets from '../../Assets/Assets';\r\nimport Artifact from '../../Data/Artifacts/Artifact';\r\nimport StatIcon from '../../KeyMap/StatIcon';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport ArtifactTooltip from './ArtifactTooltip';\r\n\r\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\r\n  // Blank artifact slot icon\r\n  if (!art)\r\n    return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            width: \"70%\", height: \"70%\",\r\n            left: \"50%\", top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            opacity: 0.7\r\n          }}\r\n          component=\"img\"\r\n          src={Assets.slot[key]}\r\n        />\r\n      </Box>\r\n    </CardDark>\r\n\r\n  // Actual artifact icon + info\r\n  const { mainStatKey, rarity, level } = art\r\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\r\n  const color = element ?? \"secondary\"\r\n\r\n  return <ArtifactTooltip art={art}><CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\r\n    <Box\r\n      component=\"img\"\r\n      className={`grad-${rarity}star`}\r\n      src={artifactAsset(art.setKey, art.slotKey)}\r\n      maxWidth=\"100%\"\r\n      maxHeight=\"100%\"\r\n    />\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\r\n      <strong><SqBadge sx={{ p: 0.5 }} color={Artifact.levelVariant(level)}><strong>+{level}</strong></SqBadge></strong>\r\n    </Typography>\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0 }}>\r\n      <SqBadge color={color} sx={{ p: 0.5 }}><StatIcon statKey={mainStatKey} iconProps={{ fontSize: \"inherit\" }} /></SqBadge>\r\n    </Typography>\r\n  </CardDark></ArtifactTooltip>\r\n}\r\n","import { Box, Skeleton, Typography } from \"@mui/material\";\r\nimport { Suspense } from \"react\";\r\nimport { getArtSheet } from \"../../Data/Artifacts\";\r\nimport Artifact from \"../../Data/Artifacts/Artifact\";\r\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\r\nimport StatIcon from \"../../KeyMap/StatIcon\";\r\nimport { iconInlineProps } from \"../../SVGIcons\";\r\nimport { ICachedArtifact, ICachedSubstat } from \"../../Types/artifact\";\r\nimport { clamp } from \"../../Util/Util\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport SqBadge from \"../SqBadge\";\r\nimport { StarsDisplay } from \"../StarDisplay\";\r\nimport SlotIcon from \"./SlotIcon\";\r\n\r\nexport default function ArtifactTooltip({ art, children }: { art: ICachedArtifact, children: JSX.Element }) {\r\n  const fallback = <Box>\r\n    <Skeleton variant=\"rectangular\" width={100} height={100} />\r\n  </Box>\r\n  const title = <Suspense fallback={fallback}>\r\n    <ArtifactData art={art} />\r\n  </Suspense>\r\n\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\nfunction ArtifactData({ art }: { art: ICachedArtifact }) {\r\n  const sheet = getArtSheet(art.setKey)\r\n  const { slotKey, level, rarity, mainStatKey, substats } = art\r\n  const slotName = sheet.getSlotName(slotKey)\r\n  const mainStatUnit = KeyMap.unit(mainStatKey)\r\n  const mainVariant = KeyMap.getVariant(mainStatKey)\r\n  return <Box p={1}>\r\n    <Typography variant='h6'><SlotIcon slotKey={slotKey} iconProps={iconInlineProps} /> {slotName}</Typography>\r\n    <Typography variant=\"subtitle1\" color={`${mainVariant}.main`}><StatIcon statKey={mainStatKey} iconProps={iconInlineProps} /> {KeyMap.get(mainStatKey)} {cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, level) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</Typography>\r\n    <Typography variant=\"subtitle2\" sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }} ><StarsDisplay stars={rarity} /><SqBadge color={Artifact.levelVariant(level)}>+{level}</SqBadge> </Typography>\r\n    <Box py={1}>\r\n      {substats.map((stat: ICachedSubstat) => !!stat.value && <Typography key={stat.key} color={`roll${clamp(stat.rolls.length, 1, 6)}.main`}>\r\n        <StatIcon statKey={stat.key} iconProps={iconInlineProps} /> {KeyMap.getStr(stat.key)} <strong>{`+${cacheValueString(stat.value, KeyMap.unit(stat.key))}${KeyMap.unit(stat.key)}`}</strong>\r\n      </Typography>)}\r\n    </Box>\r\n\r\n    <Typography color=\"success.main\">{sheet.name}</Typography>\r\n  </Box>\r\n}\r\n","import { createSvgIcon } from \"@mui/material\";\r\n\r\nconst CircletIcon = createSvgIcon(<path d=\"M 21.929688 8.652344 L 22.390625 9.113281 L 18 12.234375 L 12.460938 5.765625 L 13.847656 4.378906 L 12 2.066406 L 10.152344 4.378906 L 11.539062 5.765625 L 6 12.234375 L 1.609375 9.113281 L 2.070312 8.652344 L 0 7.148438 L 5.070312 19.164062 L 12 21.933594 L 18.929688 19.164062 L 24 7.148438 Z M 14.96875 15.546875 L 13.441406 15.804688 C 12.988281 15.878906 12.621094 16.214844 12.507812 16.660156 L 12.082031 18.375 C 12.074219 18.414062 12.039062 18.441406 12 18.441406 C 11.960938 18.441406 11.925781 18.414062 11.917969 18.375 L 11.492188 16.660156 C 11.378906 16.214844 11.011719 15.878906 10.558594 15.804688 L 9.03125 15.546875 C 8.984375 15.546875 8.945312 15.511719 8.945312 15.460938 C 8.945312 15.414062 8.984375 15.378906 9.03125 15.378906 L 10.558594 15.121094 C 11.011719 15.046875 11.378906 14.710938 11.492188 14.265625 L 11.917969 12.550781 C 11.925781 12.511719 11.960938 12.484375 12 12.484375 C 12.039062 12.484375 12.074219 12.511719 12.082031 12.550781 L 12.507812 14.265625 C 12.621094 14.710938 12.988281 15.046875 13.441406 15.121094 L 14.96875 15.378906 C 15.015625 15.378906 15.054688 15.414062 15.054688 15.460938 C 15.054688 15.511719 15.015625 15.546875 14.96875 15.546875 Z M 14.96875 15.546875 \" />, \"Circlet\")\r\nexport default CircletIcon\r\n","import { createSvgIcon } from \"@mui/material\";\r\n\r\nconst GobletIcon = createSvgIcon(<path d=\"M 16.363281 14.921875 C 23.429688 10.980469 23.429688 8.828125 23.425781 3.105469 L 0.734375 3.105469 C 0.734375 8.828125 0.734375 10.972656 7.796875 14.921875 C 7.796875 17.921875 10.777344 17.117188 10.777344 18.671875 C 10.90625 19.984375 10.449219 20.742188 9.804688 20.859375 C 7.730469 21.144531 4.03125 22.46875 4.007812 23.882812 L 20.15625 23.882812 C 20.128906 22.46875 16.429688 21.140625 14.355469 20.859375 C 13.714844 20.742188 13.25 19.984375 13.382812 18.671875 C 13.382812 17.117188 16.363281 17.921875 16.363281 14.921875 Z M 12.789062 9.925781 L 12.195312 12.316406 C 12.183594 12.367188 12.136719 12.40625 12.082031 12.40625 C 12.027344 12.40625 11.980469 12.367188 11.96875 12.316406 L 11.371094 9.925781 C 11.214844 9.304688 10.707031 8.832031 10.074219 8.726562 L 7.9375 8.375 C 7.878906 8.367188 7.835938 8.316406 7.835938 8.257812 C 7.835938 8.199219 7.878906 8.148438 7.9375 8.144531 L 10.074219 7.789062 C 10.707031 7.683594 11.214844 7.210938 11.371094 6.589844 L 11.96875 4.199219 C 11.980469 4.148438 12.027344 4.109375 12.082031 4.113281 C 12.132812 4.113281 12.179688 4.148438 12.195312 4.199219 L 12.789062 6.589844 C 12.945312 7.210938 13.453125 7.683594 14.089844 7.789062 L 16.222656 8.144531 C 16.28125 8.148438 16.324219 8.199219 16.324219 8.257812 C 16.324219 8.316406 16.28125 8.367188 16.222656 8.375 L 14.089844 8.730469 C 13.457031 8.835938 12.945312 9.304688 12.789062 9.925781 Z M 22.871094 2.371094 L 1.128906 2.371094 C 0.828125 2.371094 0.542969 2.253906 0.332031 2.042969 C 0.117188 1.832031 0 1.542969 0 1.246094 C 0 0.945312 0.117188 0.65625 0.328125 0.445312 C 0.542969 0.234375 0.828125 0.117188 1.128906 0.117188 L 22.871094 0.117188 C 23.171875 0.117188 23.457031 0.234375 23.671875 0.445312 C 23.882812 0.65625 24 0.945312 24 1.246094 C 24 1.542969 23.882812 1.832031 23.667969 2.042969 C 23.457031 2.253906 23.171875 2.371094 22.871094 2.371094 Z M 22.871094 2.371094 \" />, \"Goblet\")\r\nexport default GobletIcon\r\n","import { createSvgIcon } from \"@mui/material\";\r\n\r\nconst SandsIcon = createSvgIcon(<path d=\"M 20.046875 21.785156 L 18.644531 21.785156 L 18.644531 20.167969 C 18.644531 14.105469 13.035156 13.808594 13.035156 11.742188 L 13.035156 11.621094 C 13.03125 11.121094 13.285156 10.65625 13.707031 10.386719 C 15.195312 9.425781 18.460938 8.136719 18.636719 3.707031 C 18.640625 3.609375 18.605469 3.507812 18.535156 3.4375 C 18.464844 3.363281 18.371094 3.324219 18.269531 3.324219 L 5.730469 3.324219 C 5.628906 3.324219 5.535156 3.363281 5.464844 3.4375 C 5.394531 3.507812 5.355469 3.605469 5.359375 3.707031 C 5.53125 8.136719 8.804688 9.425781 10.292969 10.394531 C 10.710938 10.664062 10.964844 11.128906 10.964844 11.628906 L 10.964844 11.75 C 10.964844 13.816406 5.355469 14.113281 5.355469 20.175781 L 5.355469 21.792969 L 3.949219 21.792969 C 3.75 21.792969 3.585938 21.953125 3.582031 22.152344 L 3.582031 23.632812 C 3.582031 23.835938 3.746094 24 3.949219 24 L 20.046875 24 C 20.253906 24 20.417969 23.835938 20.417969 23.632812 L 20.417969 22.152344 C 20.417969 21.949219 20.253906 21.785156 20.046875 21.785156 Z M 12 21.785156 L 6.6875 21.785156 C 6.6875 17.058594 11.410156 18.09375 11.410156 16.171875 L 11.410156 10.265625 C 11.410156 10.265625 8.601562 8.640625 8.601562 7.457031 L 15.394531 7.457031 C 15.394531 8.640625 12.589844 10.265625 12.589844 10.265625 L 12.589844 16.171875 C 12.589844 18.09375 17.316406 17.058594 17.316406 21.785156 Z M 20.417969 0.367188 L 20.417969 1.847656 C 20.417969 2.050781 20.253906 2.214844 20.046875 2.214844 L 3.949219 2.214844 C 3.746094 2.214844 3.582031 2.050781 3.582031 1.847656 L 3.582031 0.367188 C 3.582031 0.164062 3.746094 0 3.949219 0 L 20.046875 0 C 20.253906 0 20.417969 0.164062 20.417969 0.367188 Z M 20.417969 0.367188 \" />, \"Sands\")\r\nexport default SandsIcon\r\n","import { SlotKey } from \"@genshin-optimizer/consts\";\r\nimport { SvgIconProps } from \"@mui/material\";\r\nimport CircletIcon from \"../../SVGIcons/ArtifactSlot/CircletIcon\";\r\nimport FlowerIcon from \"../../SVGIcons/ArtifactSlot/FlowerIcon\";\r\nimport GobletIcon from \"../../SVGIcons/ArtifactSlot/GobletIcon\";\r\nimport PlumeIcon from \"../../SVGIcons/ArtifactSlot/PlumeIcon\";\r\nimport SandsIcon from \"../../SVGIcons/ArtifactSlot/SandsIcon\";\r\n\r\nexport default function SlotIcon({ slotKey, iconProps = {} }: { slotKey: SlotKey, iconProps?: SvgIconProps }) {\r\n  switch (slotKey) {\r\n    case \"flower\":\r\n      return <FlowerIcon {...iconProps} />\r\n    case \"plume\":\r\n      return <PlumeIcon {...iconProps} />\r\n    case \"sands\":\r\n      return <SandsIcon {...iconProps} />\r\n    case \"goblet\":\r\n      return <GobletIcon {...iconProps} />\r\n    case \"circlet\":\r\n      return <CircletIcon {...iconProps} />\r\n  }\r\n}\r\n","import { weaponAsset } from '@genshin-optimizer/g-assets';\r\nimport { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport { getWeaponSheet } from '../../Data/Weapons';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport { ICachedWeapon } from '../../Types/weapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\n\r\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = weapon?.key && getWeaponSheet(weapon.key)\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  return <CardDark>\r\n    <Box display=\"flex\" >\r\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponAsset(weapon.key, weapon.ascension >= 2)}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ p: 1 }}>\r\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\r\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\r\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\r\n        </Typography>\r\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\r\n          <WeaponStat node={UIData.get(input.weapon.main)} />\r\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n        </Typography>\r\n\r\n      </Box>\r\n    </Box>\r\n  </CardDark>\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  return <SqBadge color=\"secondary\">{node.info.icon} {nodeVStr(node)}</SqBadge>\r\n}\r\n","import { characterAsset } from '@genshin-optimizer/g-assets';\r\nimport { Favorite, FavoriteBorder } from '@mui/icons-material';\r\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\r\nimport { DataContext, dataContextObj, TeamData } from '../../Context/DataContext';\r\nimport { getCharSheet } from '../../Data/Characters';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { uiInput as input } from '../../Formula';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport useCharMeta from '../../ReactHooks/useCharMeta';\r\nimport useDBMeta from '../../ReactHooks/useDBMeta';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport { ICachedArtifact } from '../../Types/artifact';\r\nimport { ICachedCharacter } from '../../Types/character';\r\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '@genshin-optimizer/consts';\r\nimport { range } from '../../Util/Util';\r\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\r\nimport CardLight from '../Card/CardLight';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport { NodeFieldDisplay } from '../FieldDisplay';\r\nimport SqBadge from '../SqBadge';\r\nimport { StarsDisplay } from '../StarDisplay';\r\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\r\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\r\nimport CharacterCardPico from './CharacterCardPico';\r\n\r\ntype CharacterCardProps = {\r\n  characterKey: CharacterKey,\r\n  onClick?: (characterKey: CharacterKey) => void,\r\n  onClickHeader?: (characterKey: CharacterKey) => void,\r\n  onClickTeammate?: (characterKey: CharacterKey) => void,\r\n  artifactChildren?: Displayable,\r\n  weaponChildren?: Displayable,\r\n  characterChildren?: Displayable,\r\n  footer?: Displayable,\r\n  hideStats?: boolean\r\n  isTeammateCard?: boolean,\r\n}\r\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, onClickTeammate, footer, hideStats, isTeammateCard }: CharacterCardProps) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { teamData: teamDataContext } = useContext(DataContext)\r\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\r\n  const character = useCharacter(characterKey)\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = getCharSheet(characterKey, gender)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const data = teamData?.[characterKey]?.target\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClickHandler],\r\n  )\r\n\r\n  const characterContextObj: CharacterContextObj | undefined = useMemo(() => character && characterSheet && {\r\n    character, characterSheet, characterDispatch\r\n  }, [character, characterSheet, characterDispatch])\r\n  const dataContextObj: dataContextObj | undefined = useMemo(() => data && teamData && ({\r\n    data,\r\n    teamData,\r\n  }), [data, teamData])\r\n\r\n  const { favorite } = useCharMeta(characterKey)\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n      <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\r\n        <IconButton sx={{ p: 0.5 }} onClick={_ => database.charMeta.set(characterKey, { favorite: !favorite })}>\r\n          {favorite ? <Favorite /> : <FavoriteBorder />}\r\n        </IconButton>\r\n      </Box>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n        {(character && dataContextObj && characterContextObj) ?\r\n          <ExistingCharacterCardContent\r\n            characterContextObj={characterContextObj}\r\n            dataContextObj={dataContextObj}\r\n            characterKey={characterKey}\r\n            onClick={onClick}\r\n            onClickHeader={onClickHeader}\r\n            isTeammateCard={isTeammateCard}\r\n            character={character}\r\n            onClickTeammate={onClickTeammate}\r\n            hideStats={hideStats}\r\n            weaponChildren={weaponChildren}\r\n            artifactChildren={artifactChildren}\r\n            characterChildren={characterChildren}\r\n          /> : <NewCharacterCardContent characterKey={characterKey} />}\r\n      </ConditionalWrapper>\r\n      {footer}\r\n    </CardLight>\r\n\r\n  </Suspense>\r\n}\r\n\r\ntype ExistingCharacterCardContentProps = {\r\n  characterContextObj: CharacterContextObj\r\n  dataContextObj: dataContextObj\r\n  characterKey: CharacterKey\r\n  onClick?: (characterKey: CharacterKey) => void\r\n  onClickHeader?: (characterKey: CharacterKey) => void\r\n  isTeammateCard?: boolean\r\n  character: ICachedCharacter\r\n  onClickTeammate?: (characterKey: CharacterKey) => void\r\n  hideStats?: boolean\r\n  weaponChildren?: Displayable\r\n  artifactChildren?: Displayable\r\n  characterChildren?: Displayable\r\n}\r\nfunction ExistingCharacterCardContent({ characterContextObj, dataContextObj, characterKey, onClick, onClickHeader, isTeammateCard, character, onClickTeammate, hideStats, weaponChildren, artifactChildren, characterChildren }: ExistingCharacterCardContentProps) {\r\n  return <CharacterContext.Provider value={characterContextObj}><DataContext.Provider value={dataContextObj}>\r\n    <Header characterKey={characterKey} onClick={!onClick ? onClickHeader : undefined} >\r\n      <HeaderContent />\r\n    </Header>\r\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\r\n      <Artifacts />\r\n      {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\r\n        <Grid item xs={1} height=\"100%\">\r\n          <WeaponCardPico weaponId={character.equippedWeapon} />\r\n        </Grid>\r\n        {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} onClick={!onClick ? onClickTeammate : undefined} index={i} /></Grid>)}\r\n      </Grid>}\r\n      {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\r\n      {!isTeammateCard && !hideStats && <Stats />}\r\n      {weaponChildren}\r\n      {artifactChildren}\r\n      {characterChildren}\r\n    </CardContent>\r\n  </DataContext.Provider></CharacterContext.Provider>\r\n}\r\n\r\nfunction NewCharacterCardContent({ characterKey }: { characterKey: CharacterKey }) {\r\n  return < >\r\n    <Header characterKey={characterKey} >\r\n      <HeaderContentNew characterKey={characterKey} />\r\n    </Header>\r\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1, height: \"100%\" }}>\r\n    </CardContent>\r\n  </>\r\n}\r\n\r\nfunction Header({ children, characterKey, onClick }: { children: JSX.Element, characterKey: CharacterKey, onClick?: (characterKey: CharacterKey) => void }) {\r\n  const { gender } = useDBMeta()\r\n  const characterSheet = getCharSheet(characterKey, gender)\r\n\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\r\n    [onClick, characterKey],\r\n  )\r\n  if (!characterSheet) return null\r\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\r\n    <Box display=\"flex\"\r\n      position=\"relative\"\r\n      className={`grad-${characterSheet.rarity}star`}\r\n      sx={{\r\n        \"&::before\": {\r\n          content: '\"\"',\r\n          display: \"block\", position: \"absolute\",\r\n          left: 0, top: 0,\r\n          width: \"100%\", height: \"100%\",\r\n          opacity: 0.7,\r\n          backgroundImage: `url(${characterAsset(characterKey, \"banner\", gender)})`,\r\n          backgroundPosition: \"center\",\r\n          backgroundSize: \"cover\",\r\n        }\r\n      }}\r\n      width=\"100%\" >\r\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        <Box\r\n          component=\"img\"\r\n          src={characterAsset(characterKey, \"icon\", gender)}\r\n          width=\"100%\"\r\n          height=\"auto\"\r\n          maxWidth={256}\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </Box>\r\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper>\r\n}\r\n\r\nfunction HeaderContent() {\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const characterEle = data.get(input.charEle).value as ElementKey\r\n  const characterLevel = data.get(input.lvl).value\r\n  const constellation = data.get(input.constellation).value\r\n  const ascension = data.get(input.asc).value\r\n  const autoBoost = data.get(input.bonus.auto).value\r\n  const skillBoost = data.get(input.bonus.skill).value\r\n  const burstBoost = data.get(input.bonus.burst).value\r\n\r\n  const tAuto = data.get(input.total.auto).value\r\n  const tSkill = data.get(input.total.skill).value\r\n  const tBurst = data.get(input.total.burst).value\r\n\r\n  return <>\r\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} sx={{ opacity: 0.85 }} />\r\n    <Grid container spacing={1} flexWrap=\"nowrap\">\r\n      <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\r\n        <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\r\n        <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\r\n      </Grid>\r\n    </Grid>\r\n    <Grid container spacing={1} flexWrap=\"nowrap\">\r\n      <Grid item>\r\n        <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\r\n      </Grid>\r\n      <Grid item>\r\n        <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\r\n      </Grid>\r\n    </Grid>\r\n    <Typography mt={1} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\r\n\r\n  </>\r\n}\r\n\r\nfunction HeaderContentNew({ characterKey }: { characterKey: CharacterKey }) {\r\n  const { gender } = useDBMeta()\r\n  const sheet = getCharSheet(characterKey, gender)\r\n\r\n  if (!sheet) return null\r\n  return <>\r\n    <Chip label={<Typography variant=\"subtitle1\">{sheet.name}</Typography>} size=\"small\" color={sheet.elementKey} sx={{ opacity: 0.85 }} />\r\n    <Box mt={1}>\r\n      <Typography variant=\"h4\"><SqBadge>NEW</SqBadge></Typography>\r\n    </Box>\r\n    <Typography mt={1.5} ><StarsDisplay stars={sheet.rarity} colored /></Typography>\r\n  </>\r\n}\r\n\r\nfunction Artifacts() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifacts = useMemo(() =>\r\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\r\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\r\n\r\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\r\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\r\n      <Grid item key={key} xs={1}>\r\n        <ArtifactCardPico artifactObj={art} slotKey={key} />\r\n      </Grid>\r\n    )}\r\n  </Grid>\r\n}\r\n\r\nfunction Stats() {\r\n  const { data } = useContext(DataContext)\r\n  return <Box sx={{ width: \"100%\" }} >\r\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} />)}\r\n    {data.get(input.special).info.name && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\r\n      {data.get(input.special).info.icon}\r\n      <Typography>{data.get(input.special).info.name}</Typography>\r\n    </Box>}\r\n  </Box>\r\n}\r\n","import { CharacterKey } from '@genshin-optimizer/consts';\r\nimport { characterAsset } from '@genshin-optimizer/g-assets';\r\nimport { Box, CardActionArea, Skeleton, Typography } from '@mui/material';\r\nimport { Suspense, useCallback } from 'react';\r\nimport Assets from '../../Assets/Assets';\r\nimport { getCharSheet } from '../../Data/Characters';\r\nimport { ascensionMaxLevel } from '../../Data/LevelData';\r\nimport { ElementIcon } from '../../KeyMap/StatIcon';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useDBMeta from '../../ReactHooks/useDBMeta';\r\nimport BootstrapTooltip from '../BootstrapTooltip';\r\nimport CardDark from '../Card/CardDark';\r\nimport ConditionalWrapper from '../ConditionalWrapper';\r\nimport SqBadge from '../SqBadge';\r\n\r\nexport default function CharacterCardPico({ characterKey = \"\", index = -1, onClick }: { characterKey: CharacterKey | \"\", index?: number, onClick?: (characterKey: CharacterKey) => void }) {\r\n  const { gender } = useDBMeta()\r\n  const teammateSheet = characterKey ? getCharSheet(characterKey, gender) : undefined\r\n  const character = useCharacter(characterKey)\r\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\r\n  const actionWrapperFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickHandler}>{children}</CardActionArea>,\r\n    [onClickHandler])\r\n  if (teammateSheet && character) {\r\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n      <Typography>\r\n        {teammateSheet.elementKey && <ElementIcon ele={teammateSheet.elementKey} iconProps={{\r\n          fontSize: \"inherit\",\r\n          sx: {\r\n            verticalAlign: \"-10%\",\r\n            color: `${teammateSheet.elementKey}.main`\r\n          }\r\n        }} />} {teammateSheet.name}\r\n      </Typography>\r\n    </Suspense>\r\n\r\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\r\n        <BootstrapTooltip placement=\"top\" title={title}>\r\n          <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\r\n            {characterKey && <Box\r\n              component=\"img\"\r\n              src={characterAsset(characterKey, \"iconSide\", gender)}\r\n              maxWidth=\"100%\"\r\n              maxHeight=\"100%\"\r\n              sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\r\n            />}\r\n          </Box>\r\n        </BootstrapTooltip>\r\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", top: 0, }}>\r\n          <strong><SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge></strong>\r\n        </Typography>\r\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\r\n          <strong><SqBadge color=\"secondary\" >C{character.constellation}</SqBadge></strong>\r\n        </Typography>\r\n      </ConditionalWrapper>\r\n    </CardDark>\r\n  } else {\r\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\r\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\r\n    </CardDark>\r\n  }\r\n}\r\n","import { Chip, ToggleButton, useMediaQuery, useTheme } from \"@mui/material\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"@genshin-optimizer/consts\";\r\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\r\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\r\n  onChange: (value: WeaponTypeKey[]) => void\r\n  value: WeaponTypeKey[],\r\n  totals: Record<WeaponTypeKey, Displayable>\r\n}\r\n\r\nconst weaponTypeHandler = handleMultiSelect([...allWeaponTypeKeys])\r\nexport default function WeaponToggle({ value, totals, onChange, ...props }: WeaponToggleProps) {\r\n  const theme = useTheme();\r\n  const xs = !useMediaQuery(theme.breakpoints.up('sm'));\r\n  return <SolidToggleButtonGroup exclusive value={value} {...props}>\r\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt} sx={{ p: xs ? 1 : undefined, minWidth: xs ? 0 : \"7em\", display: \"flex\", gap: xs ? 0 : 1 }} onClick={() => onChange(weaponTypeHandler(value, wt))}>\r\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} sideMargin /><Chip label={totals[wt]} size=\"small\" />\r\n    </ToggleButton>)}\r\n  </SolidToggleButtonGroup>\r\n}\r\n","import { weaponAsset } from '@genshin-optimizer/g-assets';\r\nimport { Box, Typography } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport { getWeaponSheet } from '../../Data/Weapons';\r\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\r\nimport { uiInput as input } from '../../Formula';\r\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\r\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\r\nimport useWeapon from '../../ReactHooks/useWeapon';\r\nimport CardDark from '../Card/CardDark';\r\nimport SqBadge from '../SqBadge';\r\nimport WeaponNameTooltip from './WeaponNameTooltip';\r\n\r\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = weapon?.key && getWeaponSheet(weapon.key)\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n\r\n  const tooltipAddl = <Box>\r\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\r\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\r\n  </Box>\r\n\r\n  return <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\r\n    <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\r\n      <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\r\n        <Box\r\n          component=\"img\"\r\n          src={weaponAsset(weapon.key, weapon.ascension >= 2)}\r\n          maxWidth=\"100%\"\r\n          maxHeight=\"100%\"\r\n          sx={{ mt: \"auto\" }}\r\n        />\r\n      </WeaponNameTooltip>\r\n    </Box>\r\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\r\n      <strong><SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge></strong>\r\n    </Typography>\r\n    {weaponSheet.hasRefinement && <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\r\n      <strong><SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge></strong>\r\n    </Typography>}\r\n  </CardDark>\r\n}\r\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\r\n  return <Typography>{node.info.icon} {nodeVStr(node)}</Typography>\r\n}\r\n","import { Skeleton, Typography } from \"@mui/material\";\r\nimport { ReactElement, ReactNode, Suspense } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\n\r\ntype Data = {\r\n  sheet: WeaponSheet,\r\n  addlText?: any,\r\n  children: ReactElement<any, any> & ReactNode,\r\n}\r\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\r\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\r\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} size={1.5} /> {sheet.name}</Typography>\r\n    {addlText}\r\n  </Suspense>\r\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\r\n    {children}\r\n  </BootstrapTooltip>\r\n}\r\n","import { allElements, allElementsWithPhy } from \"@genshin-optimizer/consts\";\nimport ElementCycle from \"../Components/ElementCycle\";\nimport { Translate } from \"../Components/Translate\";\nimport { input, tally } from \"../Formula\";\nimport { inferInfoMut } from \"../Formula/api\";\nimport { UIData } from \"../Formula/uiData\";\nimport { equal, greaterEq, infoMut, percent, sum } from \"../Formula/utils\";\nimport KeyMap from \"../KeyMap\";\nimport { iconInlineProps } from \"../SVGIcons\";\nimport AnemoIcon from \"../SVGIcons/Element/AnemoIcon\";\nimport CryoIcon from \"../SVGIcons/Element/CryoIcon\";\nimport DendroIcon from \"../SVGIcons/Element/DendroIcon\";\nimport ElectroIcon from \"../SVGIcons/Element/ElectroIcon\";\nimport GeoIcon from \"../SVGIcons/Element/GeoIcon\";\nimport HydroIcon from \"../SVGIcons/Element/HydroIcon\";\nimport PyroIcon from \"../SVGIcons/Element/PyroIcon\";\nimport { DocumentSection } from \"../Types/sheet\";\nimport { objectKeyValueMap } from \"../Util/Util\";\nimport { condReadNode, st, stg } from \"./SheetUtil\";\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\n\ntype IResonance = {\n  name: Displayable,\n  desc: Displayable,\n  icon: Displayable,\n  canShow: (data: UIData) => boolean\n  sections: DocumentSection[]\n}\n\nconst teamSize = sum(...allElements.map(ele => tally[ele]))\n\n// Protective Canopy\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [\n  `${e}_res_`,\n  equal(input.activeCharKey, input.charKey,\n    greaterEq(tally.ele, 4, percent(0.15))\n  )\n])\n\nconst protectiveCanopy: IResonance = {\n  name: tr(\"ProtectiveCanopy.name\"),\n  desc: tr(\"ProtectiveCanopy.desc\"),\n  icon: <span><ElementCycle iconProps={iconInlineProps} /> x4</span>,\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\n  sections: [{\n    teamBuff: true,\n    fields: Object.values(pcNodes).map(node => ({ node }))\n  }]\n}\n\n// Fervent Flames\nconst ffNode = equal(input.activeCharKey, input.charKey,\n  greaterEq(teamSize, 4,\n    greaterEq(tally.pyro, 2, percent(0.25))\n  )\n)\nconst ferventFlames: IResonance = {\n  name: tr(\"FerventFlames.name\"),\n  desc: tr(\"FerventFlames.desc\"),\n  icon: <span><PyroIcon {...iconInlineProps} /> <PyroIcon {...iconInlineProps} /></span>,\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.cryo\"),\n      value: -40,\n      unit: \"%\"\n    }, {\n      node: ffNode\n    }]\n  }]\n}\n\n// Soothing Waters\nconst swNode = equal(input.activeCharKey, input.charKey,\n  greaterEq(teamSize, 4,\n    greaterEq(tally.hydro, 2, percent(0.25))\n  )\n)\nconst soothingWaters: IResonance = {\n  name: tr(\"SoothingWater.name\"),\n  desc: tr(\"SoothingWater.desc\"),\n  icon: <span><HydroIcon {...iconInlineProps} /> <HydroIcon {...iconInlineProps} /></span>,\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.pyro\"),\n      value: -40,\n      unit: \"%\"\n    }, {\n      node: swNode\n    }]\n  }]\n}\n\n//ShatteringIce\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\nconst condSI = condReadNode(condSIPath)\nconst siNode = equal(input.activeCharKey, input.charKey,\n  greaterEq(teamSize, 4,\n    greaterEq(tally.cryo, 2,\n      equal(condSI, \"on\", percent(0.15))\n    )\n  )\n)\nconst shatteringIce: IResonance = {\n  name: tr(\"ShatteringIce.name\"),\n  desc: tr(\"ShatteringIce.desc\"),\n  icon: <span><CryoIcon {...iconInlineProps} /> <CryoIcon {...iconInlineProps} /></span>,\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.electro\"),\n      value: -40,\n      unit: \"%\"\n    }]\n  }, {\n    teamBuff: true,\n    path: condSIPath,\n    value: condSI,\n    name: trm(\"ShatteringIce.cond\"),\n    header: {\n      title: tr(\"ShatteringIce.name\"),\n      icon: <CryoIcon />,\n    },\n    states: {\n      on: {\n        fields: [{\n          node: siNode\n        }]\n      }\n    }\n  }]\n}\n\n// High Voltage\nconst highVoltage: IResonance = {\n  name: tr(\"HighVoltage.name\"),\n  desc: tr(\"HighVoltage.desc\"),\n  icon: <span><ElectroIcon {...iconInlineProps} /> <ElectroIcon {...iconInlineProps} /></span>,\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.hydro\"),\n      value: -40,\n      unit: \"%\"\n    }]\n  }]\n}\n\n// Impetuous Winds\nconst iwNodeStam = equal(input.activeCharKey, input.charKey,\n  greaterEq(teamSize, 4,\n    greaterEq(tally.anemo, 2, percent(-0.15))\n  )\n)\nconst iwNodeMove = equal(input.activeCharKey, input.charKey,\n  greaterEq(teamSize, 4,\n    greaterEq(tally.anemo, 2, percent(0.1))\n  )\n)\nconst iwNodeCD = equal(input.activeCharKey, input.charKey,\n  greaterEq(teamSize, 4,\n    greaterEq(tally.anemo, 2, percent(-0.05))\n  )\n)\nconst impetuousWinds: IResonance = {\n  name: tr(\"ImpetuousWinds.name\"),\n  desc: tr(\"ImpetuousWinds.desc\"),\n  icon: <span><AnemoIcon {...iconInlineProps} /> <AnemoIcon {...iconInlineProps} /></span>,\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      node: iwNodeStam\n    }, {\n      node: iwNodeMove\n    }, {\n      node: iwNodeCD\n    }]\n  }]\n}\n\n// Enduring Rock\nconst condERShieldPath = [\"resonance\", \"EnduringRock\"]\nconst condERShield = condReadNode(condERShieldPath)\nconst condERHitPath = [\"resonance\", \"EnduringRockHit\"]\nconst condERHit = condReadNode(condERHitPath)\nconst erNodeshield_ = equal(input.activeCharKey, input.charKey,\n  greaterEq(teamSize, 4,\n    greaterEq(tally.geo, 2, percent(0.15))\n  )\n)\nconst erNodeDMG_ = equal(input.activeCharKey, input.charKey,\n  greaterEq(teamSize, 4,\n    greaterEq(tally.geo, 2,\n      equal(condERShield, \"on\", percent(0.15))\n    )\n  )\n)\nconst erNodeRes_ = equal(input.activeCharKey, input.charKey,\n  greaterEq(teamSize, 4,\n    greaterEq(tally.geo, 2,\n      equal(condERHit, \"on\", percent(-0.2))\n    )\n  )\n)\nconst enduringRock: IResonance = {\n  name: tr(\"EnduringRock.name\"),\n  desc: tr(\"EnduringRock.desc\"),\n  icon: <span><GeoIcon {...iconInlineProps} /> <GeoIcon {...iconInlineProps} /></span>,\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    text: tr(\"EnduringRock.desc\"),\n    fields: [{\n      node: erNodeshield_\n    }]\n  }, {\n    teamBuff: true,\n    path: condERShieldPath,\n    value: condERShield,\n    header: {\n      title: tr(\"EnduringRock.name\"),\n      icon: <GeoIcon />,\n    },\n    name: st(\"protectedByShield\"),\n    states: {\n      on: {\n        fields: [{\n          node: erNodeDMG_\n        }]\n      }\n    }\n  }, {\n    teamBuff: true,\n    path: condERHitPath,\n    value: condERHit,\n    header: {\n      title: tr(\"EnduringRock.name\"),\n      icon: <GeoIcon />,\n    },\n    name: trm(\"EnduringRock.hitCond\"),\n    states: {\n      on: {\n        fields: [{\n          node: erNodeRes_\n        }, {\n          text: stg(\"duration\"),\n          value: 15,\n          unit: \"s\"\n        }]\n      }\n    }\n  }]\n}\n\n// Sprawling Greenery\nconst condSG2elePath = [\"resonance\", \"SprawlingCanopy2ele\"]\nconst condSG2ele = condReadNode(condSG2elePath)\nconst condSG3elePath = [\"resonance\", \"SprawlingCanopy3ele\"]\nconst condSG3ele = condReadNode(condSG3elePath)\nconst sgBase_eleMas = equal(input.activeCharKey, input.charKey,\n  greaterEq(teamSize, 4,\n    greaterEq(tally.dendro, 2, 50, { ...KeyMap.info(\"eleMas\"), isTeamBuff: true })\n  )\n)\nconst sg2ele_eleMas = equal(input.activeCharKey, input.charKey,\n  greaterEq(teamSize, 4,\n    greaterEq(tally.dendro, 2,\n      equal(condSG2ele, \"on\", 30, { ...KeyMap.info(\"eleMas\"), isTeamBuff: true })\n    )\n  )\n)\nconst sg3ele_eleMas = equal(input.activeCharKey, input.charKey,\n  greaterEq(teamSize, 4,\n    greaterEq(tally.dendro, 2,\n      equal(condSG3ele, \"on\", 20, { ...KeyMap.info(\"eleMas\"), isTeamBuff: true })\n    )\n  )\n)\nconst sprawlingGreenery: IResonance = {\n  name: tr(\"SprawlingGreenery.name\"),\n  desc: tr(\"SprawlingGreenery.desc\"),\n  icon: <span><DendroIcon {...iconInlineProps} /> <DendroIcon {...iconInlineProps} /></span>,\n  canShow: (data: UIData) => data.get(tally.dendro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    text: tr(\"SprawlingGreenery.desc\"),\n    fields: [{ node: sgBase_eleMas }]\n  }, {\n    teamBuff: true,\n    path: condSG2elePath,\n    value: condSG2ele,\n    header: {\n      title: tr(\"SprawlingGreenery.name\"),\n      icon: <DendroIcon />,\n    },\n    name: trm(\"SprawlingGreenery.cond2ele\"),\n    states: {\n      on: {\n        fields: [{\n          node: sg2ele_eleMas\n        }, {\n          text: stg(\"duration\"),\n          value: 6,\n          unit: \"s\"\n        }]\n      }\n    }\n  }, {\n    teamBuff: true,\n    path: condSG3elePath,\n    value: condSG3ele,\n    header: {\n      title: tr(\"SprawlingGreenery.name\"),\n      icon: <DendroIcon />,\n    },\n    name: trm(\"SprawlingGreenery.cond3ele\"),\n    states: {\n      on: {\n        fields: [{\n          node: sg3ele_eleMas\n        }, {\n          text: stg(\"duration\"),\n          value: 6,\n          unit: \"s\"\n        }]\n      }\n    }\n  }]\n}\n\n\nexport const resonanceSheets: IResonance[] = [\n  protectiveCanopy,\n  ferventFlames,\n  soothingWaters,\n  shatteringIce,\n  highVoltage,\n  impetuousWinds,\n  enduringRock,\n  sprawlingGreenery,\n]\n\nexport const resonanceData = inferInfoMut({\n  teamBuff: {\n    premod: {\n      ...pcNodes,\n      atk_: ffNode,\n      hp_: swNode,\n      staminaDec_: iwNodeStam,\n      moveSPD_: iwNodeMove,\n      cdRed_: iwNodeCD,\n      shield_: erNodeshield_,\n      all_dmg_: erNodeDMG_,\n      geo_enemyRes_: erNodeRes_,\n      eleMas: infoMut(sum(sgBase_eleMas, sg2ele_eleMas, sg3ele_eleMas), { pivot: true }),\n    },\n    total: {\n      // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\n      critRate_: siNode\n    }\n  }\n})\n","import { allElements } from \"@genshin-optimizer/consts\";\r\nimport { SvgIconProps } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ElementIcon } from \"../KeyMap/StatIcon\";\r\n\r\nexport default function ElementCycle({ iconProps }: { iconProps: SvgIconProps }) {\r\n  const [counter, setcounter] = useState(0)\r\n  useEffect(() => {\r\n    const timer = setInterval(() => setcounter(c => c + 1), 1000)\r\n    return () => clearInterval(timer)\r\n  }, [])\r\n  return <ElementIcon ele={allElements[counter % allElements.length]} iconProps={iconProps} />\r\n}\r\n","import { useContext, useEffect, useState } from \"react\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { CharacterKey } from \"../Types/consts\"\r\n\r\nexport default function useCharMeta(key: CharacterKey) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [charMeta, setCharMetaState] = useState(() => database.charMeta.get(key))\r\n  useEffect(() => database.charMeta.follow(key, (k, r, dbMeta) => setCharMetaState(dbMeta)), [key, database])\r\n  useEffect(() => setCharMetaState(database.charMeta.get(key)), [database, key])\r\n  return charMeta\r\n}\r\n","import { CharacterKey } from \"@genshin-optimizer/consts\";\nimport { useCallback, useContext } from \"react\";\nimport { useMatch, useNavigate } from \"react-router-dom\";\nimport { DatabaseContext } from \"../Database/Database\";\n\n/**\n * Basically a history hook to go to the dedicated character page. Will create the character if it doesn't exist.\n * @returns\n */\nexport default function useCharSelectionCallback() {\n  const { database } = useContext(DatabaseContext)\n  const navigate = useNavigate()\n  // Used to maintain the previous tab, if there is one\n  const { params: { tab = \"\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"\" } }\n  const cb = useCallback((characterKey: CharacterKey) => {\n    const character = database.chars.get(characterKey)\n    let navTab = tab\n    // Create a new character + weapon, with linking if char isnt in db.\n    if (!character) {\n      database.chars.getWithInitWeapon(characterKey)\n      // If we are navigating to a new character,\n      // redirect to Overview, regardless of previous tab.\n      // Trying to enforce a certain UI flow when building new characters\n      navTab = \"\"\n    }\n    navigate(`/characters/${characterKey}/${navTab}`)\n  }, [navigate, database, tab])\n  return cb\n}\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\n\r\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [character, updateCharacter] = useState(database.chars.get(characterKey))\r\n  useEffect(() => updateCharacter(database.chars.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, (k, r, v) => r === \"update\" && updateCharacter(v)) : undefined,\r\n    [characterKey, updateCharacter, database])\r\n  return character\r\n}\r\n","import { useCallback, useContext } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey } from \"../Types/consts\";\r\nimport { IConditionalValues } from \"../Types/sheet\";\r\nimport { deepClone } from \"../Util/Util\";\r\n\r\ntype characterReducerBonusStatsAction = {\r\n  type: \"editStats\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerenemyOverrideAction = {\r\n  type: \"enemyOverride\",\r\n  statKey: string\r\n  value: any | undefined\r\n}\r\ntype characterReducerResetStatsAction = {\r\n  type: \"resetStats\",\r\n  statKey: string\r\n}\r\ntype characterTeamAction = {\r\n  type: \"team\",\r\n  index: number,\r\n  charKey: CharacterKey | \"\"\r\n}\r\ntype characterTeamConditional = {\r\n  type: \"teamConditional\",\r\n  teamMateKey: CharacterKey,\r\n  conditional: IConditionalValues\r\n}\r\nexport type characterReducerAction = characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | characterTeamConditional | Partial<ICachedCharacter>\r\n\r\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\r\n\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  return useCallback((action: characterReducerAction): void => {\r\n    if (!characterKey) return\r\n    const character = database.chars.get(characterKey)\r\n    if (!character) return\r\n    if (\"type\" in action) switch (action.type) {\r\n      case \"enemyOverride\": {\r\n        const enemyOverride = character.enemyOverride\r\n        const { statKey, value } = action\r\n        if (enemyOverride[statKey] === value) break\r\n        database.chars.set(characterKey, { ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\r\n        break\r\n      }\r\n      case \"editStats\": {\r\n        const { statKey, value } = action\r\n        const bonusStats = deepClone(character.bonusStats)\r\n        if (bonusStats[statKey] === value) break\r\n        if (!value) delete bonusStats[statKey]\r\n        else bonusStats[statKey] = value\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"resetStats\": {\r\n        const { statKey } = action\r\n        const bonusStats = character.bonusStats\r\n        delete bonusStats[statKey]\r\n        database.chars.set(characterKey, { ...character, bonusStats })\r\n        break\r\n      }\r\n      case \"teamConditional\": {\r\n        const { teamMateKey, conditional } = action\r\n        const teamConditional = deepClone(character.teamConditional)\r\n        teamConditional[teamMateKey] = conditional\r\n        database.chars.set(characterKey, { ...character, teamConditional })\r\n        break\r\n      }\r\n      case \"team\": {\r\n        const { team: team_ } = character\r\n        const team = [...team_] as ICachedCharacter[\"team\"]\r\n        const { index, charKey } = action\r\n        team[index] = charKey\r\n        // update src character\r\n        database.chars.set(characterKey, { ...character, team })\r\n      }\r\n    } else\r\n      database.chars.set(characterKey, { ...character, ...action })\r\n  }, [characterKey, database])\r\n}\r\n","import { useContext, useDeferredValue, useEffect, useMemo } from \"react\";\r\nimport { TeamData } from \"../Context/DataContext\";\r\nimport { allArtifactData } from \"../Data/Artifacts\";\r\nimport { getCharSheet } from \"../Data/Characters\";\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\r\nimport { resonanceData } from \"../Data/Resonance\";\r\nimport { getWeaponSheet } from \"../Data/Weapons\";\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\r\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\r\nimport { common } from \"../Formula\";\r\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, mergeData, uiDataForTeam } from \"../Formula/api\";\r\nimport { Data } from \"../Formula/type\";\r\nimport { ICachedArtifact } from \"../Types/artifact\";\r\nimport { ICachedCharacter } from \"../Types/character\";\r\nimport { CharacterKey, Gender } from \"../Types/consts\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport { objectMap } from \"../Util/Util\";\r\nimport { defaultInitialWeapon } from \"../Util/WeaponUtil\";\r\nimport useDBMeta from \"./useDBMeta\";\r\nimport useForceUpdate from \"./useForceUpdate\";\r\n\r\ntype TeamDataBundle = {\r\n  teamData: Dict<CharacterKey, Data[]>\r\n  teamBundle: Dict<CharacterKey, CharBundle>\r\n}\r\n\r\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon): TeamData | undefined {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [dbDirty, setDbDirty] = useForceUpdate()\r\n  const dbDirtyDeferred = useDeferredValue(dbDirty)\r\n  const { gender } = useDBMeta()\r\n  const data = useMemo(() => dbDirtyDeferred && getTeamDataCalc(database, characterKey, mainStatAssumptionLevel, gender, overrideArt, overrideWeapon), [dbDirtyDeferred, gender, characterKey, database, mainStatAssumptionLevel, overrideArt, overrideWeapon])\r\n\r\n  useEffect(() =>\r\n    characterKey ? database.chars.follow(characterKey, setDbDirty) : undefined,\r\n    [characterKey, setDbDirty, database])\r\n\r\n  return data\r\n}\r\n\r\nfunction getTeamDataCalc(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel = 0, gender: Gender, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\r\n  TeamData | undefined {\r\n  if (!characterKey) return\r\n\r\n  // Retrive from cache\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon) {\r\n    const cache = database._getTeamData(characterKey)\r\n    if (cache) return cache\r\n  }\r\n  const { teamData, teamBundle } = getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon) ?? {}\r\n  if (!teamData || !teamBundle) return\r\n\r\n  const calcData = uiDataForTeam(teamData, gender, characterKey)\r\n\r\n  const data = objectMap(calcData, (obj, ck) => {\r\n    const { data: _, ...rest } = teamBundle[ck]!\r\n    return { ...obj, ...rest }\r\n  })\r\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon)\r\n    database.cacheTeamData(characterKey, data)\r\n  return data\r\n}\r\n\r\nexport function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\r\n  TeamDataBundle | undefined {\r\n  if (!characterKey) return\r\n  const character = database.chars.get(characterKey)\r\n  if (!character) return\r\n\r\n  const char1DataBundle = getCharDataBundle(database, true, mainStatAssumptionLevel,\r\n    character,\r\n    overrideWeapon ? overrideWeapon : (database.weapons.get(character.equippedWeapon) ?? defaultInitialWeapon()),\r\n    (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\r\n  )\r\n  if (!char1DataBundle) return\r\n  const teamBundle = { [characterKey]: char1DataBundle }\r\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\r\n\r\n  char1DataBundle.character.team.forEach((ck) => {\r\n    if (!ck) return\r\n    const tchar = database.chars.get(ck)\r\n    if (!tchar) return\r\n    const databundle = getCharDataBundle(database, false, 0,\r\n      { ...tchar, conditional: character.teamConditional[ck] ?? {} },\r\n      database.weapons.get(tchar.equippedWeapon) ?? defaultInitialWeapon(),\r\n      Object.values(tchar.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\r\n    if (!databundle) return\r\n    teamBundle[ck] = databundle\r\n    teamData[ck] = databundle.data\r\n  })\r\n\r\n  return { teamData, teamBundle }\r\n}\r\ntype CharBundle = {\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  characterSheet: CharacterSheet,\r\n  weaponSheet: WeaponSheet,\r\n  data: Data[]\r\n}\r\n\r\nfunction getCharDataBundle(database: ArtCharDatabase, useCustom = false, mainStatAssumptionLevel: number,\r\n  character: ICachedCharacter,\r\n  weapon: ICachedWeapon,\r\n  artifacts: ICachedArtifact[] | Data,\r\n): CharBundle | undefined {\r\n\r\n  const characterSheet = getCharSheet(character.key, database.gender)\r\n  if (!characterSheet) return\r\n  const weaponSheet = getWeaponSheet(weapon.key)\r\n  if (!weaponSheet) return\r\n\r\n  const weaponSheetsDataOfType = WeaponSheet.getAllDataOfType(characterSheet.weaponTypeKey)\r\n\r\n  const weaponSheetsData = useCustom ? (() => {\r\n    // display is included in WeaponSheet.getAllDataOfType\r\n    const { display, ...restWeaponSheetData } = weaponSheet.data\r\n    return mergeData([restWeaponSheetData, weaponSheetsDataOfType])\r\n  })() : weaponSheet.data\r\n\r\n  const sheetData = mergeData([characterSheet.data, weaponSheetsData, allArtifactData])\r\n  const artifactData = Array.isArray(artifacts) ? artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)) : [artifacts]\r\n  const data = [\r\n    ...artifactData,\r\n    dataObjForCharacter(character, useCustom ? sheetData : undefined),\r\n    dataObjForWeapon(weapon),\r\n    sheetData,\r\n    common, // NEED TO PUT THIS AT THE END\r\n    resonanceData,\r\n  ]\r\n  return { character, weapon, characterSheet, weaponSheet, data }\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../Database/Database\";\r\n\r\nexport default function useWeapon(weaponID: string | undefined = \"\") {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [weapon, setWeapon] = useState(database.weapons.get(weaponID))\r\n  useEffect(() => setWeapon(database.weapons.get(weaponID)), [database, weaponID])\r\n  useEffect(() =>\r\n    weaponID ? database.weapons.follow(weaponID, (k, r, v) => r === \"update\" && setWeapon(v)) : undefined,\r\n    [weaponID, setWeapon, database])\r\n  return weapon\r\n}\r\n","import { createSvgIcon } from \"@mui/material\";\r\n\r\nconst PlumeIcon = createSvgIcon(<path d=\"M 21.160156 0 C 20.578125 0.0429688 20.003906 0.148438 19.445312 0.320312 C 18.546875 0.507812 17.6875 0.855469 16.910156 1.347656 C 16.507812 1.585938 16.5 1.902344 16.375 1.816406 C 16.125 1.710938 15.839844 1.6875 15.574219 1.761719 C 9.6875 6.40625 9.558594 6.671875 6.546875 11.132812 C 6.351562 11.210938 6.058594 10.945312 6.058594 10.945312 C 5.957031 11.878906 5.691406 11.878906 5.160156 12.945312 C 4.5 13.980469 4.269531 15.234375 4.515625 16.4375 C 4.085938 16.359375 3.667969 16.21875 3.277344 16.015625 L 4.078125 16.683594 C 3.554688 16.824219 3.015625 16.867188 2.476562 16.820312 L 3.546875 17.621094 C 3.546875 17.621094 2.875 18.285156 2.609375 18.285156 L 3.5 18.414062 C 2.460938 20.15625 1.59375 21.996094 0.917969 23.910156 C 0.910156 23.933594 0.914062 23.960938 0.929688 23.976562 C 0.945312 23.996094 0.96875 24.003906 0.996094 24 L 2.011719 23.484375 C 2.027344 23.476562 2.039062 23.460938 2.046875 23.441406 C 2.511719 21.625 3.546875 20.003906 4.996094 18.8125 L 5.816406 19.753906 C 5.636719 19.335938 5.546875 18.878906 5.550781 18.421875 L 7.019531 18.6875 C 6.351562 18.019531 6.421875 17.726562 6.421875 17.726562 C 7.328125 17.890625 8.261719 17.871094 9.164062 17.667969 C 10.191406 17.289062 11.171875 16.792969 12.085938 16.1875 C 12.230469 16.117188 11.835938 16.046875 11.972656 15.972656 C 12.109375 15.902344 12.535156 15.8125 12.679688 15.726562 C 14.230469 14.6875 15.695312 13.523438 17.058594 12.253906 C 18.636719 10.925781 20.007812 9.363281 21.113281 7.625 C 21.1875 7.496094 20.496094 7.28125 20.214844 7.226562 C 20.515625 7.261719 21.269531 7.433594 21.335938 7.308594 C 22.089844 6.085938 22.589844 4.722656 22.808594 3.296875 C 22.90625 2.132812 23.972656 -0.136719 21.160156 0 Z M 5.285156 16.417969 C 8.632812 9.210938 18.230469 3.335938 18.230469 3.335938 C 21.265625 0.960938 11.441406 7.515625 5.285156 16.550781 Z M 5.285156 16.417969 \" />, \"Plume\")\r\nexport default PlumeIcon\r\n","import { objectMap } from \"./Util\"\r\ntype Entry = {\r\n  total: number,\r\n  current: number,\r\n}\r\n// A helper function to generate a `current/total` formated string object with categories\r\nexport function catTotal<T extends string | number | symbol>(keys: readonly T[], cb: (ct: Record<T, Entry>) => void) {\r\n  const ct = catTotalObj(keys)\r\n  cb(ct)\r\n  return catTotalToStringObj(ct)\r\n}\r\n\r\nfunction catTotalObj<T extends string | number | symbol>(keys: readonly T[]): Record<T, Entry> {\r\n  return Object.fromEntries(keys.map(k => [k, { total: 0, current: 0 }])) as Record<T, Entry>\r\n}\r\n\r\nfunction catTotalToStringObj<T extends string | number | symbol>(tot: Record<T, Entry>) {\r\n  return objectMap(tot, ({ total, current }) => current === total ? `${total}` : `${current}/${total}`) as Record<T, string>\r\n}\r\n"],"names":["fillRule","d","ArtifactCardPico","artifactObj","art","slotKey","key","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","element","allElementsWithPhy","ele","includes","color","className","artifactAsset","setKey","maxWidth","maxHeight","fontSize","lineHeight","pointerEvents","p","Artifact","bottom","right","statKey","iconProps","ArtifactTooltip","children","fallback","variant","title","Suspense","ArtifactData","placement","disableInteractive","sheet","getArtSheet","substats","slotName","getSlotName","mainStatUnit","KeyMap","mainVariant","iconInlineProps","cacheValueString","justifyContent","alignItems","stars","py","map","stat","value","clamp","rolls","length","name","createSvgIcon","SlotIcon","FlowerIcon","PlumeIcon","WeaponFullCard","weaponId","weapon","useWeapon","weaponSheet","getWeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","CardDark","Box","flexShrink","alignContent","weaponAsset","ascension","mt","flexGrow","Typography","gutterBottom","gap","SqBadge","WeaponSheet","hasRefinement","refinement","WeaponStat","node","get","input","info","icon","nodeVStr","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","onClickTeammate","footer","hideStats","isTeammateCard","database","useContext","DatabaseContext","teamData","teamDataContext","DataContext","useTeamData","character","useCharacter","gender","useDBMeta","characterSheet","getCharSheet","characterDispatch","useCharacterReducer","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterContextObj","dataContextObj","favorite","useCharMeta","Skeleton","CardLight","zIndex","IconButton","_","charMeta","set","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","ExistingCharacterCardContent","NewCharacterCardContent","CharacterContext","Header","undefined","HeaderContent","CardContent","Artifacts","Grid","container","columns","spacing","item","xs","WeaponCardPico","equippedWeapon","range","i","CharacterCardPico","team","index","Stats","HeaderContentNew","content","backgroundImage","characterAsset","backgroundPosition","backgroundSize","lg","alignSelf","pr","characterEle","characterLevel","constellation","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","colored","elementKey","artifacts","allSlotKeys","k","arts","id","direction","Object","values","getDisplay","basic","n","JSON","stringify","teammateSheet","verticalAlign","transformOrigin","weaponTypeHandler","handleMultiSelect","allWeaponTypeKeys","WeaponToggle","totals","onChange","props","theme","useTheme","useMediaQuery","breakpoints","up","exclusive","wt","minWidth","sideMargin","tooltipAddl","WeaponStatPico","addlText","WeaponNameTooltip","weaponType","tr","strKey","Translate","ns","key18","trm","teamSize","sum","allElements","tally","pcNodes","objectKeyValueMap","e","equal","greaterEq","percent","protectiveCanopy","desc","counter","setcounter","useState","useEffect","timer","setInterval","c","clearInterval","canShow","sections","teamBuff","fields","ffNode","ferventFlames","PyroIcon","text","st","unit","swNode","soothingWaters","HydroIcon","condSIPath","condSI","condReadNode","siNode","shatteringIce","CryoIcon","path","header","states","on","highVoltage","ElectroIcon","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","AnemoIcon","condERShieldPath","condERShield","condERHitPath","condERHit","erNodeshield_","erNodeDMG_","erNodeRes_","enduringRock","GeoIcon","stg","condSG2elePath","condSG2ele","condSG3elePath","condSG3ele","sgBase_eleMas","isTeamBuff","sg2ele_eleMas","sg3ele_eleMas","resonanceSheets","DendroIcon","resonanceData","inferInfoMut","premod","atk_","hp_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","eleMas","infoMut","pivot","total","critRate_","setCharMetaState","follow","r","dbMeta","useCharSelectionCallback","navigate","useNavigate","params","tab","useMatch","end","chars","navTab","getWithInitWeapon","updateCharacter","v","action","type","enemyOverride","bonusStats","deepClone","teamMateKey","conditional","teamConditional","team_","charKey","mainStatAssumptionLevel","overrideArt","overrideWeapon","dbDirty","setDbDirty","useForceUpdate","dbDirtyDeferred","useDeferredValue","cache","_getTeamData","teamBundle","getTeamData","calcData","uiDataForTeam","objectMap","obj","ck","rest","cacheTeamData","getTeamDataCalc","char1DataBundle","getCharDataBundle","weapons","defaultInitialWeapon","equippedArtifacts","a","filter","forEach","tchar","databundle","useCustom","weaponSheetsDataOfType","weaponTypeKey","weaponSheetsData","restWeaponSheetData","mergeData","sheetData","allArtifactData","Array","isArray","dataObjForArtifact","dataObjForCharacter","common","weaponID","setWeapon","catTotal","keys","cb","ct","fromEntries","current","catTotalObj","tot"],"sourceRoot":""}