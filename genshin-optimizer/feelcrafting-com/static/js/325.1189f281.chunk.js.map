{"version":3,"file":"static/js/325.1189f281.chunk.js","mappings":"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","sources":["Components/MenuItemWithImage.tsx","Components/Artifact/ArtifactAutocomplete.tsx","Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/LevelSelect.tsx","Components/RefinementDropdown.tsx","Components/TextButton.tsx","Context/GraphContext.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","Context/OptimizationTargetContext.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetBadges.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildResult.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard/CustomDot.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard/CustomTooltip.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard/EnhancedPoint.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/OptimizationTargetEditorList.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/useCharTC.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/TravelerGenderSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx"],"sourcesContent":["import { ListItemIcon, ListItemText, MenuItem, Theme } from \"@mui/material\";\n\ntype MenuItemWithImageProps = {\n  value: string\n  image?: Displayable\n  text: Displayable\n  theme: Theme\n  isSelected?: boolean\n  addlElement?: Displayable\n  props?: object\n}\n\nexport default function MenuItemWithImage({ value, image = \"\", text, theme, isSelected, addlElement, props }: MenuItemWithImageProps) {\n  return <MenuItem key={value} value={value} {...props}>\n    <ListItemIcon>{image}</ListItemIcon>\n    <ListItemText primaryTypographyProps={{ style: { fontWeight: isSelected ? theme.typography.fontWeightMedium : theme.typography.fontWeightRegular } }}>\n      {text}\n    </ListItemText>\n    {addlElement && addlElement}\n  </MenuItem>\n}\n","import { Autocomplete, AutocompleteProps, AutocompleteRenderGroupParams, Box, Chip, List, ListSubheader, TextField, useTheme } from '@mui/material';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\nimport i18n from '../../i18n';\nimport KeyMap from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allMainStatKeys, allSubstatKeys, MainStatKey, SubstatKey } from '../../Types/artifact';\nimport { allElementsWithPhy, ArtifactRarity, ArtifactSetKey } from '../../Types/consts';\nimport ColorText from '../ColoredText';\nimport MenuItemWithImage from '../MenuItemWithImage';\nimport SolidColoredTextField from '../SolidColoredTextfield';\nimport { StarsDisplay } from '../StarDisplay';\nimport StatIcon from '../StatIcon';\n\ntype Grouper = string | number | undefined\n\ntype ArtifactMultiAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey\ntype ArtifactMultiAutocompleteOption<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactMultiAutocompleteProps<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<T, G>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKeys: T[]\n  setArtifactKeys: (keys: T[]) => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n}\nfunction ArtifactMultiAutocomplete<T extends ArtifactMultiAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKeys, setArtifactKeys, getName, getImage, label, ...props }:\n  ArtifactMultiAutocompleteProps<T, G>) {\n  const theme = useTheme()\n\n  const handleChange = (_, value: ArtifactMultiAutocompleteOption<T, G>[]) => {\n    setArtifactKeys(value.map(v => v.key))\n  }\n  const options = useMemo(() => allArtifactKeysWithGrouper.map(({ key, grouper }) => ({ key, label: getName(key), grouper })), [allArtifactKeysWithGrouper, getName])\n  return <Autocomplete\n    autoHighlight\n    multiple\n    disableCloseOnSelect\n    options={options}\n    value={selectedArtifactKeys.map(key => ({ key: key, label: getName(key) }))}\n    onChange={handleChange}\n    getOptionLabel={(option) => option.label}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    renderInput={(params) => <TextField\n      {...params}\n      label={label}\n      variant=\"filled\"\n      InputLabelProps={{ style: { color: theme.palette.text.primary } }}\n      color={selectedArtifactKeys.length ? \"success\" : \"primary\"}\n      type=\"search\"\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={<ColorText color={KeyMap.getVariant(option.key)}>{getImage(option.key)}</ColorText>}\n        text={<ColorText color={KeyMap.getVariant(option.key)}>{option.label}</ColorText>}\n        theme={theme}\n        isSelected={selectedArtifactKeys.includes(option.key)}\n        props={props}\n      />\n    )}\n    renderTags={(selected, getTagProps) => selected.map((value, index) => {\n      const element = allElementsWithPhy.find(ele => value.key === `${ele}_dmg_`)\n      const color = element ? element : undefined\n      return <Chip {...getTagProps({ index })} key={value.key} icon={getImage(value.key)} label={value.label} color={color} />\n    })}\n    {...props}\n  />\n}\n\ntype ArtifactSetMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<ArtifactSetKey, ArtifactRarity>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKeys: ArtifactSetKey[]\n  setArtSetKeys: (keys: ArtifactSetKey[]) => void\n}\nexport function ArtifactSetMultiAutocomplete({ artSetKeys, setArtSetKeys, ...props }: ArtifactSetMultiAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactMultiAutocomplete<ArtifactSetKey, ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKeys={artSetKeys}\n    setArtifactKeys={setArtSetKeys}\n    getName={(key: ArtifactSetKey) => t(`artifactNames_gen:${key}`)}\n    getImage={(key: ArtifactSetKey) => artifactSheets(key).defIcon}\n    label={t(\"artifact:autocompleteLabels.sets\")}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\ntype ArtifactMainStatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<MainStatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  mainStatKeys: MainStatKey[]\n  setMainStatKeys: (keys: MainStatKey[]) => void\n}\nexport function ArtifactMainStatMultiAutocomplete({ mainStatKeys, setMainStatKeys, ...props }: ArtifactMainStatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<MainStatKey, undefined>\n    allArtifactKeysWithGrouper={allMainStatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={mainStatKeys}\n    setArtifactKeys={setMainStatKeys}\n    getName={(key: MainStatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: MainStatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.mainStats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSubstatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<SubstatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  substatKeys: SubstatKey[]\n  setSubstatKeys: (keys: SubstatKey[]) => void\n}\nexport function ArtifactSubstatMultiAutocomplete({ substatKeys, setSubstatKeys, ...props }: ArtifactSubstatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<SubstatKey, undefined>\n    allArtifactKeysWithGrouper={allSubstatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={substatKeys}\n    setArtifactKeys={setSubstatKeys}\n    getName={(key: SubstatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: SubstatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.substats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSingleAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey | \"\"\ntype ArtifactSingleAutocompleteOption<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactSingleAutocompleteProps<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<T, G>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKey: T\n  setArtifactKey: (key: T | \"\") => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nfunction ArtifactSingleAutocomplete<T extends ArtifactSingleAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKey, setArtifactKey, getName, getImage, label, disable = () => false, showDefault = false, defaultText = \"\", defaultIcon = \"\", ...props }:\n  ArtifactSingleAutocompleteProps<T, G>) {\n  const theme = useTheme();\n\n  const options = useMemo(() =>\n    (showDefault\n      ? [{ key: \"\" as T, label: defaultText }]\n      : []\n    ).concat(allArtifactKeysWithGrouper.map(({ key, grouper }) => (\n      { key, label: getName(key), grouper }\n    ))), [allArtifactKeysWithGrouper, getName, defaultText, showDefault])\n\n  return <Autocomplete\n    autoHighlight\n    options={options}\n    clearIcon={selectedArtifactKey ? undefined : \"\"} // Hide the clear icon if the value is already default\n    value={{ key: selectedArtifactKey, label: getName(selectedArtifactKey) }}\n    onChange={(event, newValue, reason) => (event.type !== \"change\" || reason !== \"clear\") && setArtifactKey(newValue ? newValue.key : \"\")}\n    getOptionLabel={(option) => option.label ? option.label : defaultText}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    getOptionDisabled={option => disable(option.key)}\n    renderInput={(props) => <SolidColoredTextField\n      {...props}\n      label={label}\n      startAdornment={getImage(selectedArtifactKey)}\n      hasValue={selectedArtifactKey ? true : false}\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={getImage(option.key)}\n        text={option.label}\n        theme={theme}\n        isSelected={selectedArtifactKey === option.key}\n        props={props}\n      />\n    )}\n    {...props}\n  />\n}\n\ntype ArtifactSetSingleAutocompleteProps = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<ArtifactSetKey | \"\", ArtifactRarity>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKey: ArtifactSetKey | \"\"\n  setArtSetKey: (key: ArtifactSetKey | \"\") => void\n  label?: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nexport function ArtifactSetSingleAutocomplete({ artSetKey, setArtSetKey, label = \"\", ...props }: ArtifactSetSingleAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  label = label ? label : t(\"artifact:autocompleteLabels.set\")\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactSingleAutocomplete<ArtifactSetKey | \"\", ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKey={artSetKey}\n    setArtifactKey={setArtSetKey}\n    getName={(key: ArtifactSetKey | \"\") => key && t(`artifactNames_gen:${key}`)}\n    getImage={(key: ArtifactSetKey | \"\") => key ? artifactSheets(key).defIcon : <></>}\n    label={label}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\nfunction sortByRarityAndName(a: { key: ArtifactSetKey, grouper: ArtifactRarity }, b: { key: ArtifactSetKey, grouper: ArtifactRarity }) {\n  if (a.grouper > b.grouper) {\n    return -1\n  }\n  if (a.grouper < b.grouper) {\n    return 1\n  }\n\n  const aName = i18n.t(`artifactNames_gen:${a.key}`)\n  const bName = i18n.t(`artifactNames_gen:${b.key}`)\n  if (aName < bName) {\n    return -1\n  }\n  if (aName > bName) {\n    return 1\n  }\n\n  return 0\n}\n","import { Card, Slider } from \"@mui/material\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { clamp } from \"../../Util/Util\"\nimport CustomNumberInput from \"../CustomNumberInput\"\n\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\n  levelLow: number,\n  levelHigh: number,\n  setLow: (low: number) => void,\n  setHigh: (high: number) => void,\n  setBoth: (low: number, high: number) => void,\n  dark?: boolean,\n  disabled?: boolean,\n  showLevelText?: boolean,\n}) {\n  const [sliderLow, setsliderLow] = useState(levelLow)\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\n  const setSlider = useCallback(\n    (e: unknown, value: number | number[]) => {\n      if (typeof value == \"number\") throw new TypeError()\n      const [l, h] = value\n      setsliderLow(l)\n      setsliderHigh(h)\n    },\n    [setsliderLow, setsliderHigh])\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\n\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\n    <CustomNumberInput\n      value={sliderLow}\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\n      inputProps={{ sx: { textAlign: showLevelText ? \"right\" : \"center\" } }}\n      startAdornment={showLevelText ? \"Level: \" : undefined}\n      disabled={disabled}\n    />\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\n      getAriaLabel={() => 'Arifact Level Range'}\n      value={[sliderLow, sliderHigh]}\n      onChange={setSlider}\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\n      valueLabelDisplay=\"auto\"\n      min={0} max={20} step={1} marks\n      disabled={disabled}\n    />\n    <CustomNumberInput\n      value={sliderHigh}\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\n      sx={{ px: 1, width: 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      disabled={disabled}\n    />\n  </Card>\n}\n","import { Typography, Box } from \"@mui/material\";\n\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\n    {avatar}\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\n    {action && <Typography variant=\"caption\">{action}</Typography>}\n  </Box>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DataContext } from '../../Context/DataContext';\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\nimport DropdownButton from '../DropdownMenu/DropdownButton';\nimport SqBadge from '../SqBadge';\nimport { Translate } from '../Translate';\n\ninterface ConditionalSelectorProps {\n  conditional: DocumentConditional,\n  disabled?: boolean,\n}\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\n  } else if (\"path\" in conditional) {\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\n  }\n}\n\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const [stateKey, st] = Object.entries(conditional.states)[0]\n  const badge = getStateBadge(st.name)\n  const condName = getCondName(conditional.name)\n\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n    {condName} {badge}\n  </Button>\n}\n\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\n  const condName = getCondName(conditional.name)\n\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n      <span>Not Active</span>\n    </MenuItem>\n    <Divider />\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n  </DropdownButton>\n}\n\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalMultiple\n}\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, path, v)\n    } else {\n      deletePropPath(conditionalValues, path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [character, characterDispatch])\n\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\n      const conditionalValue = data.get(st.value).value\n      const isSelected = conditionalValue === stateKey\n      return <Button\n        color={isSelected ? \"success\" : \"primary\"}\n        disabled={disabled}\n        fullWidth\n        key={stateKey}\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\n        size=\"small\"\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        sx={{ borderRadius: 0 }}\n      >\n        {getCondName(st.name)}\n      </Button>\n    })}\n  </ButtonGroup>\n}\n\nfunction isElement(disp: Displayable): disp is JSX.Element {\n  return (typeof disp !== \"string\")\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\n  if (!stateName) return \"\"\n\n  let badgeColor: ButtonProps['color'] = \"primary\"\n  let badgeText = stateName\n  if (stateName && isElement(stateName)) {\n    if (stateName.props.color) {\n      badgeColor = stateName.props.color\n      badgeText = <span>{stateName.props.children}</span>\n    }\n  }\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getCondName(condName: Displayable): Displayable {\n  if (isElement(condName)) {\n    const key = condName.props.key18\n    const ns = condName.props.ns\n    const values = condName.props.values\n    return <Translate ns={ns} key18={key} values={values} useBadge />\n  }\n  return condName\n}\n","import { CardContent } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\nimport { evalIfFunc } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport { HeaderDisplay } from \"../DocumentDisplay\"\nimport FieldsDisplay from \"../FieldDisplay\"\nimport ConditionalSelector from \"./ConditionalSelector\"\n\ntype ConditionalDisplayProps = {\n  conditional: DocumentConditional,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n  hideDesc?: boolean,\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\n  const { data } = useContext(DataContext)\n  let fields\n  if (\"path\" in conditional) {\n    const condVal = data.get(conditional.value).value\n    fields = condVal && conditional.states[condVal]?.fields\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    fields = Object.values(conditional.states).flatMap(state => {\n      const stateVal = data.get(state.value).value\n      return stateVal ? state.fields : []\n    })\n  }\n  return <CardDark>\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <ConditionalSelector conditional={conditional} />\n    </CardContent>\n    {fields && <FieldsDisplay fields={fields} />}\n  </CardDark>\n}\n","import { Box, Divider, Typography } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../Context/DataContext\"\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\nimport FieldsDisplay from \"./FieldDisplay\"\nimport InfoTooltip from \"./InfoTooltip\"\n\ntype DocumentDisplayProps = {\n  sections: DocumentSection[],\n  teamBuffOnly?: boolean,\n  hideDesc?: boolean,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n}\n\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\n  const { data } = useContext(DataContext)\n  if (!sections.length) return null\n  const sectionDisplays = sections.map((s, i) => {\n    // If we can't show this section, return null\n    if (s.canShow && !data.get(s.canShow).value) return null\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\n    if (teamBuffOnly && !s.teamBuff) return null\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\n  }).filter(s => s)\n  if (!sectionDisplays.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\n}\n\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  if (\"fields\" in section) {\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else if (\"states\" in section) {\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else /* if (\"text\" in section) */ {\n    return <TextSectionDisplay section={section} />\n  }\n}\n\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  return <CardDark>\n    {!evalIfFunc(hideHeader, section) && section.header &&\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\n    }\n    <FieldsDisplay fields={section.fields} />\n  </CardDark>\n}\n\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\n  const { data } = useContext(DataContext)\n  return <div>\n    {evalIfFunc(section.text, data)}\n  </div>\n}\n\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\n  const { data } = useContext(DataContext)\n  let { icon, title, action } = header\n  icon = evalIfFunc(icon, data)\n  const description = !hideDesc && evalIfFunc(header.description, data)\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\n  return <>\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\n    {!hideDivider && <Divider />}\n  </>\n}\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, ascensionMaxLevelLow, maxLevel, maxLevelLow, milestoneLevels, milestoneLevelsLow } from '../Data/LevelData';\nimport { Ascension } from '../Types/consts';\nimport { clamp } from '../Util/Util';\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\nimport DropdownButton from './DropdownMenu/DropdownButton';\n\nexport default function LevelSelect({ level, ascension, setBoth, useLow = false }: { level: number, ascension: Ascension, setBoth: (action: { level?: number, ascension?: Ascension }) => void, useLow?: boolean }) {\n  const { t } = useTranslation(\"ui\")\n  const ascensionMaxLevels = useLow ? ascensionMaxLevelLow : ascensionMaxLevel\n  const setLevel = useCallback((level: number = 1) => {\n    level = clamp(level, 1, useLow ? maxLevelLow : maxLevel)\n    const ascension = ascensionMaxLevels.findIndex(ascenML => level <= ascenML) as Ascension\n    setBoth({ level, ascension })\n  }, [setBoth, ascensionMaxLevels, useLow])\n  const setAscension = useCallback(() => {\n    const lowerAscension = ascensionMaxLevels.findIndex(ascenML => level !== 90 && level === ascenML) as Ascension\n    if (ascension === lowerAscension) setBoth({ ascension: (ascension + 1) as Ascension })\n    else setBoth({ ascension: lowerAscension })\n  }, [setBoth, ascensionMaxLevels, ascension, level])\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\n    <CustomNumberInputButtonGroupWrapper >\n      <CustomNumberInput onChange={setLevel} value={level}\n        startAdornment=\"Lv. \"\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\", width: \"3em\" } }}\n        sx={{ height: \"100%\", pl: 2 }} />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ pl: 1, whiteSpace: 'nowrap' }} disabled={!(useLow ? ambiguousLevelLow : ambiguousLevel)(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\n    <DropdownButton title={t(\"selectlevel\")} sx={{ flexGrow: 1 }}>\n      {[...(useLow ? milestoneLevelsLow : milestoneLevels)].map(([lv, as]) => {\n        const selected = lv === level && as === ascension\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => setBoth({ level: lv, ascension: as })}>\n          {lv === ascensionMaxLevels[as] ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevels[as]}`}\n        </MenuItem>\n      })}\n    </DropdownButton>\n  </ButtonGroup>\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport { allRefinement, Refinement } from \"../Types/consts\"\nimport DropdownButton from \"./DropdownMenu/DropdownButton\"\n\nexport default function RefinementDropdown({ refinement, setRefinement }: { refinement: Refinement, setRefinement: (r: Refinement) => void }) {\n  const { t } = useTranslation(\"ui\")\n  return <DropdownButton title={t(\"refinement\", { value: refinement })}>\n    {allRefinement.map(r =>\n      <MenuItem key={r} onClick={() => setRefinement(r)} selected={refinement === r} disabled={refinement === r}>\n        {t(\"refinement\", { value: r })}\n      </MenuItem>)}\n  </DropdownButton>\n}\n","import { Button, ButtonProps, styled } from \"@mui/material\";\n\nconst DisabledButton = styled(Button)(({ theme }) => ({\n  \"&.Mui-disabled\": {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n  }\n}))\n\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\n  return <DisabledButton {...props} disabled  >\n    {children}\n  </DisabledButton>\n}\n","import { createContext } from \"react\"\nimport { NumNode } from \"../Formula/type\"\nimport { Build } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nexport type ChartData = {\n  valueNode: NumNode,\n  plotNode: NumNode,\n  data: Build[]\n}\nexport type GraphContextObj = {\n  chartData?: ChartData\n  setChartData: (data: ChartData | undefined) => void\n  graphBuilds: string[][] | undefined\n  setGraphBuilds: (builds: string[][] | undefined) => void\n}\nexport const GraphContext = createContext({} as GraphContextObj)\n","import { Button } from '@mui/material';\nimport React, { Suspense, useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ThumbSide from '../../Components/Character/ThumbSide';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\n\nconst CharacterSelectionModal = React.lazy(() => import('../CharacterSelectionModal'))\n\nexport default function CharSelectDropdown() {\n  const { t } = useTranslation(\"page_character\")\n  const { characterSheet } = useContext(CharacterContext)\n  const [showModal, setshowModal] = useState(false)\n  const setCharacter = useCharSelectionCallback()\n  return <>\n    <Suspense fallback={false}>\n      <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\n    </Suspense>\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\n  </>\n}\n","import { ExpandMore } from '@mui/icons-material';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport ColorText from '../../Components/ColoredText';\nimport ImgIcon from '../../Components/Image/ImgIcon';\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport SqBadge from '../../Components/SqBadge';\nimport { DataContext } from '../../Context/DataContext';\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\nimport { DatabaseContext } from '../../Database/Database';\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\nimport { DisplaySub, Variant } from '../../Formula/type';\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\n\nexport default function FormulaModal() {\n  const { modalOpen } = useContext(FormulaDataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\n    <CardDark>\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <CalculationDisplay />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n\nfunction CalculationDisplay() {\n  const { data } = useContext(DataContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const sections = getDisplaySections(contextData ?? data)\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\n    <Box sx={{ mr: -1, mb: -1 }}>\n      {sections.map(([key, Nodes]) =>\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Box>\n  </Suspense>\n}\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const { data } = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey, database), [contextData, data, sectionKey])\n  if (!header) return null\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\n  const { title, icon, action } = header\n  return <CardLight sx={{ mb: 1 }}>\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <CardContent>\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\n    </CardContent>\n  </CardLight>\n}\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\n  const { node: contextNode } = useContext(FormulaDataContext)\n  const [expanded, setExpanded] = useState(false);\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\n\n  useEffect(() => {\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\n  }, [scrollRef, node, contextNode])\n\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\n    <AccordionSummary expandIcon={<ExpandMore />} >\n      <Typography><ColorText color={node.info.variant}>{node.info.name}</ColorText> <strong>{nodeVStr(node)}</strong></Typography>\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\n      </Box>}\n    </AccordionSummary>\n    <AccordionDetails >\n      {node.formulas.map((subform, i) => <Typography key={i} component=\"div\">{subform}</Typography>)}\n    </AccordionDetails>\n  </Accordion>\n}\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\nconst ExpandButton = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: (theme as any).transitions.create('transform', {\n    duration: (theme as any).transitions.duration.shortest,\n  }),\n}));\n\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\nimport { ReactNode } from \"react\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\nimport TextButton from \"./TextButton\"\n\ntype StatInputInput = ButtonGroupProps & {\n  name: Displayable,\n  children?: ReactNode,\n  value: number,\n  placeholder?: string,\n  defaultValue?: number,\n  onValueChange: (newValue: number | undefined) => void,\n  percent?: boolean,\n  disabled?: boolean,\n  onReset?: () => void\n}\nconst FlexButtonGroup = styled(ButtonGroup)({\n  display: \"flex\"\n})\n\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\n\n  return <FlexButtonGroup {...restProps} >\n    {children}\n    <TextButton sx={{ px: 1 }}>\n      {name}\n    </TextButton>\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\n      <CustomNumberInput\n        sx={{ px: 1 }}\n        inputProps={{\n          sx: { textAlign: \"right\" }\n        }}\n        float={percent}\n        placeholder={placeholder}\n        value={value}\n        onChange={onValueChange}\n        disabled={disabled}\n        endAdornment={percent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\n      <Replay />\n    </Button>\n  </FlexButtonGroup>\n}\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore, Replay } from \"@mui/icons-material\";\nimport { Box, Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useState } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../Context/CharacterContext\";\nimport { DataContext } from \"../Context/DataContext\";\nimport { uiInput as input } from \"../Formula\";\nimport { nodeVStr } from \"../Formula/uiData\";\nimport KeyMap from '../KeyMap';\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\nimport CardLight from \"./Card/CardLight\";\nimport ColorText from \"./ColoredText\";\nimport ExpandButton from \"./ExpandButton\";\nimport StatIcon from \"./StatIcon\";\nimport StatInput from \"./StatInput\";\n\nexport function EnemyExpandCard() {\n  const { t } = useTranslation(\"ui\")\n  const { characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const [expanded, setexpanded] = useState(false)\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\n  const eLvlNode = data.get(input.enemy.level)\n  const eDefRed = data.get(input.enemy.defRed)\n  const eDefIgn = data.get(input.enemy.defIgn)\n  const onReset = useCallback(() => characterDispatch({ enemyOverride: {} }), [characterDispatch])\n\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\", gap: 1, alignItems: \"center\", flexWrap: \"wrap\" }}>\n      <Chip size=\"small\" color=\"success\" label={<span>{eLvlNode.info.name} <strong>{eLvlNode.value}</strong></span>} />\n      {allElementsWithPhy.map(element => <Typography key={element} ><EnemyResText element={element} /></Typography>)}\n      <Typography>DEF Red. {nodeVStr(eDefRed)}</Typography>\n      <Typography>DEF Ignore {nodeVStr(eDefIgn)}</Typography>\n      <Box flexGrow={1} display=\"flex\" justifyContent=\"flex-end\" gap={1}>\n        <Button size=\"small\" color=\"error\" onClick={onReset} startIcon={<Replay />}>{t`reset`}</Button>\n        <ExpandButton\n          expand={expanded}\n          onClick={toggle}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n          size=\"small\"\n          sx={{ marginLeft: 0 }}\n        >\n          <ExpandMore />\n        </ExpandButton>\n      </Box>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent sx={{ pt: 0 }}>\n        <EnemyEditor />\n      </CardContent>\n    </Collapse>\n  </CardLight>\n}\n\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\n  const { data } = useContext(DataContext)\n  const node = data.get(input.enemy[`${element}_res_`])\n  const immune = !isFinite(node.value)\n  const content = immune ? <span >{StatIcon[element]} &#8734;</span> :\n    <span >{StatIcon[element]} <strong>{nodeVStr(node)}</strong></span>\n  return <ColorText color={element}>{content}</ColorText>\n}\n\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const defaultVal = 10\n\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\n  return <Grid container spacing={1}>\n    <Grid item {...bsProps}>\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n        To get the specific resistance values of enemies, please visit the wiki.\n      </Button>\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\n        value={eLvl}\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\n        defaultValue={data.get(input.lvl).value}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\n      />\n    </Grid>\n    {allElementsWithPhy.map(eleKey => {\n      const statKey = `${eleKey}_enemyRes_`\n      const val = enemyOverride[statKey]\n      const elementImmunity = val === Number.MAX_VALUE\n      return <Grid item key={eleKey} {...bsProps}>\n        <StatInput\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\n          value={val !== undefined ? (elementImmunity ? Infinity : val) : 10}\n          placeholder={elementImmunity ? \"∞ \" : KeyMap.getStr(statKey)}\n          defaultValue={defaultVal}\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\n          disabled={elementImmunity}\n          percent\n        >\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\n            Immunity\n          </Button>\n        </StatInput>\n      </Grid>\n    })}\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\n        value={eDefRed}\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\n        value={eDefIgn}\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\n    </Grid>\n  </Grid>\n}\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography, Box } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CardDark from \"../../Components/Card/CardDark\";\nimport CardLight from \"../../Components/Card/CardLight\";\nimport CloseButton from \"../../Components/CloseButton\";\nimport ColorText from \"../../Components/ColoredText\";\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport StatEditorList from \"../../Components/StatEditorList\";\nimport { CharacterContext } from \"../../Context/CharacterContext\";\nimport { DataContext } from \"../../Context/DataContext\";\nimport { FormulaDataContext } from \"../../Context/FormulaDataContext\";\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\nimport { ReadNode } from \"../../Formula/type\";\nimport { nodeVStr } from \"../../Formula/uiData\";\nimport { allEleDmgKeys, allEleResKeys } from \"../../KeyMap\";\n\nconst cols = {\n  xs: 1, md: 2, lg: 3\n}\n\nexport default function StatModal({ open, onClose }) {\n  const { t } = useTranslation(\"page_character\")\n  return <ModalWrapper open={open} onClose={onClose}>\n    <CardDark>\n      <CardHeader title={t`addStats.title`} action={<CloseButton onClick={onClose} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <Stack spacing={1}>\n          <BonusStatsEditor />\n          <EnemyExpandCard />\n          <MainStatsCards />\n        </Stack>\n      </CardContent></CardDark>\n  </ModalWrapper>\n}\nconst keys = [...allInputPremodKeys]\nconst wrapperFunc = (e: JSX.Element, key?: string) => <Grid item key={key} xs={1}>{e}</Grid>\nfunction BonusStatsEditor() {\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\n\nconst otherStatKeys = [\n  ...allEleDmgKeys,\n  ...allEleResKeys,\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\n] as const\n\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\n\n\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\n  const { data, oldData } = useContext(DataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  return <FieldDisplayList >\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={JSON.stringify(rn.info)} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} data={data} setFormulaData={setFormulaData} />)}\n    {extra}\n  </FieldDisplayList>\n}\n\nfunction MainStatsCards() {\n  const { characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const specialNode = data.get(input.special)\n  const charEle = characterSheet.elementKey\n  const isMelee = characterSheet.isMelee()\n\n  const otherStatReadNodes = useMemo(() => {\n    const nodes = otherStatKeys.filter(k => {\n      if (k.includes(charEle)) return false\n      if (isMelee && k.includes(\"physical\")) return true\n      return true\n    }).map(k => input.total[k])\n\n    return nodes.filter(n => !!data.get(n).value)\n  }, [data, charEle, isMelee])\n\n\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\n\n  return <CardLight><CardContent>\n    <Grid container columns={cols} spacing={1}>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Main Stats\">\n          <StatDisplayContent nodes={mainReadNodes}\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.icon} {specialNode.info.name}</ColorText></span>\n              <span >{nodeVStr(specialNode)}</span>\n            </ListItem>}\n          />\n        </StatDisplayCard>\n      </Grid>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Other Stats\">\n          <StatDisplayContent nodes={otherStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\n        <StatDisplayCard title=\"Misc Stats\">\n          <StatDisplayContent nodes={miscStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>}\n    </Grid>\n  </CardContent></CardLight>\n}\nfunction StatDisplayCard({ title, children }) {\n  return <CardDark>\n    <CardContent sx={{ py: 1 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle1\">{title}</Typography>\n      </Box>\n    </CardContent>\n    {children}\n  </CardDark>\n}\n","import { createContext } from \"react\";\n\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\n","import { ArtSetExclusion } from \"../../../../Database/DataManagers/BuildSettingData\";\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\nimport { allOperations, constantFold, OptNode } from \"../../../../Formula/optimization\";\nimport { ConstantNode } from \"../../../../Formula/type\";\nimport { constant, customRead, max, min, threshold } from \"../../../../Formula/utils\";\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\n\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\nexport function pruneAll(nodes: OptNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: OptNode[], arts: ArtifactsBySlot } {\n  let should = forced\n  /** If `key` makes progress, all operations in `value` should be performed */\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\n    pruneOrder: { pruneNodeRange: true },\n    pruneArtRange: { pruneNodeRange: true },\n    pruneNodeRange: { reaffine: true },\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\n  }\n  let count = 0\n  while (Object.values(should).some(x => x) && count++ < 20) {\n    if (should.pruneOrder) {\n      delete should.pruneOrder\n      const newArts = pruneOrder(arts, numTop, exclusion)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneOrder }\n      }\n    }\n    if (should.pruneArtRange) {\n      delete should.pruneArtRange\n      const newArts = pruneArtRange(nodes, arts, minimum)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneArtRange }\n      }\n    }\n    if (should.pruneNodeRange) {\n      delete should.pruneNodeRange\n      const newNodes = pruneNodeRange(nodes, arts)\n      if (nodes !== newNodes) {\n        nodes = newNodes\n        should = { ...should, ...deps.pruneNodeRange }\n      }\n    }\n    if (should.reaffine) {\n      delete should.reaffine\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\n      if (nodes !== newNodes || arts !== newArts) {\n        nodes = newNodes\n        arts = newArts\n        should = { ...should, ...deps.reaffine }\n      }\n    }\n  }\n  return { nodes, arts }\n}\n\nexport function pruneExclusion(nodes: OptNode[], exclusion: ArtSetExclusion): OptNode[] {\n  const maxValues: Dict<keyof typeof exclusion, number> = {}\n  for (const [key, e] of Object.entries(exclusion)) {\n    if (!e.includes(4)) continue\n    maxValues[key] = e.includes(2) ? 1 : 3\n  }\n  return mapFormulas(nodes, f => f, f => {\n    if (f.operation !== \"threshold\") return f\n\n    const [v, t, pass, fail] = f.operands\n    if (v.operation === \"read\" && t.operation === \"const\") {\n      const key = v.path[v.path.length - 1], thres = t.value\n      if (key in maxValues) {\n        const max: number = maxValues[key]\n        if (max < thres) return fail\n        if (thres === 2 && exclusion[key]!.includes(2))\n          return threshold(v, 4, pass, fail)\n      }\n    }\n    return f\n  })\n}\n\nfunction reaffine(nodes: OptNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: OptNode[], arts: ArtifactsBySlot } {\n  const affineNodes = new Set<OptNode>(), topLevelAffine = new Set<OptNode>()\n\n  function visit(node: OptNode, isAffine: boolean) {\n    if (isAffine) affineNodes.add(node)\n    else node.operands.forEach(op => affineNodes.has(op) && topLevelAffine.add(op))\n  }\n\n  const dynKeys = new Set<string>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const { operation } = f\n    switch (operation) {\n      case \"read\":\n        dynKeys.add(f.path[1])\n        visit(f, true)\n        break\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\n      case \"mul\": {\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\n        break\n      }\n      case \"const\": visit(f, true); break\n      case \"res\": case \"threshold\": case \"sum_frac\":\n      case \"max\": case \"min\": visit(f, false); break\n      default: assertUnreachable(operation)\n    }\n  })\n\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\n    Object.keys(arts.base).length === dynKeys.size)\n    return { nodes, arts }\n\n  let current = -1\n  function nextDynKey(): string {\n    while (dynKeys.has(`${++current}`));\n    return `${current}`\n  }\n\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\n  const affineMap = new Map(affine.map(node => [node,\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\n      ? node\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\n  nodes = mapFormulas(nodes, f => affineMap.get(f) ?? f, f => f)\n\n  function reaffineArt(stat: DynStat): DynStat {\n    const values = constantFold([...affineMap.keys()], {\n      dyn: objectMap(stat, (value) => constant(value))\n    } as any, _ => true)\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\n  }\n  const result = {\n    nodes, arts: {\n      base: reaffineArt(arts.base),\n      values: objectKeyMap(allSlotKeys, slot =>\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\n    }\n  }\n  const offsets = Object.entries(reaffineArt({}))\n  for (const arts of Object.values(result.arts.values))\n    for (const { values } of arts)\n      for (const [key, baseValue] of offsets)\n        values[key] -= baseValue\n  return result\n}\n/** Remove artifacts that cannot be in top `numTop` builds */\nfunction pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\n  let progress = false\n  /**\n   * Note:\n   * This function assumes that every base (reaffined) stats are monotonically increasing. That is, artifacts\n   * with higher stats are better. This remains true as long as the main and substats are in increasing. Set\n   * effects that decrease enemy resistance (which is monotonically decreasing) does not violate this assumption\n   * as set effects are not handled here.\n   */\n  const allowRainbow = !exclusion.rainbow?.length, keys = Object.keys(arts.base)\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\n  const values = objectKeyMap(allSlotKeys, slot => {\n    const list = arts.values[slot]\n    const newList = list.filter(art => {\n      let count = 0\n      return list.every(other => {\n        const otherBetterEqual = keys.every(k => (other.values[k] ?? 0) >= (art.values[k] ?? 0))\n        const otherMaybeBetter = keys.some(k => (other.values[k] ?? 0) > (art.values[k] ?? 0))\n        const otherBetter = otherBetterEqual && (otherMaybeBetter || other.id > art.id)\n        const canSwitch = (allowRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set\n        if (otherBetter && canSwitch) count++\n        return count < numTop\n      })\n    })\n    if (newList.length !== list.length) progress = true\n    return newList\n  })\n  return progress ? { base: arts.base, values } : arts\n}\n/** Remove artifacts that cannot reach `minimum` in any build */\nfunction pruneArtRange(nodes: OptNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const wrap = { arts }\n  while (true) {\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\n\n    let progress = false\n    const values = objectKeyMap(allSlotKeys, slot => {\n      const result = wrap.arts.values[slot].filter(art => {\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\n        const newRange = computeNodeRange(nodes, read)\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\n      })\n      if (result.length !== wrap.arts.values[slot].length)\n        progress = true\n      return result\n    })\n    if (!progress) break\n    wrap.arts = { base: wrap.arts.base, values }\n  }\n  return wrap.arts\n}\nfunction pruneNodeRange(nodes: OptNode[], arts: ArtifactsBySlot): OptNode[] {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n  const nodeRange = computeNodeRange(nodes, reads)\n\n  return mapFormulas(nodes, f => {\n    {\n      const { min, max } = nodeRange.get(f)!\n      if (min === max) return constant(min)\n    }\n    const { operation } = f\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\n    switch (operation) {\n      case \"threshold\": {\n        const [value, threshold, pass, fail] = operandRanges\n        if (value.min >= threshold.max) return f.operands[2]\n        else if (value.max < threshold.min) return f.operands[3]\n        if (pass.max === pass.min &&\n          fail.max === fail.min &&\n          pass.min === fail.min && isFinite(pass.min))\n          return constant(pass.max)\n        break\n      }\n      case \"min\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\n        })\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\n        break\n      }\n      case \"max\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every(op2 => op1.max >= op2.min)\n        })\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\n        break\n      }\n    }\n    return f\n  }, f => f)\n}\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\n  const result: DynMinMax = {}\n  ranges.forEach(range => {\n    Object.entries(range).forEach(([key, value]) => {\n      if (result[key]) {\n        result[key].min += value.min\n        result[key].max += value.max\n      } else result[key] = { ...value }\n    })\n  })\n  return result\n}\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\n  const result: DynMinMax = {}\n  if (arts.length) {\n    Object.keys(arts[0].values)\n      .filter(key => arts.every(art => art.values[key]))\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\n    arts.forEach(({ values }) => {\n      for (const [key, value] of Object.entries(values)) {\n        if (!result[key]) result[key] = { min: 0, max: value }\n        else {\n          if (result[key].max < value) result[key].max = value\n          if (result[key].min > value) result[key].min = value\n        }\n      }\n    })\n  }\n  return result\n}\nexport function computeFullArtRange(arts: ArtifactsBySlot): DynMinMax {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  return addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n}\nexport function computeNodeRange(nodes: OptNode[], reads: DynMinMax): Map<OptNode, MinMax> {\n  const range = new Map<OptNode, MinMax>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const { operation } = f\n    const operands = f.operands.map(op => range.get(op)!)\n    let current: MinMax\n    switch (operation) {\n      case \"read\":\n        if (f.path[0] !== \"dyn\")\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\n        break\n      case \"const\": current = computeMinMax([f.value]); break\n      case \"add\": case \"min\": case \"max\":\n        current = {\n          min: allOperations[operation](operands.map(x => x.min)),\n          max: allOperations[operation](operands.map(x => x.max)),\n        }; break\n      case \"res\": current = {\n        min: allOperations[operation]([operands[0].max]),\n        max: allOperations[operation]([operands[0].min]),\n      }; break\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\n        accu.min * current.min, accu.min * current.max,\n        accu.max * current.min, accu.max * current.max,\n      ])); break\n      case \"threshold\":\n        if (operands[0].min >= operands[1].max) current = operands[2]\n        else if (operands[0].max < operands[1].min) current = operands[3]\n        else current = computeMinMax([], [operands[2], operands[3]])\n        break\n      case \"sum_frac\": {\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\n        if (sum.min <= 0 && sum.max >= 0)\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\n        else\n          // TODO: Check this\n          current = computeMinMax([\n            x.min / sum.min, x.min / sum.max,\n            x.max / sum.min, x.max / sum.max\n          ])\n        break\n      }\n      default: assertUnreachable(operation)\n    }\n    range.set(f, current)\n  })\n  return range\n}\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\n  return { min, max }\n}\n\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\n\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\n}\nexport function mergePlot(plots: PlotData[]): PlotData {\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\n  while (keys.size > maxCount) {\n    scale *= reductionScaling\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\n  }\n  const result: PlotData = {}\n  for (const plot of plots)\n    for (const build of Object.values(plot)) {\n      const x = Math.round(build.plot! / scale) * scale\n      if (!result[x] || result[x]!.value < build.value)\n        result[x] = build\n    }\n  return result\n}\n\nexport function countBuilds(arts: ArtifactsBySlot): number {\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\n}\n\n\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\n  filter_loop: for (const filter of filters) {\n    for (const [slot, f] of Object.entries(filter)) {\n      const available = artSets[slot]!\n      switch (f.kind) {\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\n        case \"id\": break\n      }\n    }\n    yield filter\n  }\n}\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\n  return new Set(exclusion?.includes(2)\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\n}\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\n  /**\n   * This generation algorithm is separated into two parts:\n   * - \"Shape\" generation\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\n   * - Shape filling\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\n   */\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\n  let shapes: number[][] = []\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\n    if (current.length === 5) {\n      if (allowedRainbows.has(rainbows.length))\n        shapes.push(current)\n      return\n    }\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\n  }\n  populateShapes([0], new Set([0]), [0])\n  function indexOfShape(shape: number[], replacing: number) {\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\n      return undefined\n    shape = [...shape]\n    shape[replacing] = 5\n    return shape.reduce((a, b) => a * 6 + b, 0)\n  }\n  for (let replacing = 4; replacing >= 0; replacing--) {\n    const required: Map<number, number> = new Map()\n    for (const shape of shapes) {\n      const id = indexOfShape(shape, replacing)\n      if (id === undefined) continue\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\n    }\n    for (const [id, remaining] of required.entries()) {\n      if (remaining === 0) {\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\n        shape[replacing] = 5\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\n        shapes.push(shape)\n      }\n    }\n  }\n\n  // Shapes are now calculated and merged, proceed to fill in the sets\n\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\n\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\n\n  function* check(shape: number[]) {\n    const used: Set<ArtifactSetKey> = new Set()\n    let groupped: number[][] = [], rainbows: number[] = []\n    for (const i of shape) {\n      groupped.push([])\n      if (i === 5) rainbows.push(groupped.length - 1)\n      else groupped[i].push(groupped.length - 1)\n    }\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\n    let usableRainbows = rainbows.length\n\n    // Inception.. because js doesn't like functions inside a for-loop\n    function* check(i: number) {\n      if (i === groupped.length)\n        return yield* check_free(0)\n\n      for (const set of artSets) {\n        if (used.has(set)) continue\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\n        let requiredRainbows = 0\n\n        if (allowedSet && !allowedSet.has(length)) {\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\n        }\n\n        used.add(set)\n        counts[set] = groupped[i].length\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\n        usableRainbows -= requiredRainbows\n\n        yield* check(i + 1)\n\n        usableRainbows += requiredRainbows\n        counts[set] = 0\n        used.delete(set)\n      }\n    }\n    // We separate filling rainbow slots from groupped slots because it has an entirely\n    // different set of rules regarding what can be filled and what states to be kept.\n    function* check_free(i: number) {\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\n      let required = 0\n      for (const set of artSets) {\n        const allowedSet = allowedCounts[set], count = counts[set]\n        if (!allowedSet) continue\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\n        else if (!allowedSet.has(count)) {\n          required += [...allowedSet].find(x => x > count)! - count\n          missing.push(set)\n        }\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\n      }\n      if (required > remaining) return\n      if (i === rainbows.length) {\n        yield { ...result }\n        return\n      }\n      if (required === remaining) {\n        for (const set of missing) {\n          counts[set]++\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n          yield* check_free(i + 1)\n          counts[set]--\n        }\n        return\n      }\n      for (const set of [...isolated, ...missing]) {\n        counts[set]++\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n        yield* check_free(i + 1)\n        counts[set]--\n      }\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\n      yield* check_free(i + 1)\n    }\n    yield* check(0)\n  }\n  for (const shape of shapes) yield* check(shape)\n}\n\nexport type RequestFilter = StrictDict<SlotKey,\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\n  { kind: \"id\", ids: Set<string> }\n>\n\nexport type DynStat = { [key in string]: number }\nexport type ArtifactBuildData = {\n  id: string\n  set?: ArtifactSetKey\n  values: DynStat\n}\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\n\nexport type PlotData = Dict<number, Build>\nexport interface Build {\n  value: number\n  plot?: number\n  artifactIds: string[]\n}\n\nexport type DynMinMax = { [key in string]: MinMax }\nexport type MinMax = { min: number, max: number }\n","import { Box } from \"@mui/material\"\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\nimport DocumentDisplay from \"../DocumentDisplay\"\n\ntype Data = {\n  setKey: ArtifactSetKey,\n  setNumKey: SetNum,\n  hideHeader?: boolean,\n  conditionalsOnly?: boolean\n}\n\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\n  if (!sheet) return null\n\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\n  return <Box display=\"flex\" flexDirection=\"column\">\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\n  </Box>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/DataManagers/BuildSettingData\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildSetting(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildSettings.follow(characterKey, (k, r, v) => r === \"update\" && setBuildSetting(v)),\n    [characterKey, setBuildSetting, database])\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\n\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\n}\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBox, CheckBoxOutlineBlank, Replay, Settings } from '@mui/icons-material';\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport CloseButton from '../../../../../Components/CloseButton';\nimport ColorText from '../../../../../Components/ColoredText';\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\nimport { Translate } from '../../../../../Components/Translate';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { UIData } from '../../../../../Formula/uiData';\nimport { constant } from '../../../../../Formula/utils';\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\nimport useBuildSetting from '../useBuildSetting';\n\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\n  const dataContext = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const [open, setOpen] = useState(false)\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\n  const onClose = useCallback(() => setOpen(false), [setOpen])\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\n\n  const artKeysByRarity = useMemo(() => artifactSheets\n    ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n      .reverse().flatMap(([, sets]) => sets)\n      .filter(key => !key.includes(\"Prayers\"))\n    : [], [artifactSheets])\n  const { artKeys, artSlotCount } = useMemo(() => {\n    const artSlotCount = objectKeyMap(artKeysByRarity, _ => objectKeyMap(allSlotKeys, _ => 0))\n    database.arts.values.forEach(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\n    const artKeys = [...artKeysByRarity].sort((a, b) =>\n      +(getNumSlots(artSlotCount[a]) < 2) - +(getNumSlots(artSlotCount[b]) < 2))\n    return dbDirty && { artKeys, artSlotCount }\n  }, [dbDirty, database, artKeysByRarity])\n\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\n\n  const { allow2, allow4 } = useMemo(() => ({\n    allow2: artKeysByRarity.filter(k => !artSetExclusion[k]?.includes(2)).length,\n    allow4: artKeysByRarity.filter(k => !artSetExclusion[k]?.includes(4)).length,\n  }), [artKeysByRarity, artSetExclusion])\n  const exclude2 = artKeysByRarity.length - allow2, exclude4 = artKeysByRarity.length - allow4\n  const artifactCondCount = useMemo(() =>\n    (Object.keys(conditional)).filter(k =>\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\n    , [conditional])\n  const fakeDataContextObj = useMemo(() => ({\n    ...dataContext,\n    data: new UIData({ ...dataContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\n  }), [dataContext])\n  const resetArtConds = useCallback(() => {\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\n    characterDispatch({ conditional: tconditional })\n  }, [conditional, characterDispatch]);\n  const setAllExclusion = useCallback(\n    (setnum: number, exclude = true) => {\n      const artSetExclusion_ = deepClone(artSetExclusion)\n      artKeysByRarity.forEach(k => {\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\n      })\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\n    },\n    [artKeysByRarity, artSetExclusion, buildSettingDispatch],\n  )\n\n  return <>\n    <CardLight sx={{ display: \"flex\" }}>\n      <CardContent sx={{ flexGrow: 1 }} >\n        <Typography>\n          <strong>{t`artSetConfig.title`}</strong>\n        </Typography>\n        <Stack spacing={1}>\n          <Typography>{t`artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.enabled\")}</SqBadge></Typography>\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n          <Typography>{t`artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n        </Stack>\n\n      </CardContent>\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\n        <Settings />\n      </Button>\n    </CardLight>\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\" >{t`artSetConfig.title`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent >\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Box display=\"flex\" gap={1}>\n            <Typography><strong>{t`artSetConfig.modal.setCond.title`}</strong></Typography>\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.selected\")}</SqBadge></Typography>\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`artSetConfig.modal.setCond.reset`}</Button>\n          </Box>\n          <Typography>{t`artSetConfig.modal.setCond.text`}</Typography>\n        </CardContent></CardLight>\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Typography sx={{ flexGrow: 1 }}><strong>\n            <Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\n          </strong></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\n        </CardContent></CardLight>\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <CardLight>\n              <CardContent>\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.2rainbow`}</Button>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.4rainbow`}</Button>\n                </Box>\n              </CardContent>\n            </CardLight>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\n          {artKeys.map(setKey => {\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets(setKey)} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\n          })}\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onClose} />\n      </CardContent>\n    </CardDark></ModalWrapper >}\n  </>\n}\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\n  return <CardLight>\n    <CardContent>\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`artSetConfig.allowAll${setNum}set`)}</Button>\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`artSetConfig.excludeAll${setNum}set`)}</Button>\n      </Box>\n    </CardContent>\n  </CardLight>\n}\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\n  const { t } = useTranslation(\"sheet\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\n  const allow4 = !setExclusionSet.includes(4)\n  const slots = useMemo(() => getNumSlots(slotCount), [slotCount])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (!allow4 || slots < 4) return []\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [sheet.setEffects, allow4, slots])\n  const exclude2 = setExclusionSet.includes(2)\n  const exclude4 = setExclusionSet.includes(4)\n  return <Grid item key={setKey} xs={1}>\n    <CardLight sx={{ height: \"100%\", opacity: slots < 2 ? \"50%\" : undefined }}>\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\n          <Box display=\"flex\" gap={1}>\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\n            <InfoTooltip title={<Box>\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\n              </Box>\n            </Box>} />\n          </Box>\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\n        </Box>\n      </Box>\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\n        {slots >= 2 && <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>}\n        {slots >= 4 && <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>}\n      </ButtonGroup>\n\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n          {set4CondNums.map(setNumKey =>\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n          )}\n        </CardContent>\n      </DataContext.Provider>}\n    </CardLight>\n  </Grid >\n}\n\nfunction getNumSlots(slotCount: Record<string, number>): number {\n  return Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0)\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\n\nconst levels = [0, 4, 8, 12, 16, 20] as const\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\n    title={mainStatAssumptionLevel ? t(\"mainStat.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"mainStat.assumptionLvl.no\")}>\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"mainStat.assumptionLvl.lvl\", { lvl }) : t(\"mainStat.assumptionLvl.no\")}</MenuItem>)}\n  </DropdownButton>\n}\n","import { CardContent, Divider, Typography } from '@mui/material';\nimport { useContext } from 'react';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nimport { FormulaDataContext } from '../../../../../Context/FormulaDataContext';\nexport default function BonusStatsCard() {\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const bonusStatsKeys = Object.keys(bonusStats)\n  if (!bonusStatsKeys.length) return null\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\n  return <CardLight>\n    <CardContent>\n      <Typography>Bonus Stats</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      {nodes.map(n => <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} data={data} setFormulaData={setFormulaData} />)}\n    </CardContent>\n  </CardLight>\n}\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\n\nexport const warningBuildNumber = 10000000\nexport type BuildStatus = {\n  type: \"active\" | \"inactive\"\n  tested: number      // tested, including `failed`\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\n  skipped: number\n  total: number\n  startTime?: number\n  finishTime?: number\n}\n\nconst Monospace = styled(\"strong\")({\n  fontFamily: \"monospace\"\n})\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 10,\n  borderRadius: 5,\n}));\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\n  const hasTotal = isFinite(total)\n\n  const generatingBuilds = type !== \"inactive\"\n  const unskipped = total - skipped\n\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\n\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\n\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\n  let title = \"\" as ReactNode\n  let subtitle = \"\" as ReactNode\n  let progress = undefined as undefined | number\n\n  if (generatingBuilds) {\n    progress = tested * 100 / (unskipped)\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\n  } else if (tested + skipped) {\n    progress = 100\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Total duration: {durationString}</Typography>\n  } else {\n    return null\n  }\n\n  return <Alert severity={color} variant=\"filled\" sx={{\n    \"& .MuiAlert-message\": {\n      flexGrow: 1\n    }\n  }}>\n    {title}\n    {subtitle}\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\n      {hasTotal && <Grid item>\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\n      </Grid>}\n      <Grid item flexGrow={1} >\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\n      </Grid>\n    </Grid>}\n  </Alert>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\nimport { useCallback, useContext } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport Artifact from \"../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\nimport useArtifact from \"../../ReactHooks/useArtifact\";\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { ICachedSubstat } from \"../../Types/artifact\";\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\nimport { clamp } from \"../../Util/Util\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ColorText from \"../ColoredText\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport { StatColoredWithUnit } from \"../StatDisplay\";\nimport StatIcon from \"../StatIcon\";\nimport ArtifactTooltip from \"./ArtifactTooltip\";\n\ntype Data = {\n  artifactId?: string,\n  slotKey: SlotKey,\n  mainStatAssumptionLevel?: number,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType\n}\n\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\n  const art = useArtifact(artifactId)\n  const { database } = useContext(DatabaseContext)\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\n  const theme = useTheme()\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\n  </BGComponent>\n\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\">\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\n        <ArtifactTooltip art={art}>\n          <Box\n            component=\"img\"\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\n          />\n        </ArtifactTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon charKey={location && database.chars.LocationToCharacterKey(location)} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        {/* mainstats */}\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography><StatColoredWithUnit statKey={mainStatKey} /></Typography>} disableInteractive>\n              <span>{StatIcon[mainStatKey]}</span>\n            </BootstrapTooltip>\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\n          </Typography>} />\n      </Box>\n      {/* substats */}\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\n  if (!stat.value) return null\n  const numRolls = stat.rolls?.length ?? 0\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\n  const unit = KeyMap.unit(stat.key)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && <StatColoredWithUnit statKey={stat.key} />}</Typography>} disableInteractive>\n        <span>{StatIcon[stat.key]}</span>\n      </BootstrapTooltip>\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ charKey }: { charKey: CharacterKey | \"\" }) {\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(charKey, gender), [charKey, gender])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} size={2.5} sx={{ marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { Masonry } from \"@mui/lab\"\nimport { Divider, ListItem, Box } from \"@mui/material\"\nimport { useContext, useMemo } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { FormulaDataContext } from \"../../Context/FormulaDataContext\"\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\nimport { ArtCharDatabase, DatabaseContext } from \"../../Database/Database\"\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\nimport { DisplaySub } from \"../../Formula/type\"\nimport { NodeDisplay, UIData } from \"../../Formula/uiData\"\nimport { customRead } from \"../../Formula/utils\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { objectMap } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport SqBadge from \"../SqBadge\"\n\nexport default function StatDisplayComponent() {\n  const optimizationTarget = useContext(OptimizationTargetContext)\n  const { data, oldData } = useContext(DataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const { database } = useContext(DatabaseContext)\n\n  const sections = useMemo(() =>\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\n    [data])\n  return useMemo(() => <Box sx={{ mr: -1, mb: -1 }}>\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\n      {sections.map(([key, Nodes]) =>\n        <Section key={key} displayNs={Nodes} sectionKey={key}\n          optimizationTarget={optimizationTarget} data={data} oldData={oldData} setFormulaData={setFormulaData} database={database}\n        />)}\n    </Masonry >\n  </Box>, [data, database, oldData, optimizationTarget, sections, setFormulaData])\n}\nfunction Section({ displayNs, sectionKey, optimizationTarget, data, oldData, setFormulaData, database }: {\n  displayNs: DisplaySub<NodeDisplay>,\n  sectionKey: string,\n  optimizationTarget?: string[],\n  data: UIData, oldData?: UIData,\n  setFormulaData: (data?: UIData | undefined, node?: NodeDisplay<number> | undefined) => void\n  database: ArtCharDatabase\n}) {\n  const header = usePromise(() => getDisplayHeader(data, sectionKey, database), [data, sectionKey])\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\n  return useMemo(() => {\n    if (!header) return <CardDark></CardDark>\n    const { title, icon, action } = header\n    return <CardDark >\n      <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n      <Divider />\n      <FieldDisplayList sx={{ m: 0 }}>\n        {Object.entries(displayNs).map(([nodeKey, n]) =>\n          <NodeFieldDisplay data={data} setFormulaData={setFormulaData} key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\n            emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\n          />)}\n      </FieldDisplayList>\n    </CardDark>\n  }, [data, displayNs, displayNsReads, header, oldData, optimizationTarget, sectionKey, setFormulaData])\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport { input } from \"../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport useWeapon from \"../../ReactHooks/useWeapon\";\nimport { LocationKey } from \"../../Types/consts\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\n\ntype Data = {\n  weaponId?: string,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType,\n}\n\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\n  const { refinement, location } = weapon\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\n        <WeaponNameTooltip sheet={weaponSheet}>\n          <Box\n            component=\"img\"\n            src={weaponSheet.getImg(weapon.ascension)}\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\n          />\n        </WeaponNameTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\n        </Box>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\n        <WeaponStat node={UIData.get(input.weapon.main)} />\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  if (!node.info.name) return null\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.name}</Typography>} disableInteractive>\n        <span>{node.info.icon}</span>\n      </BootstrapTooltip>\n      <span>{nodeVStr(node)}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }: { location: LocationKey }) {\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(location ? database.chars.LocationToCharacterKey(location) : \"\", gender), [location, gender])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { Box, Typography } from \"@mui/material\"\nimport { useMemo } from \"react\"\nimport ArtifactSetTooltip from \"../../../../../Components/Artifact/ArtifactSetTooltip\"\nimport { artifactSlotIcon } from \"../../../../../Components/Artifact/SlotNameWIthIcon\"\nimport SqBadge from \"../../../../../Components/SqBadge\"\nimport { ArtifactSheet } from \"../../../../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../../../../ReactHooks/usePromise\"\nimport { ICachedArtifact } from \"../../../../../Types/artifact\"\nimport { ArtifactSetKey, SlotKey } from \"../../../../../Types/consts\"\n\ntype ArtifactSetBadgesProps = {\n  artifacts: ICachedArtifact[],\n  currentlyEquipped?: boolean\n}\nexport function ArtifactSetBadges({ artifacts, currentlyEquipped = false }: ArtifactSetBadgesProps) {\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = useMemo(() => artifacts\n    .filter(arti => arti)\n    .reduce((acc, curr) => {\n      acc[curr.setKey] ? acc[curr.setKey].push(curr.slotKey) : acc[curr.setKey] = [curr.slotKey]\n      return acc\n    }, {}),\n    [artifacts]\n  )\n  return <>{Object.entries(setToSlots)\n    .sort(([_k1, slotarr1], [_k2, slotarr2]) => slotarr2.length - slotarr1.length)\n    .map(([key, slotarr]) =>\n      <ArtifactSetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\n    )\n  }</>\n\n}\nfunction ArtifactSetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: SlotKey[] }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n  if (!artifactSheet) return null\n  const numInSet = slotarr.length\n  const setActive = Object.keys(artifactSheet.setEffects).map((setKey) => parseInt(setKey)).filter(setNum => setNum <= numInSet)\n  return <Box>\n    <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={numInSet} >\n      <SqBadge sx={{ height: \"100%\" }} color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\n        {setActive.map(n => <SqBadge sx={{ ml: 0.5 }} key={n} color=\"success\">{n}</SqBadge>)}\n      </Typography></SqBadge>\n    </ArtifactSetTooltip>\n  </Box>\n}\n","import { Checkroom, ChevronRight } from '@mui/icons-material';\nimport { Button, CardContent, Grid, Skeleton, Typography, Box } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { uiInput as input } from '../../../../../Formula';\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\nimport { ICachedArtifact } from '../../../../../Types/artifact';\nimport { allSlotKeys, charKeyToLocCharKey } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\nimport { ArtifactSetBadges } from './ArtifactSetBadges';\n\ntype NewOld = {\n  newId: string,\n  oldId?: string\n}\n\ntype BuildDisplayItemProps = {\n  label?: Displayable,\n  compareBuild: boolean,\n  disabled?: boolean,\n  extraButtonsRight?: JSX.Element,\n  extraButtonsLeft?: JSX.Element,\n}\n//for displaying each artifact build\nexport default function BuildDisplayItem({ label, compareBuild, extraButtonsRight, extraButtonsLeft, disabled }: BuildDisplayItemProps) {\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const dataContext = useContext(DataContext)\n\n  const { data, oldData } = dataContext\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\n\n  const equipBuild = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\n    allSlotKeys.forEach(s => {\n      const aid = data.get(input.art[s].id).value\n      if (aid) database.arts.set(aid, { location: charKeyToLocCharKey(characterKey) })\n    })\n    database.weapons.set(data.get(input.weapon.id).value!, { location: charKeyToLocCharKey(characterKey) })\n  }, [characterKey, data, database])\n\n  const statProviderContext = useMemo(() => {\n    const dataContext_ = { ...dataContext }\n    if (!compareBuild) dataContext_.oldData = undefined\n    return dataContext_\n  }, [dataContext, compareBuild])\n\n  const artifactIdsBySlot = useMemo(() => Object.fromEntries(allSlotKeys.map(slotKey => [\n    slotKey,\n    data.get(input.art[slotKey].id).value\n  ])), [data])\n  const artifacts = useMemo(() => artifactIdsBySlot && Object.values(artifactIdsBySlot)\n    .map((artiId: string) => database.arts.get(artiId))\n    .filter(arti => arti) as ICachedArtifact[],\n    [artifactIdsBySlot, database.arts]\n  )\n\n  const weaponNano = useMemo(() => <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />, [data])\n  // Memoize Arts because of its dynamic onClick\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\n    <Grid item xs={1} key={slotKey} >\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={artifactIdsBySlot[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\n        const oldId = equippedArtifacts[slotKey]\n        const newId = artifactIdsBySlot[slotKey]!\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\n      }} />\n    </Grid>), [setNewOld, equippedArtifacts, mainStatAssumptionLevel, artifactIdsBySlot])\n\n  if (!oldData) return null\n  const currentlyEquipped = allSlotKeys.every(slotKey => artifactIdsBySlot[slotKey] === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\n\n  return <CardLight>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\n      <CardContent>\n        <BuildHeader label={label} currentlyEquipped={currentlyEquipped} artifacts={artifacts} extraButtonsLeft={extraButtonsLeft} equipBuild={equipBuild} disabled={disabled} extraButtonsRight={extraButtonsRight} />\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\n          <Grid item xs={1}>\n            {weaponNano}\n          </Grid>\n          {artNanos}\n        </Grid>\n        <DataContext.Provider value={statProviderContext}>\n          <StatDisplayComponent />\n        </DataContext.Provider>\n      </CardContent>\n    </Suspense>\n  </CardLight>\n}\n\nfunction BuildHeader({ label, currentlyEquipped, artifacts, extraButtonsLeft, equipBuild, disabled, extraButtonsRight }: {\n  label?: Displayable,\n  currentlyEquipped: boolean\n  artifacts: ICachedArtifact[]\n  extraButtonsLeft?: JSX.Element,\n  equipBuild: () => void\n  disabled?: boolean,\n  extraButtonsRight?: JSX.Element,\n}) {\n  return useMemo(() => <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\n    {label !== undefined && <SqBadge color=\"info\"><Typography><strong>{label}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\n    <ArtifactSetBadges artifacts={artifacts} currentlyEquipped={currentlyEquipped} />\n    <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\n    </Box>\n    {extraButtonsLeft}\n    <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped} startIcon={<Checkroom />}>Equip Build</Button>\n    {extraButtonsRight}\n  </Box>, [artifacts, currentlyEquipped, disabled, equipBuild, extraButtonsLeft, extraButtonsRight, label])\n}\n\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const onEquip = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\n    database.arts.set(newId, { location: charKeyToLocCharKey(characterKey) })\n    onClose()\n  }, [newId, database, characterKey, onClose])\n\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\n    <CardDark>\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip editorProps={{ disableSet: true, disableSlot: true }} /></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip editorProps={{ disableSet: true, disableSlot: true }} /></Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { IBuildResult } from \"../../../../Database/DataManagers/BuildResult\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildResult(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildResult, setBuildResult] = useState(() => database.buildResult.get(characterKey))\n  useEffect(() => setBuildResult(database.buildResult.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildResult.follow(characterKey, (k, r, v) => r === \"update\" && setBuildResult(v)),\n    [characterKey, setBuildResult, database])\n  const buildResultDispatch = useCallback((action: Partial<IBuildResult>) => characterKey && database.buildResult.set(characterKey, action), [characterKey, database],)\n\n  return { buildResult, buildResultDispatch }\n}\n","import { DotProps } from \"recharts\"\nimport EnhancedPoint from \"./EnhancedPoint\"\n\ntype CustomShapeType = \"circle\" | \"diamond\" | \"square\"\ntype CustomDotProps = DotProps & {\n  selectedPoint: EnhancedPoint | undefined\n  payload?: EnhancedPoint\n  radiusSelected?: number\n  radiusUnselected?: number\n  colorSelected?: string\n  colorUnselected: string\n  shape?: CustomShapeType\n}\nexport default function CustomDot({ cx, cy, payload, selectedPoint, radiusSelected = 6, radiusUnselected = 3, colorSelected = \"red\", colorUnselected, shape = \"circle\" }: CustomDotProps) {\n  if (!cx || !cy || !payload) {\n    return null\n  }\n\n  const isSelected = selectedPoint && selectedPoint.x === payload.x && selectedPoint.y === payload.y\n\n  return (\n    <g\n      className=\"custom-dot\"\n      data-chart-x={cx}\n      data-chart-y={cy}\n      data-x-value={payload.x}\n      data-y-value={payload.y}\n      data-radius={isSelected ? radiusUnselected : radiusSelected}\n    >\n      {!isSelected\n        ? <CustomShape id=\"customShapeUnselected\" shape={shape} cx={cx} cy={cy} r={radiusUnselected} fill={colorUnselected} />\n        : <>\n          <CustomShape id=\"customShapeSelected\" shape={shape} cx={cx} cy={cy} r={radiusSelected / 2} fill={colorSelected} />\n          <CustomShape id=\"customShapeBorder\" shape={shape} cx={cx} cy={cy} r={radiusSelected} fill=\"none\" stroke={colorSelected} />\n        </>\n      }\n    </g>\n  )\n}\nfunction CustomShape({ shape, id, cx, cy, r, fill, stroke}: { shape: CustomShapeType, id?: string, cx: number, cy: number, r: number, fill?: string, stroke?: string }) {\n  switch(shape) {\n    case \"circle\":\n      return <circle id={id} cx={cx} cy={cy} r={r} fill={fill} stroke={stroke} />\n    case \"square\":\n      return <rect id={id} x={cx-r} y={cy-r} width={r*2} height={r*2} fill={fill} stroke={stroke} />\n    case \"diamond\":\n      return <polygon id={id} points={`${cx},${cy+r*2.5} ${cx+r*1.5},${cy} ${cx},${cy-r*2.5} ${cx-r*1.5},${cy}`} fill={fill} stroke={stroke} />\n  }\n}\n","import { Button, CardContent, ClickAwayListener, Grid, Skeleton, Stack, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { TooltipProps } from \"recharts\"\nimport ArtifactCardPico from \"../../../../../../Components/Artifact/ArtifactCardPico\"\nimport BootstrapTooltip from \"../../../../../../Components/BootstrapTooltip\"\nimport CardDark from \"../../../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../../../Components/CloseButton\"\nimport SqBadge from \"../../../../../../Components/SqBadge\"\nimport { CharacterContext } from \"../../../../../../Context/CharacterContext\"\nimport { DataContext } from \"../../../../../../Context/DataContext\"\nimport { DatabaseContext } from \"../../../../../../Database/Database\"\nimport { input } from \"../../../../../../Formula\"\nimport { Unit, valueString } from \"../../../../../../KeyMap\"\nimport { ICachedArtifact } from \"../../../../../../Types/artifact\"\nimport { allSlotKeys } from \"../../../../../../Types/consts\"\nimport useBuildResult from \"../../useBuildResult\"\nimport { ArtifactSetBadges } from \"../ArtifactSetBadges\"\nimport EnhancedPoint from \"./EnhancedPoint\"\n\ntype CustomTooltipProps = TooltipProps<number, string> & {\n  xLabel: Displayable\n  xUnit: Unit | undefined\n  yLabel: Displayable\n  yUnit: Unit | undefined\n  selectedPoint: EnhancedPoint | undefined\n  setSelectedPoint: (pt: EnhancedPoint | undefined) => void\n  addBuildToList: (build: string[]) => void\n  graphBuilds: string[][] | undefined\n}\nexport default function CustomTooltip({ xLabel, xUnit, yLabel, yUnit, selectedPoint, setSelectedPoint, addBuildToList, graphBuilds, ...tooltipProps }: CustomTooltipProps) {\n  const { database } = useContext(DatabaseContext)\n  const { data } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildResult: { builds } } = useBuildResult(characterKey)\n\n  const canAddBuild = useMemo(() => ![...builds, ...(graphBuilds ?? [])].some(artiIds =>\n    artiIds.every(id => selectedPoint?.artifactIds.includes(id))\n  ), [builds, graphBuilds, selectedPoint])\n\n  const artifactsBySlot: { [slot: string]: ICachedArtifact } = useMemo(() =>\n    selectedPoint && selectedPoint.artifactIds && Object.fromEntries(selectedPoint.artifactIds\n      .map(id => {\n        const artiObj = database.arts.get(id)\n        return [artiObj?.slotKey, artiObj]\n      })\n      .filter(arti => arti)\n    ),\n    [database.arts, selectedPoint]\n  )\n  const clickAwayHandler = useCallback((e) => {\n    if (!(e.target.id.includes(\"customShape\") || e.target.id.includes(\"chartContainer\"))) {\n      setSelectedPoint(undefined)\n    }\n  }, [setSelectedPoint])\n\n  const currentlyEquipped = artifactsBySlot && allSlotKeys.every(slotKey => artifactsBySlot[slotKey]?.id === data.get(input.art[slotKey].id).value)\n\n  if (tooltipProps.active && selectedPoint) {\n    return <ClickAwayListener onClickAway={clickAwayHandler}>\n      <CardDark sx={{ minWidth: \"400px\", maxWidth: \"400px\" }} onClick={(e) => e.stopPropagation()}>\n        <CardContent>\n          <Stack gap={1}>\n            <Stack direction=\"row\" alignItems=\"start\" gap={1}>\n              <Stack spacing={0.5} flexGrow={99}>\n                {currentlyEquipped && <SqBadge color=\"info\"><strong>{t(\"currentlyEquippedBuild\")}</strong></SqBadge>}\n                <Suspense fallback={<Skeleton width={300} height={50} />}>\n                  <ArtifactSetBadges artifacts={Object.values(artifactsBySlot)} currentlyEquipped={currentlyEquipped} />\n                </Suspense>\n              </Stack>\n              <Grid item flexGrow={1} />\n              <CloseButton onClick={() => setSelectedPoint(undefined)} />\n            </Stack>\n            <Grid container direction=\"row\" spacing={0.75} columns={5}>\n              {allSlotKeys.map(key =>\n                <Grid item key={key} xs={1}>\n                  <Suspense fallback={<Skeleton width={75} height={75} />}>\n                    <ArtifactCardPico artifactObj={artifactsBySlot[key]} slotKey={key} />\n                  </Suspense>\n                </Grid>\n              )}\n            </Grid>\n            <Typography><strong>{xLabel}</strong>: {valueString(xUnit === \"%\" ? selectedPoint.x / 100 : selectedPoint.x, xUnit)}</Typography>\n            <Typography><strong>{yLabel}</strong>: {valueString(yUnit === \"%\" ? selectedPoint.y / 100 : selectedPoint.y, yUnit)}</Typography>\n            <BootstrapTooltip title={canAddBuild ? \"\" : t(\"tcGraph.buildAlreadyInList\")} placement=\"top\">\n              <span>\n                <Button sx={{ width: \"100%\" }} disabled={!canAddBuild} color=\"info\" onClick={() => addBuildToList(selectedPoint.artifactIds)}>{t(\"addBuildToList\")}</Button>\n              </span>\n            </BootstrapTooltip>\n          </Stack>\n        </CardContent>\n      </CardDark>\n    </ClickAwayListener>\n  }\n\n  return null\n}\n","export default class EnhancedPoint {\n  public x: number\n  public trueY?: number\n  public artifactIds: string[]\n  public min?: number\n  public current?: number\n  public highlighted?: number\n\n  public constructor(x: number, y: number, artifactIds: string[]) {\n    this.x = x\n    this.trueY = y\n    this.artifactIds = artifactIds\n  }\n\n  public get y(): number {\n    return (this.trueY || this.current || this.highlighted) as number\n  }\n  public set y(y: number | undefined) {\n    this.trueY = y\n  }\n}\n","import { CheckBox, CheckBoxOutlineBlank, Download, Replay } from '@mui/icons-material';\nimport { Button, CardContent, Collapse, Divider, Grid, Slider, styled, Typography } from '@mui/material';\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CartesianGrid, ComposedChart, Label, Legend, LegendType, Line, ResponsiveContainer, Scatter, Tooltip, XAxis, YAxis } from 'recharts';\nimport BootstrapTooltip from '../../../../../../Components/BootstrapTooltip';\nimport CardDark from '../../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../../Components/Card/CardLight';\nimport InfoTooltip from '../../../../../../Components/InfoTooltip';\nimport { CharacterContext } from '../../../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../../../Context/DataContext';\nimport { ChartData } from '../../../../../../Context/GraphContext';\nimport { ArtCharDatabase, DatabaseContext } from '../../../../../../Database/Database';\nimport { input } from '../../../../../../Formula';\nimport { NumNode } from '../../../../../../Formula/type';\nimport { valueString } from '../../../../../../KeyMap';\nimport { allSlotKeys, SlotKey } from '../../../../../../Types/consts';\nimport { objectKeyValueMap, objPathValue } from '../../../../../../Util/Util';\nimport useBuildResult from '../../useBuildResult';\nimport OptimizationTargetSelector from '../OptimizationTargetSelector';\nimport CustomDot from './CustomDot';\nimport CustomTooltip from './CustomTooltip';\nimport EnhancedPoint from './EnhancedPoint';\n\nexport type Point = {\n  x: number\n  y: number\n  artifactIds: string[]\n  min?: number\n}\ntype ChartCardProps = {\n  plotBase?: string[]\n  setPlotBase: (path: string[] | undefined) => void\n  disabled?: boolean\n  showTooltip?: boolean\n  chartData?: ChartData\n  graphBuilds: string[][] | undefined\n  setGraphBuilds: (builds: string[][] | undefined) => void\n}\nexport default function ChartCard({ plotBase, setPlotBase, disabled = false, showTooltip = false, chartData, graphBuilds, setGraphBuilds }: ChartCardProps) {\n  const { t } = useTranslation([\"page_character_optimize\", \"ui\"])\n  const { data } = useContext(DataContext)\n  const [showDownload, setshowDownload] = useState(false)\n  const [showMin, setshowMin] = useState(true)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildResult: { builds } } = useBuildResult(characterKey)\n\n  const [sliderLow, setSliderLow] = useState(-Infinity)\n  const [sliderHigh, setSliderHigh] = useState(Infinity)\n  const setSlider = useCallback(\n    (_e: unknown, value: number | number[]) => {\n      if (typeof value === \"number\") throw new TypeError()\n      const [l, h] = value\n      setSliderLow(l)\n      setSliderHigh(h)\n    },\n    [setSliderLow, setSliderHigh]\n  )\n  useEffect(() => { setSliderLow(-Infinity); setSliderHigh(Infinity) }, [chartData])\n\n  const { displayData, downloadData, sliderMin, sliderMax } = useMemo(() => {\n    if (!chartData) return { displayData: null, downloadData: null }\n    let sliderMin = Infinity\n    let sliderMax = -Infinity\n    const currentBuild = objectKeyValueMap(allSlotKeys, slotKey => [slotKey, data?.get(input.art[slotKey].id).value ?? \"\"])\n    const highlightedBuildsSlotMap = [...builds, ...(graphBuilds ?? [])].map(artiIds => convertArtiIdsToArtiSlotMap(artiIds, database))\n    // Shape the data so we know the current and highlighted builds\n    const points = chartData.data.map(({ value: y, plot: x, artifactIds }) => {\n      if (x === undefined) return null\n      if (x < sliderMin) sliderMin = x\n      if (x > sliderMax) sliderMax = x\n      const enhancedDatum: EnhancedPoint = new EnhancedPoint(x, y, artifactIds)\n      const datumSlotMap = convertArtiIdsToArtiSlotMap(artifactIds, database)\n\n      const isCurrentBuild = allSlotKeys.every(slotKey => currentBuild[slotKey] === datumSlotMap[slotKey])\n      if (isCurrentBuild) {\n        enhancedDatum.current = y\n        // Remove the Y-value so there are not 2 dots displayed for these builds\n        enhancedDatum.y = undefined\n        return enhancedDatum\n      }\n\n      const isHighlightedBuild = highlightedBuildsSlotMap.some(highlightedSlotMap =>\n        allSlotKeys.every(slotKey => highlightedSlotMap[slotKey] === datumSlotMap[slotKey])\n      )\n      if (isHighlightedBuild) {\n        enhancedDatum.highlighted = y\n        // Remove the Y-value so there are not 2 dots displayed for these builds\n        enhancedDatum.y = undefined\n      }\n      return enhancedDatum\n    })\n      .sort((a, b) => a!.x - b!.x) as EnhancedPoint[]\n\n    const minimumData: EnhancedPoint[] = []\n    for (const point of points) {\n      let last: EnhancedPoint | undefined\n      while ((last = minimumData.pop())) {\n        if (last.y > point.y) {\n          minimumData.push(last)\n          break\n        }\n      }\n      minimumData.push(point)\n    }\n\n    // Note:\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\n    // It could be faster too since there're no empty entries in `minimumData`.\n    // From my limited testing, using multiple data sources makes the graph behave strangely though.\n    if (minimumData[0]?.x !== points[0]?.x)\n      points[0].min = minimumData[0].y\n    minimumData.forEach(pt => { pt.min = pt.y })\n\n    const downloadData = {\n      minimum: minimumData.map(point => [point.x, point.y]),\n      allData: points.map(point => [point.x, point.y]),\n    }\n    return { displayData: points.filter(pt => pt && pt.x >= sliderLow && pt.x <= sliderHigh), downloadData, sliderMin, sliderMax }\n  }, [chartData, builds, data, database, graphBuilds, sliderLow, sliderHigh])\n\n  const plotBaseNode = plotBase && objPathValue(data?.getDisplay(), plotBase)\n  const invalidTarget = plotBase && (!plotBaseNode || plotBaseNode.isEmpty)\n\n  const buttonText = invalidTarget\n    ? t(\"page_character_optimize:targetSelector.invalidTarget\")\n    : t(\"page_character_optimize:targetSelector.selectGraphTarget\")\n\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <Typography >{t`tcGraph.vs`}</Typography>\n        </Grid>\n        <Grid item>\n          <BootstrapTooltip placement=\"top\" title={showTooltip ? t(\"page_character_optimize:selectTargetFirst\") : \"\"}>\n            <span>\n              <OptimizationTargetSelector\n                optimizationTarget={plotBase}\n                setTarget={target => setPlotBase(target)}\n                defaultText={buttonText}\n                disabled={disabled}\n              />\n            </span>\n          </BootstrapTooltip>\n        </Grid>\n        <Grid item>\n          <BootstrapTooltip title={!plotBase ? \"\" : t(\"ui:reset\")} placement=\"top\">\n            <span><Button color=\"error\" onClick={() => setPlotBase(undefined)} disabled={!plotBase}>\n              <Replay />\n            </Button></span>\n          </BootstrapTooltip>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <InfoTooltip placement=\"top\" title={t(\"page_character_optimize:tcGraph.desc\")} />\n        </Grid>\n        {!!downloadData && <Grid item>\n          <Button size='small' startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\n            color={showMin ? \"success\" : \"secondary\"}\n            onClick={() => setshowMin(!showMin)}>{t`tcGraph.showStatThr`}</Button>\n        </Grid>}\n        {!!downloadData && <Grid item>\n          <Button size='small' color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>{t`tcGraph.downloadData`}</Button>\n        </Grid>}\n      </Grid>\n    </CardContent>\n    {displayData && displayData.length && <Divider />}\n    {chartData && displayData && displayData.length && <CardContent>\n      <Collapse in={!!downloadData && showDownload}>\n        <CardDark sx={{ mb: 2 }}>\n          <CardContent>\n            <Typography>Min Data</Typography>\n            <DataDisplay data={downloadData?.minimum} />\n            <Typography>All Data</Typography>\n            <DataDisplay data={downloadData?.allData} />\n          </CardContent>\n        </CardDark>\n      </Collapse>\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} graphBuilds={graphBuilds} setGraphBuilds={setGraphBuilds} />\n      {displayData.length > 1 && <Slider\n        marks\n        value={[sliderLow, sliderHigh]}\n        onChange={setSlider}\n        onChangeCommitted={setSlider}\n        min={sliderMin}\n        max={sliderMax}\n        step={(sliderMax - sliderMin) / 20}\n        valueLabelDisplay=\"auto\"\n        valueLabelFormat={n => valueString(chartData.plotNode.info?.unit === \"%\" ? n / 100 : n, chartData.plotNode.info?.unit)}\n        sx={{ ml: \"6%\", width: \"93%\" }}\n      />}\n    </CardContent>}\n  </CardLight >\n}\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  fontFamily: \"monospace\",\n  resize: \"vertical\",\n  minHeight: \"5em\"\n})\nfunction DataDisplay({ data, }: { data?: object }) {\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\n    const target = e.target as HTMLTextAreaElement;\n    target.selectionStart = 0;\n    target.selectionEnd = target.value.length;\n  }} />\n}\n\nconst optTargetColor = \"#8884d8\"\nconst highlightedColor = \"cyan\"\nconst currentColor = \"#46a046\"\nconst lineColor = \"#ff7300\"\nfunction Chart({ displayData, plotNode, valueNode, showMin, graphBuilds, setGraphBuilds }: {\n  displayData: EnhancedPoint[]\n  plotNode: NumNode\n  valueNode: NumNode\n  showMin: boolean\n  graphBuilds: string[][] | undefined\n  setGraphBuilds: (builds: string[][] | undefined) => void\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const [selectedPoint, setSelectedPoint] = useState<EnhancedPoint>()\n  const addBuildToList = useCallback((build: string[]) => setGraphBuilds([...(graphBuilds ?? []), build]), [setGraphBuilds, graphBuilds])\n  const chartOnClick = useCallback(props => {\n    if (props && props.chartX && props.chartY) setSelectedPoint(getNearestPoint(props.chartX, props.chartY, 20, displayData))\n  }, [setSelectedPoint, displayData])\n\n  // Below works because character translation should already be loaded\n  const xLabelValue = getLabelFromNode(plotNode, t)\n  const yLabelValue = getLabelFromNode(valueNode, t)\n\n  return <ResponsiveContainer width=\"100%\" height={600}>\n    <ComposedChart id=\"chartContainer\" data={displayData} onClick={chartOnClick} style={{ cursor: \"pointer\" }}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis\n        dataKey=\"x\"\n        scale=\"linear\"\n        unit={plotNode.info?.unit}\n        domain={[\"auto\", \"auto\"]}\n        tick={{ fill: 'white' }}\n        type=\"number\"\n        tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)}\n        label={<Label fill=\"white\" dy={10}>{xLabelValue}</Label>}\n        height={50}\n      />\n      <YAxis\n        name=\"DMG\"\n        domain={[\"auto\", \"auto\"]}\n        unit={valueNode.info?.unit}\n        allowDecimals={false}\n        tick={{ fill: 'white' }}\n        type=\"number\"\n        label={<Label fill=\"white\" angle={-90} dx={-40}>{yLabelValue}</Label>}\n        width={100}\n      />\n      <Tooltip\n        content={<CustomTooltip\n          xLabel={xLabelValue}\n          xUnit={plotNode.info?.unit}\n          yLabel={yLabelValue}\n          yUnit={valueNode.info?.unit}\n          selectedPoint={selectedPoint}\n          setSelectedPoint={setSelectedPoint}\n          addBuildToList={addBuildToList}\n          graphBuilds={graphBuilds}\n        />}\n        trigger=\"click\"\n        wrapperStyle={{ pointerEvents: \"auto\", cursor: \"auto\" }}\n        cursor={false}\n      />\n      <Legend payload={[\n        ...(showMin ? [{ id: \"min\", value: t`tcGraph.statReqThr`, type: \"line\" as LegendType, color: lineColor }] : []),\n        { id: \"trueY\", value: t`tcGraph.generatedBuilds`, type: \"circle\", color: optTargetColor },\n        { id: \"highlighted\", value: t`tcGraph.highlightedBuilds`, type: \"square\", color: highlightedColor },\n        { id: \"current\", value: t`tcGraph.currentBuild`, type: \"diamond\", color: currentColor },\n      ]} />\n      {showMin && <Line\n        dataKey=\"min\"\n        stroke={lineColor}\n        type=\"stepBefore\"\n        connectNulls\n        strokeWidth={2}\n        isAnimationActive={false}\n        dot={false}\n        activeDot={false}\n      />}\n      <Scatter\n        dataKey=\"trueY\"\n        isAnimationActive={false}\n        shape={<CustomDot selectedPoint={selectedPoint} colorUnselected={optTargetColor} />}\n      />\n      <Scatter\n        dataKey=\"highlighted\"\n        isAnimationActive={false}\n        shape={<CustomDot shape=\"square\" selectedPoint={selectedPoint} colorUnselected={highlightedColor} />}\n      />\n      <Scatter\n        dataKey=\"current\"\n        isAnimationActive={false}\n        shape={<CustomDot shape=\"diamond\" selectedPoint={selectedPoint} colorUnselected={currentColor} />}\n      />\n    </ComposedChart>\n  </ResponsiveContainer>\n}\n\nfunction convertArtiIdsToArtiSlotMap(artifactIds: string[], database: ArtCharDatabase) {\n  // Create partial mapping of slotkey -> build artifact\n  const partialArtiSlotMap: Dict<SlotKey, string> = Object.fromEntries(artifactIds.map(artiId => {\n    const arti = database.arts.get(artiId)\n    return arti ? [arti.slotKey, arti.id] : []\n  }))\n  // Fill in the blanks so we have a StrictDict<SlotKey, string>\n  return objectKeyValueMap(allSlotKeys, slotKey => [slotKey, partialArtiSlotMap[slotKey] ?? \"\"])\n}\n\nfunction getNearestPoint(clickedX: number, clickedY: number, threshold: number, data: EnhancedPoint[]) {\n  const nearestDomPtData = Array.from(document.querySelectorAll(\".custom-dot\"))\n    .reduce((domPtA, domPtB) => {\n      const { chartX: aChartX, chartY: aChartY } = (domPtA as any).dataset\n      const aDistance = Math.sqrt((clickedX - aChartX) ** 2 + (clickedY - aChartY) ** 2)\n      const { chartX: bChartX, chartY: bChartY } = (domPtB as any).dataset\n      const bDistance = Math.sqrt((clickedX - bChartX) ** 2 + (clickedY - bChartY) ** 2)\n      return aDistance <= bDistance\n        ? domPtA\n        : domPtB\n    })[\"dataset\"]\n\n  // Don't select a point too far away\n  const distance = Math.sqrt((clickedX - nearestDomPtData.chartX) ** 2 + (clickedY - nearestDomPtData.chartY) ** 2)\n  return distance < threshold\n    ? data.find(d => d.x === +nearestDomPtData.xValue && d.y === +nearestDomPtData.yValue)\n    : undefined\n}\n\nfunction getLabelFromNode(node: NumNode, t: any) {\n  return typeof node.info?.name === \"string\"\n    ? node.info.name\n    : `${t(`${node.info?.name?.props.ns}:${node.info?.name?.props.key18}`)}${node.info?.textSuffix ? ` ${node.info?.textSuffix}` : \"\"}`\n}\n","import { Replay } from '@mui/icons-material';\nimport { Button, CardContent, Divider, Grid, Typography, Box } from '@mui/material';\nimport { useContext, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { arrayEq, useMemoEq } from '..';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StatColoredWithUnit } from '../../../../../Components/StatDisplay';\nimport StatIcon from '../../../../../Components/StatIcon';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\nimport { BuildSettingReducerAction } from '../../../../../Database/DataManagers/BuildSettingData';\nimport { MainStatKey } from '../../../../../Types/artifact';\nimport { allElementsWithPhy } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\n\nexport default function MainStatSelectionCard({ disabled = false, }: {\n  disabled?: boolean\n}) {\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {artifactsSlotsToSelectMainStats.map(slotKey =>\n      <MainStatSelectionCardFactory\n        key={slotKey}\n        mainStatKeySlotKey={mainStatKeys[slotKey]}\n        slotKey={slotKey}\n        disabled={disabled}\n        buildSettingDispatch={buildSettingDispatch} />\n    )}\n  </Box >\n}\n\nfunction MainStatSelectionCardFactory({ mainStatKeySlotKey, slotKey, disabled, buildSettingDispatch }: {\n  mainStatKeySlotKey: MainStatKey[]\n  slotKey: typeof artifactsSlotsToSelectMainStats[number]\n  disabled: boolean\n  buildSettingDispatch: (action: BuildSettingReducerAction) => boolean\n}) {\n  const { t } = useTranslation(\"artifact\")\n  const mainStatKeySlotKey_ = useMemoEq(() => mainStatKeySlotKey, arrayEq)\n  const numSel = mainStatKeySlotKey_.length\n  return useMemo(() =>\n    <Box>\n      <Divider />\n      <CardContent sx={{ pt: 1 }}>\n        <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\n          <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\n            <span>{artifactSlotIcon(slotKey)}</span>\n          </BootstrapTooltip>\n          <Box flexGrow={1}>\n            <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\n          </Box>\n          <Button color=\"error\" size=\"small\" disabled={!numSel || disabled} sx={{ mt: -1, mb: -1 }}\n            onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\n            <Replay />\n          </Button>\n        </Box>\n        <Grid container spacing={1}>\n          {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\n            const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\n            const color = mainStatKeySlotKey_.includes(mainStatKey)\n              ? element ?? \"success\"\n              : \"secondary\"\n            return <MainStatSelectionCardInnerFactoryAbstractBuilderMethod key={mainStatKey} i={i} slotKey={slotKey} mainStatKey={mainStatKey} color={color} disabled={disabled} buildSettingDispatch={buildSettingDispatch} />\n          })}\n        </Grid>\n      </CardContent>\n    </Box>\n    , [slotKey, t, numSel, disabled, buildSettingDispatch, mainStatKeySlotKey_])\n}\n\nfunction MainStatSelectionCardInnerFactoryAbstractBuilderMethod({ i, slotKey, mainStatKey, color, disabled, buildSettingDispatch }: {\n  i: number,\n  slotKey: typeof artifactsSlotsToSelectMainStats[number]\n  mainStatKey: MainStatKey\n  color: typeof allElementsWithPhy[number] | \"success\" | \"secondary\"\n  disabled: boolean\n  buildSettingDispatch: (action: BuildSettingReducerAction) => boolean\n}) {\n  return useMemo(() => <Grid item flexGrow={1} xs={(i < 3 && slotKey !== \"goblet\") ? 4 : undefined} >\n    <BootstrapTooltip placement=\"top\" title={<Typography><strong><StatColoredWithUnit statKey={mainStatKey} /></strong></Typography>} disableInteractive>\n      <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\n        onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\n        {StatIcon[mainStatKey]}\n      </Button>\n    </BootstrapTooltip>\n  </Grid>, [buildSettingDispatch, color, disabled, i, mainStatKey, slotKey])\n}\n","import { CheckBox, CheckBoxOutlineBlank, DeleteForever } from \"@mui/icons-material\"\nimport { Button, ButtonGroup } from \"@mui/material\"\nimport { useCallback, useContext } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\"\nimport { DataContext } from \"../../../../../Context/DataContext\"\nimport { StatFilters, StatFilterSetting } from \"../../../../../Database/DataManagers/BuildSettingData\"\nimport { NodeDisplay } from \"../../../../../Formula/uiData\"\nimport { objPathValue } from \"../../../../../Util/Util\"\nimport OptimizationTargetSelector from \"./OptimizationTargetSelector\"\n\ntype OptimizationTargetEditorListProps = {\n  statFilters: StatFilters\n  setStatFilters: (statFilters: StatFilters) => void\n  disabled: boolean\n}\n\nexport default function OptimizationTargetEditorList({ statFilters, setStatFilters, disabled = false }: OptimizationTargetEditorListProps) {\n  const setTarget = useCallback((path: string[], oldPath?: string[], oldIndex?: number) => {\n    const statFilters_ = { ...statFilters }\n    const oldPathStr = JSON.stringify(oldPath)\n    const oldFilterArr = oldPath ? [...statFilters[oldPathStr]!] : undefined\n    const pathStr = JSON.stringify(path)\n    const filterArr = [...(statFilters[pathStr] ?? [])]\n    // Copy/create new setting\n    if (oldIndex !== undefined && oldFilterArr) filterArr.push(oldFilterArr[oldIndex])\n    else filterArr.push({ value: 0, disabled: false })\n    statFilters_[pathStr] = filterArr\n    // Remove old setting\n    if (oldIndex !== undefined && oldFilterArr) {\n      oldFilterArr.splice(oldIndex, 1)\n      if (!!oldFilterArr.length) statFilters_[oldPathStr] = oldFilterArr\n      else delete statFilters_[oldPathStr]\n    }\n    setStatFilters({ ...statFilters_ })\n  }, [setStatFilters, statFilters])\n\n  const delTarget = useCallback((path: string[], index: number) => {\n    const statFilters_ = { ...statFilters }\n    const pathStr = JSON.stringify(path)\n    const filterArr = [...statFilters[pathStr]!]\n    filterArr.splice(index, 1)\n    if (!!filterArr.length) statFilters_[pathStr] = filterArr\n    else delete statFilters_[pathStr]\n    setStatFilters({ ...statFilters_ })\n  }, [setStatFilters, statFilters])\n\n  const setTargetValue = useCallback((path: string[], index: number, value: number) => {\n    const statFilters_ = { ...statFilters }\n    const pathStr = JSON.stringify(path)\n    const filterArr = [...statFilters[pathStr]!]\n    filterArr[index] = { ...filterArr[index], value } as StatFilterSetting\n    statFilters_[pathStr] = filterArr\n    setStatFilters({ ...statFilters_ })\n  }, [setStatFilters, statFilters])\n\n  const setTargetDisabled = useCallback((path: string[], index: number, disabled: boolean) => {\n    const statFilters_ = { ...statFilters }\n    const pathStr = JSON.stringify(path)\n    const filterArr = [...statFilters[pathStr]!]\n    filterArr[index] = { ...filterArr[index], disabled } as StatFilterSetting\n    statFilters_[pathStr] = filterArr\n    setStatFilters({ ...statFilters_ })\n  }, [setStatFilters, statFilters])\n\n  return <>\n    {Object.entries(statFilters).flatMap(([pathStr, settings]) =>\n      settings?.map((setting, index) =>\n        <OptimizationTargetEditorItem path={JSON.parse(pathStr)} setting={setting} index={index} setTarget={setTarget} delTarget={delTarget} setValue={setTargetValue} setDisabled={setTargetDisabled} disabled={disabled} key={pathStr + index} />\n      )\n    )}\n    <OptimizationTargetEditorItem setTarget={setTarget} delTarget={delTarget} setValue={setTargetValue} setDisabled={setTargetDisabled} disabled={disabled} />\n  </>\n}\n\ntype OptimizationTargetEditorItemProps = {\n  path?: string[]\n  setting?: StatFilterSetting\n  index?: number\n  setTarget: (path: string[], oldPath?: string[], oldIndex?: number) => void\n  delTarget: (path: string[], index: number) => void\n  setValue: (path: string[], index: number, value: number) => void\n  setDisabled: (path: string[], index: number, disabled: boolean) => void\n  disabled: boolean\n}\nfunction OptimizationTargetEditorItem({ path, setting, index, setTarget, delTarget, setValue, setDisabled, disabled }: OptimizationTargetEditorItemProps) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { data } = useContext(DataContext)\n  const onChange = useCallback((val: number | undefined) => path && (index !== undefined) && setValue(path, index, val ?? 0), [setValue, path, index])\n  const buttonStyle = { p: 1, flexBasis: 30, flexGrow: 0, flexShrink: 0 }\n\n  const buildConstraintNode: NodeDisplay = objPathValue(data.getDisplay(), path ?? [])\n  const isPercent = buildConstraintNode?.info?.unit === \"%\"\n\n  return <ButtonGroup sx={{ \"& .MuiButtonGroup-grouped\": { minWidth: 24 }, width: \"100%\" }}>\n    {!!setting && !!path && (index !== undefined) && <Button sx={buttonStyle} color={setting.disabled ? \"secondary\" : \"success\"} onClick={() => setDisabled(path, index, !setting.disabled)} disabled={disabled}>\n      {setting.disabled ? <CheckBoxOutlineBlank /> : <CheckBox />}\n    </Button>}\n    <OptimizationTargetSelector showEmptyTargets optimizationTarget={path} setTarget={(target) => setTarget(target, path, index)} defaultText={t(\"targetSelector.selectBuildTarget\")} />\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: 150, flexGrow: 1 }}>\n      <CustomNumberInput\n        float\n        disabled={!path || disabled}\n        value={setting?.value}\n        placeholder=\"Stat Value\"\n        onChange={onChange}\n        sx={{ px: 1, }}\n        inputProps={{ sx: { textAlign: \"right\" } }}\n        endAdornment={isPercent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    {!!path && (index !== undefined) && <Button sx={buttonStyle} color=\"error\" onClick={() => delTarget(path, index)} disabled={disabled}>\n      <DeleteForever fontSize=\"small\" />\n    </Button>}\n  </ButtonGroup>\n}\n","import { Box, CardContent, Typography } from \"@mui/material\"\nimport { useCallback, useContext } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CardLight from \"../../../../../Components/Card/CardLight\"\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\nimport { StatFilters } from \"../../../../../Database/DataManagers/BuildSettingData\"\nimport useBuildSetting from \"../useBuildSetting\"\nimport OptimizationTargetEditorList from \"./OptimizationTargetEditorList\"\n\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setStatFilters = useCallback((statFilters: StatFilters) => buildSettingDispatch({ statFilters }), [buildSettingDispatch])\n\n  return <Box>\n    <CardLight>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography>{t`constraintFilter.title`}</Typography>\n        <InfoTooltip title={<Typography>{t`constraintFilter.tooltip`}</Typography>} />\n      </CardContent>\n    </CardLight>\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\n      <OptimizationTargetEditorList statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\n    </Box>\n  </Box>\n}\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\nimport CardDark from \"../../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\nimport CloseButton from \"../../../../../Components/CloseButton\";\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\nimport { ICachedCharacter } from \"../../../../../Types/character\";\nimport { CharacterKey } from \"../../../../../Types/consts\";\nimport useBuildSetting from \"../useBuildSetting\";\nconst CharacterSelectionModal = React.lazy(() => import('../../../../CharacterSelectionModal'))\n\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState(false)\n  const [{ equipmentPriority: tempEquipmentPriority }, setTO] = useState(database.displayOptimize.get())\n  useEffect(() => database.displayOptimize.follow((r, to) => setTO(to)), [database, setTO])\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => database.displayOptimize.set({ equipmentPriority }), [database])\n\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\n    const arr = [...equipmentPriority]\n    var element = arr[fromIndex];\n    arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, element);\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const removePrio = useCallback((fromIndex) => {\n    const arr = [...equipmentPriority]\n    arr.splice(fromIndex, 1)\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\n\n  const numAbove = useMemo(() => {\n    let numAbove = equipmentPriority.length\n    const index = equipmentPriority.indexOf(characterKey)\n    if (index >= 0) numAbove = index\n    return numAbove\n  }, [characterKey, equipmentPriority])\n  const numUseEquippedChar = useMemo(() => {\n    return database.chars.keys.length - 1 - numAbove\n  }, [numAbove, database])\n  const numUnlisted = useMemo(() => {\n    return database.chars.keys.length - equipmentPriority.length\n  }, [equipmentPriority, database])\n\n  return <Box display=\"flex\" gap={1}>\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{t`useEquipped.modal.title`}</Typography>\n          </Grid>\n          <Grid item sx={{ mb: -1 }}>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <CardLight sx={{ mb: 1 }}>\n          <CardContent>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\n          </CardContent>\n        </CardLight>\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n          {equipmentPriority.map((ck, i) =>\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"useEquipped.modal.clearList\">Clear List</Trans></Button>\n          </Box>\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\n        </Box>\n      </CardContent>\n    </CardDark ></ModalWrapper>\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\n        <Box>\n          <span><Trans t={t} i18nKey=\"useEquipped.title\">Use Equipped Artifacts</Trans></span>\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\n        </Box>\n      </Button>\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\n    </ButtonGroup>\n  </Box>\n}\n\nconst itemSize = 60\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\n  characterKey: CharacterKey,\n  rank: number,\n  maxRank: number,\n  setRank: (r: number | undefined) => void,\n  onRemove: () => void,\n  numAbove: number,\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { database } = useContext(DatabaseContext)\n  const character = useCharacter(characterKey)\n  const onClick = useCharSelectionCallback()\n  if (!character) return null\n  const { equippedWeapon, equippedArtifacts } = character\n  return <CardLight sx={{ p: 1 }}  >\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\n      <SqBadge color=\"info\">\n        <Typography>#{rank}</Typography>\n      </SqBadge>\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"useEquipped.modal.status.curr\">Current character</Trans>\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\n            <Trans t={t} i18nKey=\"useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\n      </SqBadge>\n      <Box>\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\n          <CustomNumberInputButtonGroupWrapper >\n            <CustomNumberInput onChange={setRank} value={rank}\n              // startAdornment=\"Rank:\"\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\n          </CustomNumberInputButtonGroupWrapper>\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\n            <KeyboardDoubleArrowUp />\n          </Button>\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\n            <KeyboardArrowUp />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\n            <KeyboardArrowDown />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\n            <KeyboardDoubleArrowDown />\n          </Button>\n          <Button color=\"error\" onClick={onRemove}>\n            <Close />\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n    <Grid container columns={7} spacing={1}>\n      <Grid item xs={1} >\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\n      </Grid>\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\n    </Grid>\n\n  </CardLight>\n}\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const [show, onOpen, onClose] = useBoolState(false)\n  const filter = useCallback((char?: ICachedCharacter) => {\n    if (!char) return false\n    return !list.includes(char.key)\n  }, [list])\n  return <>\n    <Suspense fallback={false}>\n      <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\n    </Suspense>\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\n      <Trans t={t} i18nKey=\"useEquipped.modal.add\">Add character to list</Trans>\n    </Button>\n  </>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport { Box, Button } from \"@mui/material\";\nimport { useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBuildSetting from \"../useBuildSetting\";\n\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\n    <Box>\n      <span><Trans t={t} i18nKey=\"useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\n    </Box>\n  </Button>\n}\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\nimport { input } from \"../../../../Formula\";\nimport { computeUIData } from \"../../../../Formula/api\";\nimport { formulaString } from \"../../../../Formula/debug\";\nimport { Data, NumNode } from \"../../../../Formula/type\";\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\n\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\nexport const dynamicData = {\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\n}\n\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\n  const result: ArtifactsBySlot = {\n    base: {},\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\n  }\n  const keys = new Set<string>()\n\n  for (const art of arts) {\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\n\n    const data: ArtifactBuildData = {\n      id: art.id, set: art.setKey,\n      values: {\n        [art.setKey]: 1,\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n        ...Object.fromEntries(art.substats.map(substat =>\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n      },\n    }\n    delete data.values[\"\"]\n    result.values[art.slotKey].push(data)\n    Object.keys(data.values).forEach(x => keys.add(x))\n  }\n  result.base = objectKeyMap([...keys], _ => 0)\n  if (allowPartial)\n    for (const value of Object.values(result.values))\n      value.push({ id: \"\", values: {} })\n  return result\n}\n\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\n  const stats = { ...base }\n  for (const art of arts) {\n    for (const [key, value] of Object.entries(art.values)) {\n      stats[key] = (stats[key] ?? 0) + value\n    }\n  }\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\n  const uiData = computeUIData([data])\n  return {\n    base, arts, stats,\n    data, uiData,\n    nodes: nodes.map(formulaString),\n    results: nodes.map(node => uiData.get(node)),\n  }\n}\n","import { CheckBox, CheckBoxOutlineBlank, Close, DeleteForever, Science, TrendingUp } from '@mui/icons-material';\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography } from '@mui/material';\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { GraphContext } from '../../../../Context/GraphContext';\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { defThreads } from '../../../../Database/DataEntries/DisplayOptimizeEntry';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { optimize } from '../../../../Formula/optimization';\nimport { NumNode } from '../../../../Formula/type';\nimport { UIData } from '../../../../Formula/uiData';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\nimport useMediaQueryUp from '../../../../ReactHooks/useMediaQueryUp';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport { CharacterKey, charKeyToLocCharKey, LocationCharacterKey } from '../../../../Types/consts';\nimport { objPathValue, range } from '../../../../Util/Util';\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\nimport { maxBuildsToShowList } from './Build';\nimport { artSetPerm, Build, filterFeasiblePerm, mergeBuilds, mergePlot, pruneAll, pruneExclusion, RequestFilter } from './common';\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\nimport BonusStatsCard from './Components/BonusStatsCard';\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\nimport BuildDisplayItem from './Components/BuildDisplayItem';\nimport ChartCard from './Components/ChartCard';\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\nimport StatFilterCard from './Components/StatFilterCard';\nimport UseEquipped from './Components/UseEquipped';\nimport UseExcluded from './Components/UseExcluded';\nimport { compactArtifacts, dynamicData } from './foreground';\nimport useBuildResult from './useBuildResult';\nimport useBuildSetting from './useBuildSetting';\n\nexport function useMemoEq<T>(factory: () => T, eq: (prev: T, next: T) => boolean): T {\n  const next = factory()\n  const ref = useRef(next)\n  if (!eq(ref.current, next)) {\n    ref.current = next\n  }\n  return ref.current\n}\nexport const arrayEq = <T extends unknown>(a: T[], b: T[]): boolean => a.length === b.length && a.every((x, i) => b[i] === x)\n\nexport default function TabBuild() {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const { setChartData, graphBuilds, setGraphBuilds } = useContext(GraphContext)\n\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\n  const generatingBuilds = buildStatus.type !== \"inactive\"\n\n  const [artsDirty, setArtsDirty] = useForceUpdate()\n\n  const [{ equipmentPriority, threads = defThreads }, setDisplayOptimize] = useState(database.displayOptimize.get())\n  useEffect(() => database.displayOptimize.follow((r, to) => setDisplayOptimize(to)), [database, setDisplayOptimize])\n\n  const maxWorkers = threads > defThreads ? defThreads : threads\n  const setMaxWorkers = useCallback(threads => database.displayOptimize.set({ threads }), [database],)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  // Clear state when changing characters\n  useEffect(() => {\n    setBuildStatus({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 })\n  }, [characterKey])\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { mainStatAssumptionLevel, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n  const plotBase = useMemoEq(() => buildSetting.plotBase, (a, b) => !!(a && b && arrayEq(a, b)))\n  const optimizationTarget = useMemoEq(() => buildSetting.optimizationTarget, (a, b) => !!(a && b && arrayEq(a, b)))\n  const { buildResult: { builds, buildDate }, buildResultDispatch } = useBuildResult(characterKey)\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n  const optimizationTargetNode = optimizationTarget && objPathValue(data?.getDisplay(), optimizationTarget)\n  const isSM = [\"xs\", \"sm\"].includes(useMediaQueryUp())\n\n  //register changes in artifact database\n  useEffect(() =>\n    database.arts.followAny(setArtsDirty),\n    [setArtsDirty, database])\n\n  // Provides a function to cancel the work\n  const cancelToken = useRef(() => { })\n  //terminate worker when component unmounts\n  useEffect(() => () => cancelToken.current(), [])\n  const generateBuilds = useCallback(async () => {\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n    if (!characterKey || !optimizationTarget) return\n\n    let cantTakeList: Set<LocationCharacterKey> = new Set()\n    if (useEquippedArts) {\n      const index = equipmentPriority.indexOf(characterKey)\n      if (index < 0) equipmentPriority.forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\n      else equipmentPriority.slice(0, index).forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\n    }\n    const filteredArts = database.arts.values.filter(art => {\n      if (art.level < levelLow) return false\n      if (art.level > levelHigh) return false\n      const mainStats = mainStatKeys[art.slotKey]\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\n\n      // If its equipped on the selected character, bypass the check\n      if (art.location === charKeyToLocCharKey(characterKey)) return true\n\n      if (art.exclude && !useExcludedArts) return false\n      if (art.location && !useEquippedArts) return false\n      if (art.location && useEquippedArts && cantTakeList.has(art.location)) return false\n      return true\n    })\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\n\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let unoptimizedOptimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!unoptimizedOptimizationTargetNode) return\n    const targetNode = unoptimizedOptimizationTargetNode\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters)\n      .flatMap(([pathStr, settings]) =>\n        settings\n          .filter(setting => !setting.disabled)\n          .map(setting => {\n            const filterNode: NumNode = objPathValue(workerData.display ?? {}, JSON.parse(pathStr))\n            const minimum = filterNode.info?.unit === \"%\" ? setting.value / 100 : setting.value // TODO: Conversion\n            return { value: filterNode, minimum: minimum }\n          })\n      )\n      .filter(x => x.value && x.minimum > -Infinity)\n\n    setChartData(undefined)\n\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\n\n    let unoptimizedNodes = [...valueFilter.map(x => x.value), unoptimizedOptimizationTargetNode], arts = split!\n    const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\n\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\n    const plotBaseNumNode: NumNode = plotBase && objPathValue(workerData.display ?? {}, plotBase)\n    if (plotBaseNumNode) {\n      unoptimizedNodes.push(plotBaseNumNode)\n      minimum.push(-Infinity)\n    }\n\n    const prepruneArts = arts\n    let nodes = optimize(unoptimizedNodes, workerData, ({ path: [p] }) => p !== \"dyn\")\n    nodes = pruneExclusion(nodes, artSetExclusion);\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\n    }))\n    nodes = optimize(nodes, {}, _ => false)\n\n    const plotBaseNode = plotBaseNumNode ? nodes.pop() : undefined\n    let optimizationTargetNode = nodes.pop()!\n\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => ({ src: \"\", val: -Infinity })) }\n\n    const minFilterCount = 16_000_000, maxRequestFilterInFlight = maxWorkers * 16\n    const unprunedFilters = setPerms[Symbol.iterator](), requestFilters: RequestFilter[] = []\n    const idleWorkers: number[] = [], splittingWorkers = new Set<number>()\n    const workers: Worker[] = []\n\n    function getThreshold(): number {\n      return wrap.buildValues[maxBuildsToShow - 1].val\n    }\n    function fetchContinueWork(): WorkerCommand {\n      return { command: \"split\", filter: undefined, minCount: minFilterCount, threshold: getThreshold() }\n    }\n    function fetchPruningWork(): WorkerCommand | undefined {\n      const { done, value } = unprunedFilters.next()\n      return done ? undefined : {\n        command: \"split\", minCount: minFilterCount,\n        threshold: getThreshold(), filter: value,\n      }\n    }\n    function fetchRequestWork(): WorkerCommand | undefined {\n      const filter = requestFilters.pop()\n      return !filter ? undefined : {\n        command: \"iterate\",\n        threshold: getThreshold(), filter\n      }\n    }\n\n    const filters = nodes\n      .map((value, i) => ({ value, min: minimum[i] }))\n      .filter(x => x.min > -Infinity)\n\n    const finalizedList: Promise<FinalizeResult>[] = []\n    for (let i = 0; i < maxWorkers; i++) {\n      const worker = new Worker(new URL('./BackgroundWorker.ts', import.meta.url))\n\n      const setup: Setup = {\n        command: \"setup\",\n        id: i, arts,\n        optimizationTarget: optimizationTargetNode,\n        plotBase: plotBaseNode,\n        maxBuilds: maxBuildsToShow,\n        filters\n      }\n      worker.postMessage(setup, undefined)\n      if (i === 0) {\n        const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\n        worker.postMessage(countCommand, undefined)\n      }\n      let finalize: (_: FinalizeResult) => void\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\n        switch (data.command) {\n          case \"interim\":\n            status.tested += data.tested\n            status.failed += data.failed\n            status.skipped += data.skipped\n            if (data.buildValues) {\n              wrap.buildValues = wrap.buildValues.filter(({ src }) => src !== data.source)\n              wrap.buildValues.push(...data.buildValues.map(val => ({ src: data.source, val })))\n              wrap.buildValues.sort((a, b) => b.val - a.val).splice(maxBuildsToShow)\n            }\n            break\n          case \"split\":\n            if (data.filter) {\n              requestFilters.push(data.filter)\n              splittingWorkers.add(data.id)\n            } else splittingWorkers.delete(data.id)\n            idleWorkers.push(data.id)\n            break\n          case \"iterate\":\n            idleWorkers.push(data.id)\n            break\n          case \"finalize\":\n            worker.terminate()\n            finalize(data);\n            return\n          case \"count\":\n            const [pruned, prepruned] = data.counts\n            status.total = prepruned\n            status.skipped += prepruned - pruned\n            return\n          default: console.log(\"DEBUG\", data)\n        }\n        while (idleWorkers.length) {\n          const id = idleWorkers.pop()!, worker = workers[id]\n          let work: WorkerCommand | undefined\n          if (requestFilters.length < maxRequestFilterInFlight) {\n            work = fetchPruningWork()\n            if (!work && splittingWorkers.has(id)) work = fetchContinueWork()\n          }\n          if (!work) work = fetchRequestWork()\n          if (work) worker.postMessage(work)\n          else {\n            idleWorkers.push(id)\n            if (idleWorkers.length === 4 * maxWorkers) {\n              const command: WorkerCommand = { command: \"finalize\" }\n              workers.forEach(worker => worker.postMessage(command))\n            }\n            break\n          }\n        }\n      }\n\n      workers.push(worker)\n      cancelled.then(() => worker.terminate())\n      finalizedList.push(finalized)\n    }\n    for (let i = 0; i < 3; i++)\n      idleWorkers.push(...range(0, maxWorkers - 1))\n\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\n    clearInterval(buildTimer)\n    cancelToken.current = () => { }\n\n    if (!results) {\n      status.tested = 0\n      status.failed = 0\n      status.skipped = 0\n      status.total = 0\n    } else {\n      if (plotBaseNumNode) {\n        const plotData = mergePlot(results.map(x => x.plotData!))\n        let data = Object.values(plotData)\n        if (targetNode.info?.unit === \"%\")\n          data = data.map(({ value, plot, artifactIds }) => ({ value: value * 100, plot, artifactIds })) as Build[]\n        if (plotBaseNumNode.info?.unit === \"%\")\n          data = data.map(({ value, plot, artifactIds }) => ({ value, plot: (plot ?? 0) * 100, artifactIds })) as Build[]\n        setChartData({\n          valueNode: targetNode,\n          plotNode: plotBaseNumNode,\n          data\n        })\n      }\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\n      buildResultDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\n    }\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\n  }, [characterKey, database, buildResultDispatch, maxWorkers, buildSetting, equipmentPriority, setChartData])\n\n  const characterName = characterSheet?.name ?? \"Character Name\"\n\n  const setPlotBase = useCallback(plotBase => {\n    buildSettingDispatch({ plotBase })\n    setChartData(undefined)\n  }, [buildSettingDispatch, setChartData])\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return data && teamData && { data, teamData }\n  }, [data, teamData])\n\n  const targetSelector = useMemo(() => <OptimizationTargetSelector\n    optimizationTarget={optimizationTarget}\n    setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n    disabled={generatingBuilds}\n  />, [buildSettingDispatch, generatingBuilds, optimizationTarget])\n\n  const clownEmoji = useMemo(() => <Grid container spacing={1} >\n    {/* 1*/}\n    <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n      {/* character card */}\n      <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n    </Grid>\n\n    {/* 2 */}\n    <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n      <CardLight>\n        <CardContent  >\n          <Typography gutterBottom>{t`mainStat.title`}</Typography>\n          <BootstrapTooltip placement=\"top\" title={<Box>\n            <Typography variant=\"h6\">{t`mainStat.levelAssTooltip.title`}</Typography>\n            <Typography>{t`mainStat.levelAssTooltip.desc`}</Typography>\n          </Box>}>\n            <Box>\n              <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\n            </Box>\n          </BootstrapTooltip>\n        </CardContent>\n        {/* main stat selector */}\n        <MainStatSelectionCard disabled={generatingBuilds} />\n      </CardLight>\n      <BonusStatsCard />\n    </Grid>\n\n    {/* 3 */}\n    <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\n      <ArtifactSetConfig disabled={generatingBuilds} />\n\n      {/* use excluded */}\n      <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\n\n      {/* use equipped */}\n      <UseEquipped disabled={generatingBuilds} />\n\n      <Button\n        fullWidth\n        startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        color={allowPartial ? \"success\" : \"secondary\"}\n        onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}\n        disabled={generatingBuilds}\n      >\n        {t`allowPartial`}\n      </Button>\n      { /* Level Filter */}\n      <CardLight>\n        <CardContent>{t`levelFilter`}</CardContent>\n        <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n          setLow={levelLow => buildSettingDispatch({ levelLow })}\n          setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n          setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n          disabled={generatingBuilds}\n        />\n      </CardLight>\n\n      {/*Minimum Final Stat Filter */}\n      <StatFilterCard disabled={generatingBuilds} />\n\n    </Grid>\n  </Grid>, [allowPartial, artsDirty, buildSettingDispatch, characterKey, generatingBuilds, levelHigh, levelLow, mainStatAssumptionLevel, onClickTeammate, t])\n  const selector0 = useMemo(() => <DropdownButton disabled={generatingBuilds || !characterKey}\n    title={<Trans t={t} i18nKey=\"build\" count={maxBuildsToShow}>\n      {{ count: maxBuildsToShow }} Builds\n    </Trans>}>\n    <MenuItem>\n      <Typography variant=\"caption\" color=\"info.main\">\n        {t(\"buildDropdownDesc\")}\n      </Typography>\n    </MenuItem>\n    <Divider />\n    {maxBuildsToShowList.map(v => <MenuItem key={v}\n      onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>\n      <Trans t={t} i18nKey=\"build\" count={v}>\n        {{ count: v }} Builds\n      </Trans>\n    </MenuItem>)}\n  </DropdownButton>, [buildSettingDispatch, characterKey, generatingBuilds, maxBuildsToShow, t])\n  const selector1 = useMemo(() => <DropdownButton disabled={generatingBuilds || !characterKey}\n    sx={{ borderRadius: \"4px 0px 0px 4px\" }}\n    title={<Trans t={t} i18nKey=\"thread\" count={maxWorkers}>\n      {{ count: maxWorkers }} Threads\n    </Trans>}>\n    <MenuItem>\n      <Typography variant=\"caption\" color=\"info.main\">\n        {t(\"threadDropdownDesc\")}\n      </Typography>\n    </MenuItem>\n    <Divider />\n    {range(1, defThreads).reverse().map(v => <MenuItem key={v}\n      onClick={() => setMaxWorkers(v)}>\n      <Trans t={t} i18nKey=\"thread\" count={v}>\n        {{ count: v }} Threads\n      </Trans>\n    </MenuItem>)}\n  </DropdownButton>, [characterKey, generatingBuilds, maxWorkers, setMaxWorkers, t])\n\n  const selector = useMemo(() => <ButtonGroup>\n    {!isSM && targetSelector}\n    {selector0}\n    {selector1}\n    <BootstrapTooltip placement=\"top\" title={!optimizationTarget ? t(\"selectTargetFirst\") : \"\"}>\n      <span>\n        <Button\n          disabled={!characterKey || !optimizationTarget || !optimizationTargetNode || optimizationTargetNode.isEmpty}\n          color={generatingBuilds ? \"error\" : \"success\"}\n          onClick={generatingBuilds ? () => cancelToken.current() : generateBuilds}\n          startIcon={generatingBuilds ? <Close /> : <TrendingUp />}\n          sx={{ borderRadius: \"0px 4px 4px 0px\" }}\n        >{generatingBuilds ? t(\"generateButton.cancel\") : t(\"generateButton.generateBuilds\")}</Button>\n      </span>\n    </BootstrapTooltip>\n  </ButtonGroup>, [characterKey, generateBuilds, generatingBuilds, isSM, optimizationTarget, optimizationTargetNode, selector0, selector1, t, targetSelector])\n  const target = useMemo(() => <Box >\n    <ChartCard disabled={generatingBuilds || !optimizationTarget} plotBase={plotBase} setPlotBase={setPlotBase} showTooltip={!optimizationTarget} graphBuilds={graphBuilds} setGraphBuilds={setGraphBuilds} />\n  </Box>, [generatingBuilds, graphBuilds, optimizationTarget, plotBase, setGraphBuilds, setPlotBase])\n  const card = useMemo(() => <CardLight>\n    <CardContent>\n      <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\n        <Typography sx={{ flexGrow: 1 }}>\n          {builds ? <span>Showing <strong>{builds.length + (graphBuilds ? graphBuilds.length : 0)}</strong> build generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\n            : <span>Select a character to generate builds.</span>}\n        </Typography>\n        <Button disabled={!builds.length} color=\"error\" onClick={() => { setGraphBuilds(undefined); buildResultDispatch({ builds: [], buildDate: 0 }) }} >Clear Builds</Button>\n      </Box>\n      <Grid container display=\"flex\" spacing={1}>\n        <Grid item><HitModeToggle size=\"small\" /></Grid>\n        <Grid item><ReactionToggle size=\"small\" /></Grid>\n        <Grid item flexGrow={1} />\n        <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(_e, v) => characterDispatch({ compareData: v })} size=\"small\">\n          <ToggleButton value={false} disabled={!compareData}>Show new builds</ToggleButton>\n          <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n        </SolidToggleButtonGroup></Grid>\n      </Grid>\n    </CardContent>\n  </CardLight>, [buildDate, buildResultDispatch, builds, characterDispatch, characterName, compareData, graphBuilds, setGraphBuilds])\n  const getLabel0 = useCallback((index) => <Trans t={t} i18nKey=\"graphBuildLabel\" count={index + 1}>Graph #{{ count: index + 1 }}</Trans>, [t])\n  const getLabel1 = useCallback((index) => `#${index + 1}`, [])\n  const bl = useMemo(() =>\n    <>\n      {graphBuilds && <BuildList builds={graphBuilds} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} getLabel={getLabel0} setBuilds={setGraphBuilds} />}\n      <BuildList builds={builds} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} getLabel={getLabel1} />\n    </>\n    , [builds, characterKey, compareData, data, generatingBuilds, getLabel0, getLabel1, graphBuilds, setGraphBuilds])\n  const ccc = useMemo(() => <OptimizationTargetContext.Provider value={optimizationTarget}>\n    {bl}\n  </OptimizationTargetContext.Provider>, [bl, optimizationTarget])\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"><Trans t={t} i18nKey=\"noArtis\">Oops! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifacts\">Artifacts</Link> page and add some!</Trans></Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n      {clownEmoji}\n      {/* Footer */}\n      {isSM && targetSelector}\n      {selector}\n\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\n      {target}\n      {card}\n      {ccc}\n    </DataContext.Provider>}\n  </Box>\n}\nfunction BuildList({ builds, setBuilds, characterKey, data, compareData, disabled, getLabel }: {\n  builds: string[][]\n  setBuilds?: (builds: string[][] | undefined) => void\n  characterKey?: \"\" | CharacterKey\n  data?: UIData\n  compareData: boolean\n  disabled: boolean\n  getLabel: (index: number) => Displayable\n}) {\n  const deleteBuild = useCallback((index: number) => {\n    if (setBuilds) {\n      const builds_ = [...builds]\n      builds_.splice(index, 1)\n      setBuilds(builds_)\n    }\n  },\n    [builds, setBuilds])\n\n  // TODO useMemo each build when the useContext spaghetti is cleaned up\n  // we should not rerender when changing main stat filters\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {builds?.map((build, index) => characterKey && data &&\n      <DataContextWrapper\n        key={index + build.join()}\n        characterKey={characterKey}\n        build={build}\n        oldData={data}\n      >\n        <BuildItemWrapper\n          index={index}\n          label={getLabel(index)}\n          build={build}\n          compareData={compareData}\n          disabled={disabled}\n          deleteBuild={setBuilds ? deleteBuild : undefined}\n        />\n      </DataContextWrapper>\n    )}\n  </Suspense>, [builds, characterKey, data, getLabel, compareData, disabled, setBuilds, deleteBuild])\n  return list\n}\nfunction BuildItemWrapper({ index, label, build, compareData, disabled, deleteBuild }: {\n  index: number\n  label: Displayable\n  build: string[]\n  compareData: boolean\n  disabled: boolean\n  deleteBuild?: (index: number) => void\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const location = useLocation()\n  const navigate = useNavigate()\n  const toTC = useCallback(() => {\n    const paths = location.pathname.split(\"/\")\n    paths.pop()\n    navigate(`${paths.join(\"/\")}/theorycraft`, { state: { build } })\n  }, [navigate, build, location.pathname])\n\n  return <BuildDisplayItem label={label} compareBuild={compareData} disabled={disabled}\n    extraButtonsLeft={<>\n      <Button color=\"info\" size=\"small\" startIcon={<Science />} onClick={toTC}>{t(\"theorycraftButton\")}</Button>\n      {deleteBuild && <Button color=\"error\" size=\"small\" startIcon={<DeleteForever />} onClick={() => deleteBuild(index)}>{t(\"removeBuildButton\")}</Button>}\n    </>}\n  />\n}\n\ntype Prop = {\n  children: React.ReactNode\n  characterKey: CharacterKey,\n  build: string[],\n  oldData: UIData,\n}\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\n  const { database } = useContext(DatabaseContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  // Update the build when the build artifacts are changed.\n  const [dirty, setDirty] = useForceUpdate()\n  useEffect(() => database.arts.followAny((id) => build.includes(id) && setDirty()), [database, build, setDirty])\n  const buildsArts = useMemo(() => dirty && build.map(i => database.arts.get(i)!), [dirty, build, database])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, buildsArts)\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\n  if (!providerValue) return null\n  return <DataContext.Provider value={providerValue}>\n    {children}\n  </DataContext.Provider>\n}\n","import { Close, Difference } from \"@mui/icons-material\"\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { DataContext } from \"../../../../Context/DataContext\"\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\nimport { objectMap } from \"../../../../Util/Util\"\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\n\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onShow, onHide] = useBoolState(false)\n\n  return <>\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\n      <CompareContent artId={artId} weaponId={weaponId} onHide={onHide} />\n    </ModalWrapper>\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\n    </Tooltip>\n  </>\n}\nfunction CompareContent({ artId, weaponId, onHide }: { artId?: string, weaponId?: string, onHide: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { data: oldData } = useContext(DataContext)\n  const build = useMemo(() => {\n    const newArt = database.arts.get(artId ?? \"\")\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\n    return Object.values(artmap).filter(a => a)\n  }, [database, equippedArtifacts, artId])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\n      <BuildDisplayItem compareBuild={true} extraButtonsLeft={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /></>} extraButtonsRight={<><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\n    </DataContext.Provider>}\n  </Suspense>\n}\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\nimport { SlotKey } from \"../../../../Types/consts\"\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\nimport CompareBuildButton from \"./CompareBuildButton\"\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\n\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\n\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\n\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\n\n  const brPt = useMediaQueryUp()\n\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\n  const artIdList = useMemo(() => {\n    const filterFunc = filterFunction(filterOption, filterConfigs)\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\n\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\n    <CardDark>\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\n        </Suspense>\n        <Box mt={1}>\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\n              {artIdList.map(id =>\n                <Grid item key={id} xs={1} >\n                  <ArtifactCard\n                    artifactId={id}\n                    extraButtons={<CompareBuildButton artId={id} />}\n                    onClick={clickHandler}\n                  />\n                </Grid>)}\n            </Grid>\n          </Suspense>\n        </Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\nimport usePromise from \"../../../../ReactHooks/usePromise\"\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\nimport { weaponFilterConfigs, weaponSortConfigs, weaponSortMap } from '../../../../Util/WeaponSort'\nimport CompareBuildButton from \"./CompareBuildButton\"\n\nconst rarityHandler = handleMultiSelect([...allRarities])\n\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id: string) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\n\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = useMemo(() => (weaponSheets && dbDirty && database.weapons.values\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, weaponFilterConfigs(weaponSheets)))\n    .sort(sortFunction(weaponSortMap[\"level\"] ?? [], false, weaponSortConfigs(weaponSheets)))\n    .map(weapon => weapon.id)) ?? []\n    , [dbDirty, database, weaponSheets, rarity, weaponTypeKey, deferredSearchTerm])\n\n  return <ModalWrapper open={show} onClose={onClose} >\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Grid container spacing={1} mb={1}>\n          <Grid item>\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\n              </ToggleButton>)}\n            </SolidToggleButtonGroup>\n          </Grid>\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"page_weapon:weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          {weaponIdList.map(weaponId =>\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\n              <WeaponCard\n                weaponId={weaponId}\n                onClick={clickHandler}\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\n              />\n            </Grid>)}\n        </Grid>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Settings, SwapHoriz } from '@mui/icons-material';\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery, useTheme } from '@mui/material';\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\nimport ModalWrapper from '../../../../Components/ModalWrapper';\nimport PercentBadge from '../../../../Components/PercentBadge';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Artifact from '../../../../Data/Artifacts/Artifact';\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\nimport useBoolState from '../../../../ReactHooks/useBoolState';\nimport useCharMeta from '../../../../ReactHooks/useCharMeta';\nimport usePromise from '../../../../ReactHooks/usePromise';\nimport { allSubstatKeys } from '../../../../Types/artifact';\nimport { allSlotKeys, charKeyToLocCharKey, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport ArtifactSwapModal from './ArtifactSwapModal';\nimport WeaponSwapModal from './WeaponSwapModal';\n\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\n\nexport default function EquipmentSection() {\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { teamData, data } = useContext(DataContext)\n  const weaponSheet = teamData[characterKey]?.weaponSheet\n  const [weaponId, setweaponId] = useState(\"\")\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\n\n  //triggers when character swap weapons\n  useEffect(() => {\n    if (weaponId && weaponId !== equippedWeapon)\n      setweaponId(equippedWeapon)\n  }, [weaponId, equippedWeapon])\n\n  const theme = useTheme();\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\n  const { rvFilter } = useCharMeta(characterKey)\n  const deferredRvFilter = useDeferredValue(rvFilter)\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\n  return <Box >\n    <Suspense fallback={false}>\n      <WeaponEditor\n        weaponId={weaponId}\n        footer\n        onClose={hideWeapon}\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\n      />\n    </Suspense>\n    <Grid container spacing={1}>\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        {weaponDoc && weaponDoc}\n        <ArtifactSectionCard />\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\n        </Grid>\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\n          {!!data.get(input.art[slotKey].id).value ?\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editorProps={{}} canExclude canEquip /> :\n            <ArtSwapCard slotKey={slotKey} />}\n        </Grid>)}\n      </Grid>\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <ArtifactSectionCard />\n        </Grid>\n      </Grid>}\n    </Grid>\n  </Box>\n}\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\n    <CardContent>\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\n    </CardContent>\n    <Divider />\n    <Box sx={{\n      flexGrow: 1,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }}\n    >\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\n      </Button>\n    </Box>\n  </CardLight>\n}\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\n  </>\n}\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\n  </>\n}\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\n  </>\n}\nfunction ArtifactSectionCard() {\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\n  const { database } = useContext(DatabaseContext)\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\n  const unequipArts = useCallback(() => {\n    if (!character) return\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\n  }, [character, database, equippedArtifacts])\n\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\n  const { rvFilter } = useCharMeta(characterKey)\n  const setRVFilter = useCallback(rvFilter => database.charMeta.set(characterKey, { rvFilter }), [database, characterKey],)\n\n  const [show, onShow, onHide] = useBoolState()\n  const deferredrvFilter = useDeferredValue(rvFilter)\n  const { rvField, rvmField } = useMemo(() => {\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\n      const art = database.arts.get(artid)\n      if (art) {\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\n\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\n      }\n      return a\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\n    const rvField: IFieldDisplay = {\n      text: t`artifact:editor.curSubEff`,\n      value: !(currentEfficiency - currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\n    }\n    const rvmField: IFieldDisplay = {\n      text: t`artifact:editor.maxSubEff`,\n      canShow: () => !!(currentEfficiency_ - maxEfficiency_),\n      value: !(maxEfficiency - maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\n    }\n    return { rvField, rvmField }\n  }, [t, deferredrvFilter, equippedArtifacts, database])\n\n  return <CardLight>\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\n    <CardContent >\n      <Stack spacing={1}>\n        <CardDark >\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\n          <ModalWrapper open={show} onClose={onHide}>\n            <CardDark>\n              <CardContent>\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\n              </CardContent>\n            </CardDark>\n          </ModalWrapper>\n          <FieldDisplayList >\n            <BasicFieldDisplay field={rvField} component={ListItem} data={data} />\n            {rvmField?.canShow?.(data) && <BasicFieldDisplay field={rvmField} component={ListItem} data={data} />}\n          </FieldDisplayList>\n        </CardDark>\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey + setNumKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\n          </CardDark>)\n        )}\n      </Stack>\n    </CardContent>\n  </CardLight>\n}\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport { Badge, Box, CardActionArea, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Assets from \"../../../../Assets/Assets\";\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport SqBadge from \"../../../../Components/SqBadge\";\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext } from \"../../../../Context/DataContext\";\nimport { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\nimport { getLevelString } from \"../../../../Data/LevelData\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\nimport useCharMeta from \"../../../../ReactHooks/useCharMeta\";\nimport { allSlotKeys, Ascension, ElementKey } from \"../../../../Types/consts\";\nimport { range } from \"../../../../Util/Util\";\nimport EquipmentSection from \"./EquipmentSection\";\n\nexport default function TabOverview() {\n  const scrollRef = useRef<HTMLDivElement>()\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\n\n  return <Stack spacing={1}>\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\n        <CharacterProfileCard />\n      </Grid>\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <EquipmentRow onClick={onScroll} />\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\n          <StatDisplayComponent />\n        </CardLight>\n      </Grid>\n    </Grid >\n    <Box ref={scrollRef}>\n      <EquipmentSection />\n    </Box>\n  </Stack>\n}\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\n    <Grid item xs={1}>\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\n    </Grid>\n    {allSlotKeys.map(slotKey =>\n      <Grid item key={slotKey} xs={1} >\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\n      </Grid>)}\n  </Grid>\n}\n/* Image card with star and name and level */\nfunction CharacterProfileCard() {\n  const { database } = useContext(DatabaseContext)\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(characterKey)\n  const navigate = useNavigate()\n  const charEle = data.get(input.charEle).value as ElementKey\n  const weaponTypeKey = characterSheet.weaponTypeKey\n  const level = data.get(input.lvl).value\n  const ascension = data.get(input.asc).value as Ascension\n  const constellation = data.get(input.constellation).value\n  const tlvl = {\n    auto: data.get(input.total.auto).value,\n    skill: data.get(input.total.skill).value,\n    burst: data.get(input.total.burst).value,\n  }\n  const tBoost = {\n    auto: data.get(input.bonus.auto).value,\n    skill: data.get(input.bonus.skill).value,\n    burst: data.get(input.bonus.burst).value,\n  }\n  const { favorite } = useCharMeta(characterKey)\n  return <CardLight sx={{ height: \"100%\" }} >\n    <Box sx={{ position: \"relative\" }}>\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\n          <StarsDisplay stars={characterSheet.rarity} colored />\n        </Typography>\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\n          <Chip color={charEle} sx={{ height: \"auto\" }}\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\n              {StatIcon[charEle]}\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\n            </Typography>} />\n        </Box>\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => database.charMeta.set(characterKey, { favorite: !favorite })}>\n            {favorite ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </Box>\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\n          <SqBadge>{getLevelString(level, ascension)}</SqBadge>\n        </Typography>\n      </Box>\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\n    </Box>\n    <Box>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\n        <Grid container spacing={1} mt={-1}>\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\n            <Grid item xs={4} key={tKey}>\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\n                overlap=\"circular\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  \"& > .MuiBadge-badge\": {\n                    fontSize: \"1.25em\",\n                    padding: \".25em .4em\",\n                    borderRadius: \".5em\",\n                    lineHeight: 1,\n                    height: \"1.25em\"\n                  }\n                }}>\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey)?.img} width=\"100%\" height=\"auto\" />\n              </Badge>\n            </Grid>)}\n        </Grid>\n      </CardActionArea>\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\n      <Grid container spacing={1}>\n        {range(1, 6).map(i =>\n          <Grid item xs={4} key={i}>\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey)?.img}\n                sx={{\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\n                }}\n                width=\"100%\" height=\"auto\" />\n            </CardActionArea>\n          </Grid>)}\n      </Grid>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\n        <Grid container columns={3} spacing={1}>\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\n        </Grid>\n      </CardActionArea>\n    </Box>\n  </CardLight >\n}\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery, useTheme } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from 'react';\nimport CardDark from \"../../../Components/Card/CardDark\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\nimport { DataContext } from '../../../Context/DataContext';\nimport { FormulaDataContext } from \"../../../Context/FormulaDataContext\";\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\nimport { uiInput as input } from \"../../../Formula\";\nimport { NumNode } from \"../../../Formula/type\";\nimport { NodeDisplay } from '../../../Formula/uiData';\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport { DocumentSection } from \"../../../Types/sheet\";\nimport { range } from \"../../../Util/Util\";\n\nconst talentSpacing = {\n  xs: 12,\n  sm: 6,\n  md: 4\n}\n\nexport default function CharacterTalentPane() {\n  const { character, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(character.key)\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n  const ascension = data.get(input.asc).value\n  const constellation = data.get(input.constellation).value\n\n  const theme = useTheme();\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\n    <SkillDisplayCard\n      talentKey={`constellation${i}` as TalentSheetElementKey}\n      subtitle={`Constellation Lv. ${i}`}\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\n    />), [constellation, characterDispatch])\n  return <>\n    <ReactionDisplay />\n    <Grid container spacing={1}>\n      {/* constellations for 4column */}\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\n        {/* auto, skill, burst */}\n        {skillBurstList.map(([tKey, tText]) =>\n          <Grid item key={tKey} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>)}\n        {!!characterSheet.getTalentOfKey(\"sprint\",) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"sprint\"\n            subtitle=\"Alternative Sprint\"\n          />\n        </Grid>}\n        {!!characterSheet.getTalentOfKey(\"passive\") && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"passive\"\n            subtitle=\"Passive\"\n          />\n        </Grid>}\n        {/* passives */}\n        {passivesList.map(([tKey, tText, asc]) => {\n          let enabled = ascension >= asc\n          if (!characterSheet.getTalentOfKey(tKey)) return null\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>\n        })}\n      </Grid>\n      {/* constellations for < 4 columns */}\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\n        <Grid item xs={12}>\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        </Grid>\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\n      </Grid>}\n    </Grid>\n  </>\n}\nfunction ReactionDisplay() {\n  const { data } = useContext(DataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1}>\n        {Object.entries(reaction).filter(([_, node]) => !node.isEmpty).map(([key, node]) => {\n          return <Grid item key={key}>\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\n              <NodeFieldDisplay node={node} data={data} setFormulaData={setFormulaData} />\n            </CardContent></CardDark>\n          </Grid>\n        })}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\ntype SkillDisplayCardProps = {\n  talentKey: TalentSheetElementKey,\n  subtitle: string,\n  onClickTitle?: (any) => any\n}\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n\n  const actionWrapeprFunc = useCallback(\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\n    [onClickTitle],\n  )\n\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\n\n  let header: Displayable | null = null\n\n  if (talentKey in talent) {\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\n    const level = data.get(input.total[talentKey]).value\n    const asc = data.get(input.asc).value\n\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\n      {range(1, talentLimits[asc]).map(i =>\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\n    </DropdownButton>\n  }\n  const talentSheet = characterSheet.getTalentOfKey(talentKey)\n\n  // Hide header if the header matches the current talent\n  const hideHeader = (section: DocumentSection): boolean => {\n    let headerAction = section.header?.action\n    if (headerAction && (typeof headerAction !== \"string\")) {\n      const key: string = headerAction.props.children.props.key18\n      return key.includes(talentKey)\n    }\n    return false\n  }\n\n  return <CardLight sx={{ height: \"100%\" }}>\n    {header}\n    <CardContent>\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\n          <Grid item>\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\n          </Grid>\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\n          </Grid>\n        </Grid>\n      </ConditionalWrapper>\n      {/* Display document sections */}\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\n    </CardContent>\n  </CardLight>\n}\n","import { PersonAdd } from \"@mui/icons-material\";\nimport { AutocompleteProps, CardContent, CardHeader, Divider, Grid, Skeleton, Typography, Box } from \"@mui/material\";\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\nimport ThumbSide from \"../../../Components/Character/ThumbSide\";\nimport ColorText from \"../../../Components/ColoredText\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport GeneralAutocomplete, { GeneralAutocompleteOption } from \"../../../Components/GeneralAutocomplete\";\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\nimport { FormulaDataContext } from \"../../../Context/FormulaDataContext\";\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../../Data/Characters/CharacterSheet\";\nimport { resonanceSheets } from \"../../../Data/Resonance\";\nimport { DatabaseContext } from \"../../../Database/Database\";\nimport { NodeDisplay } from \"../../../Formula/uiData\";\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\nimport useDBMeta from \"../../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../../ReactHooks/usePromise\";\nimport { CharacterKey, charKeyToCharName } from \"../../../Types/consts\";\nimport { objPathValue, range } from \"../../../Util/Util\";\n\nexport default function TabTeambuffs() {\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\n    <Grid container spacing={1}>\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <TeamBuffDisplay />\n        <ResonanceDisplay />\n      </Grid>\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\n        <TeammateDisplay index={i} />\n      </Grid>)}\n    </Grid>\n  </Box>\n}\nexport function TeamBuffDisplay() {\n  const { data, oldData } = useContext(DataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const teamBuffs = data.getTeamBuff()\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\n  if (!nodes.length) return null\n  return <CardLight>\n    <CardContent>\n      <Typography>Team Buffs</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Grid container>\n        {nodes.map(([path, n]) => n && <Grid item xs={12} key={JSON.stringify(n.info)} >\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} data={data} setFormulaData={setFormulaData} />\n        </Grid>)}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\nfunction ResonanceDisplay() {\n  const { t } = useTranslation(\"page_character\")\n  const { data } = useContext(DataContext)\n  const { character: { team } } = useContext(CharacterContext)\n  const teamCount = team.reduce((a, t) => a + (t ? 1 : 0), 1)\n  return <>\n    <CardLight>\n      <CardHeader title={<span>{t<string>(\"tabTeambuff.team_reso\")} <strong><ColorText color={teamCount >= 4 ? \"success\" : \"warning\"}>({teamCount}/4)</ColorText></strong> <InfoTooltip title={<Typography>{t`tabTeambuff.resonance_tip`}</Typography>} /></span>}\n        titleTypographyProps={{ variant: \"subtitle2\" }} />\n    </CardLight>\n    {resonanceSheets.map((res, i) => {\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\n      const title = <span>{res.name} {icon}</span>\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        {res.canShow(data) && <Divider />}\n        {res.canShow(data) && <CardContent>\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\n        </CardContent>}\n      </CardLight>\n    })}\n  </>\n}\nfunction TeammateDisplay({ index }: { index: number }) {\n  const { teamData } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character\")\n  const { character: active, character: { key: activeCharacterKey }, characterDispatch } = useContext(CharacterContext)\n  const teamMateKey = active.team[index]\n  const team = useMemo(() => [activeCharacterKey, ...active.team].filter((t, i) => (i - 1) !== index), [active.team, activeCharacterKey, index])\n  const onClickHandler = useCharSelectionCallback()\n  const setTeammate = useCallback((charKey: CharacterKey | \"\") => characterDispatch({ type: \"team\", index, charKey }), [index, characterDispatch])\n\n  const dataBundle = teamData[teamMateKey]\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\n    character: { ...dataBundle.character, conditional: active.teamConditional[teamMateKey] ?? {} },\n    characterSheet: dataBundle.characterSheet,\n    characterDispatch: (state) => {\n      if (!teamMateKey) return\n      if (!(\"conditional\" in state)) return\n      const { conditional } = state\n      characterDispatch({ type: \"teamConditional\", teamMateKey: teamMateKey, conditional })\n    }\n  }, [active, teamMateKey, dataBundle, characterDispatch])\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\n    data: dataBundle.target,\n    teamData: teamData,\n  }, [dataBundle, teamData])\n  return <CardLight>\n    <TeammateAutocomplete characterKey={teamMateKey} team={team}\n      setChar={setTeammate}\n      label={t(\"teammate\", { count: index + 1 })}\n    />\n    {teamMateKey && teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\n        <CharacterCard characterKey={teamMateKey}\n          onClickHeader={onClickHandler}\n          // Need to wrap these elements with the providers for them to use the correct functions.\n          artifactChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharArtifactCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          weaponChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharWeaponCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          characterChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharTalentCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          isTeammateCard\n        />\n      </DataContext.Provider>}\n    </CharacterContext.Provider>}\n  </CardLight>\n}\nfunction CharArtifactCondDisplay() {\n  const { data, } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const sections = useMemo(() => artifactSheets &&\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\n      .flatMap(([setKey, setNums]) =>\n        setNums.flatMap(sn => artifactSheets(setKey)!.setEffectDocument(sn)!))\n    , [artifactSheets, data])\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\nfunction CharWeaponCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const weaponSheet = teamData[charKey]!.weaponSheet\n  if (!weaponSheet.document) return null\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\n}\nfunction CharTalentCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const characterSheet = teamData[charKey]!.characterSheet\n  const sections = Object.values(characterSheet.talent).flatMap(sts => sts.sections)\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\n\nfunction TeammateAutocomplete({ characterKey, team, label, setChar, autoCompleteProps = {} }:\n  { characterKey, team: Array<CharacterKey | \"\">, label: string, setChar: (k: CharacterKey | \"\") => void, autoCompleteProps?: Omit<AutocompleteProps<GeneralAutocompleteOption<CharacterKey | \"\">, false, true, false>, \"renderInput\" | \"onChange\" | \"options\"> }) {\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\", \"sheet_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\n  const toText = useCallback((key: CharacterKey): string => key.startsWith(\"Traveler\") ? `${t(`charNames_gen:${charKeyToCharName(key, gender)}`)} (${t(`sheet_gen:element.${characterSheets?.(key, gender)?.elementKey}`)})` : t(`charNames_gen:${key}`), [characterSheets, t, gender])\n  const toImg = useCallback((key: CharacterKey | \"\") => key === \"\" ? <PersonAdd /> : characterSheets ? <ThumbSide src={characterSheets(key, gender)?.thumbImgSide} sx={{ pr: 1 }} /> : <></>, [characterSheets, gender])//\n  const isFavorite = useCallback((key: CharacterKey) => database.charMeta.get(key).favorite, [database])\n  const onDisable = useCallback(({ key }: { key: CharacterKey | \"\" }) => team.filter(t => t && t !== characterKey).includes(key) || (key.startsWith(\"Traveler\") && team.some((t, i) => t.startsWith(\"Traveler\"))), [team, characterKey])\n  const values: GeneralAutocompleteOption<CharacterKey | \"\">[] = useMemo(() => [{\n    key: \"\",\n    label: t`page_character:none`,\n  },\n  ...database.chars.keys\n    .map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\n    .sort((a, b) => {\n      if (a.favorite && !b.favorite) return -1\n      if (!a.favorite && b.favorite) return 1\n      return a.label.localeCompare(b.label)\n    })\n  ], [t, toText, isFavorite, database])\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><GeneralAutocomplete size=\"small\" label={label} options={values} valueKey={characterKey} clearKey=\"\" onChange={setChar} getOptionDisabled={onDisable} toImg={toImg} {...autoCompleteProps} /></Suspense>\n}\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CopyAll, DeleteForever, Info, Refresh } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardHeader, Divider, Grid, ListItem, MenuItem, Skeleton, Slider, Stack, ToggleButton, Typography } from \"@mui/material\";\nimport React, { Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport { ArtifactSetSingleAutocomplete } from \"../../../../Components/Artifact/ArtifactAutocomplete\";\nimport ArtifactSetTooltip from \"../../../../Components/Artifact/ArtifactSetTooltip\";\nimport SetEffectDisplay from \"../../../../Components/Artifact/SetEffectDisplay\";\nimport { slotIconSVG } from \"../../../../Components/Artifact/SlotNameWIthIcon\";\nimport BootstrapTooltip from \"../../../../Components/BootstrapTooltip\";\nimport CardDark from \"../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ColorText from \"../../../../Components/ColoredText\";\nimport CustomNumberInput from \"../../../../Components/CustomNumberInput\";\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../../Components/DropdownMenu/DropdownButton\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../../../Components/FieldDisplay\";\nimport FontAwesomeSvgIcon from \"../../../../Components/FontAwesomeSvgIcon\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport LevelSelect from \"../../../../Components/LevelSelect\";\nimport RefinementDropdown from \"../../../../Components/RefinementDropdown\";\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\";\nimport { StatColoredWithUnit, StatWithUnit } from \"../../../../Components/StatDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../../Context/DataContext\";\nimport Artifact, { maxArtifactLevel } from \"../../../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../../../Data/Artifacts/ArtifactSheet\";\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\";\nimport { initCharTC } from \"../../../../Database/DataManagers/CharacterTCData\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../../../Formula/api\";\nimport { constant, percent } from \"../../../../Formula/utils\";\nimport KeyMap, { cacheValueString } from \"../../../../KeyMap\";\nimport useBoolState from \"../../../../ReactHooks/useBoolState\";\nimport usePromise from \"../../../../ReactHooks/usePromise\";\nimport useTeamData from \"../../../../ReactHooks/useTeamData\";\nimport { ICachedArtifact, MainStatKey, SubstatKey } from \"../../../../Types/artifact\";\nimport { ICharTC, ICharTCArtifactSlot } from \"../../../../Types/character\";\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey, SubstatType, substatType, WeaponTypeKey } from \"../../../../Types/consts\";\nimport { ICachedWeapon } from \"../../../../Types/weapon\";\nimport { deepClone, objectMap } from \"../../../../Util/Util\";\nimport { defaultInitialWeaponKey } from \"../../../../Util/WeaponUtil\";\nimport useCharTC from \"./useCharTC\";\nimport { FormulaDataContext } from \"../../../../Context/FormulaDataContext\";\nconst WeaponSelectionModal = React.lazy(() => import('../../../../Components/Weapon/WeaponSelectionModal'))\n\ntype ISet = Partial<Record<ArtifactSetKey, 1 | 2 | 4>>\nexport default function TabTheorycraft() {\n  const { database } = useContext(DatabaseContext)\n  const { data: oldData } = useContext(DataContext)\n  const { character, character: { key: characterKey, compareData }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const data = useCharTC(characterKey, defaultInitialWeaponKey(characterSheet.weaponTypeKey))\n  const setData = useCallback((data: ICharTC) => database.charTCs.set(characterKey, data), [characterKey, database])\n  const resetData = useCallback(() => {\n    setData(initCharTC(defaultInitialWeaponKey(characterSheet.weaponTypeKey)))\n  }, [setData, characterSheet])\n  const setWeapon = useCallback(\n    (action: Partial<ICharTC[\"weapon\"]>) => {\n      setData({ ...data, weapon: { ...data.weapon, ...action } })\n    },\n    [setData, data],\n  )\n\n  const copyFrom = useCallback(\n    (eWeapon: ICachedWeapon, build: ICachedArtifact[]) => {\n      const newData = initCharTC(eWeapon.key)\n      newData.artifact.substats.type = data.artifact.substats.type\n\n      newData.weapon.level = eWeapon.level\n      newData.weapon.ascension = eWeapon.ascension\n      newData.weapon.refinement = eWeapon.refinement\n\n      const sets = {}\n      build.forEach(art => {\n        if (!art) return\n        const { slotKey, setKey, substats, mainStatKey, level, rarity } = art\n        newData.artifact.slots[slotKey].level = level\n        newData.artifact.slots[slotKey].statKey = mainStatKey\n        newData.artifact.slots[slotKey].rarity = rarity\n        sets[setKey] = (sets[setKey] ?? 0) + 1\n        substats.forEach(substat => {\n          if (substat.key) newData.artifact.substats.stats[substat.key] = (newData.artifact.substats.stats[substat.key] ?? 0) + substat.accurateValue\n        })\n      })\n      newData.artifact.sets = Object.fromEntries(Object.entries(sets).map(([key, value]) => [key,\n        value === 3 ? 2 :\n          value === 5 ? 4 :\n            value === 1 && !(key as string).startsWith(\"PrayersFor\") ? 0 : value\n      ]).filter(([key, value]) => value))\n      setData(newData)\n    },\n    [data, setData],\n  )\n  const location = useLocation()\n  const { build: locBuild } = (location.state as { build: string[] } | undefined) ?? { build: undefined }\n  useEffect(() => {\n    if (!locBuild) return\n    const eWeapon = database.weapons.get(character.equippedWeapon)!\n    copyFrom(eWeapon, locBuild.map(i => database.arts.get(i)!))\n    // WARNING: if copyFrom is included, it will cause a render loop due to its setData <---> data\n    // eslint-disable-next-line\n  }, [locBuild, database])\n\n  const copyFromEquipped = useCallback(\n    () => {\n      const eWeapon = database.weapons.get(character.equippedWeapon)!\n      copyFrom(eWeapon, Object.values(character.equippedArtifacts).map(a => database.arts.get(a)!).filter(a => a))\n    },\n    [database, character.equippedArtifacts, character.equippedWeapon, copyFrom],\n  )\n\n  const weapon: ICachedWeapon = useMemo(() => {\n    return {\n      ...data.weapon,\n      location: \"\",\n      lock: false,\n      id: \"\"\n    }\n  }, [data])\n  const setArtifact = useCallback((artifact: ICharTC[\"artifact\"]) => {\n    const data_ = deepClone(data)\n    data_.artifact = artifact\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstatsType = useCallback((t: SubstatType) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.type = t\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstats = useCallback((setSubstats: Record<SubstatKey, number>) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.stats = setSubstats\n    setData(data_)\n  }, [data, setData])\n\n  const deferredData = useDeferredValue(data)\n  const overriderArtData = useMemo(() => {\n    const stats = { ...deferredData.artifact.substats.stats }\n    Object.values(deferredData.artifact.slots).forEach(({ statKey, rarity, level }) =>\n      stats[statKey] = (stats[statKey] ?? 0) + Artifact.mainStatValue(statKey, rarity, level))\n    return {\n      art: objectMap(stats, (v, k) => k.endsWith(\"_\") ? percent(v / 100) : constant(v)),\n      artSet: objectMap(deferredData.artifact.sets, v => constant(v)),\n    }\n  }, [deferredData])\n\n  const overrideWeapon: ICachedWeapon = useMemo(() => ({\n    id: \"\",\n    location: \"\",\n    key: data.weapon.key,\n    level: data.weapon.level,\n    ascension: data.weapon.ascension,\n    refinement: data.weapon.refinement,\n    lock: false\n  }), [data])\n  const teamData = useTeamData(characterKey, 0, overriderArtData, overrideWeapon)\n\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n    }\n  }, [charUIData, teamData])\n  const dataContextValueWithOld: dataContextObj | undefined = useMemo(() => {\n    if (!dataContextValue) return undefined\n    return {\n      ...dataContextValue,\n      oldData: compareData ? oldData : undefined,\n    }\n  }, [dataContextValue, compareData, oldData])\n  return <Stack spacing={1}>\n    <CardLight>\n      <Box sx={{ display: \"flex\", gap: 1, p: 1 }}>\n        <Box sx={{ flexGrow: 1, display: \"flex\", gap: 1 }}>\n          <Button color=\"info\" onClick={copyFromEquipped} startIcon={<CopyAll />}>Copy from equipped</Button>\n          <Button color=\"error\" onClick={resetData} startIcon={<Refresh />}>Reset</Button>\n        </Box>\n        <SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n          <ToggleButton value={false} disabled={!compareData}>Show TC stats</ToggleButton>\n          <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n        </SolidToggleButtonGroup>\n      </Box>\n    </CardLight>\n    {dataContextValue ? <DataContext.Provider value={dataContextValue}>\n      <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n        <Grid item sx={{ flexGrow: -1 }}  >\n          <WeaponEditorCard weapon={weapon} setWeapon={setWeapon} weaponTypeKey={characterSheet.weaponTypeKey} />\n          <ArtifactMainLevelCard artifactData={data.artifact} setArtifactData={setArtifact} />\n        </Grid>\n        <Grid item sx={{ flexGrow: 1 }}  >\n          <ArtifactSubCard substats={data.artifact.substats.stats} setSubstats={setSubstats} substatsType={data.artifact.substats.type} setSubstatsType={setSubstatsType} mainStatKeys={Object.values(data.artifact.slots).map(s => s.statKey)} />\n        </Grid>\n      </Grid >\n    </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={500} />}\n    <CardLight sx={{ flexGrow: 1, p: 1 }}>\n      {dataContextValueWithOld ? <DataContext.Provider value={dataContextValueWithOld}>\n        <StatDisplayComponent />\n      </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={500} />}\n    </CardLight>\n\n  </Stack>\n}\n\nfunction WeaponEditorCard({ weapon, setWeapon, weaponTypeKey }: { weapon: ICachedWeapon, weaponTypeKey: WeaponTypeKey, setWeapon: (action: Partial<ICharTC[\"weapon\"]>) => void }) {\n  const { key, level = 0, refinement = 1, ascension = 0 } = weapon\n  const weaponSheet = usePromise(() => WeaponSheet.get(key), [key])\n  const [show, onShow, onHide] = useBoolState()\n  const { data } = useContext(DataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  return <CardLight sx={{ p: 1, mb: 1 }} >\n    <WeaponSelectionModal ascension={ascension} show={show} onHide={onHide} onSelect={k => setWeapon({ key: k })} weaponTypeFilter={weaponTypeKey} />\n    <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n      <Box display=\"flex\" gap={1}>\n        {weaponSheet && <Box\n          className={`grad-${weaponSheet.rarity}star`}\n          component=\"img\"\n          src={weaponSheet.getImg(weapon.ascension)}\n          sx={{ flexshrink: 1, flexBasis: 0, maxWidth: \"30%\", borderRadius: 1 }}\n        />}\n        <Stack spacing={1} flexGrow={1}>\n          <Button fullWidth color=\"info\" sx={{ flexGrow: 1 }} onClick={onShow}><Box sx={{ maxWidth: \"10em\" }}>{weaponSheet?.name}</Box></Button>\n          {weaponSheet?.hasRefinement && <RefinementDropdown refinement={refinement} setRefinement={r => setWeapon({ refinement: r })} />}\n        </Stack>\n      </Box>\n      {weaponSheet && <LevelSelect level={level} ascension={ascension} setBoth={setWeapon} useLow={!weaponSheet.hasRefinement} />}\n      <CardDark >\n        <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        <Divider />\n        {weaponUIData && <FieldDisplayList>\n          {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\n            const n = weaponUIData.get(node)\n            if (n.isEmpty || !n.value) return null\n            return <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} component={ListItem} data={data} setFormulaData={setFormulaData} />\n          })}\n        </FieldDisplayList>}\n      </CardDark>\n      {data && weaponSheet?.document && <DocumentDisplay sections={weaponSheet.document} />}\n    </Box>\n  </CardLight >\n}\n\nfunction ArtifactMainLevelCard({ artifactData, setArtifactData }:\n  { artifactData: ICharTC[\"artifact\"], setArtifactData: (a: ICharTC[\"artifact\"]) => void }) {\n  const setSlot = useCallback((slotKey: SlotKey) => (slot: ICharTCArtifactSlot) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.slots[slotKey] = slot\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  const setArtSet = useCallback((artSet: ISet) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.sets = artSet\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  return <Stack spacing={1} >\n    <CardLight sx={{ p: 1 }}>\n      <Stack spacing={1}>\n        {allSlotKeys.map(s => <ArtifactMainLevelSlot key={s} slotKey={s} slot={artifactData.slots[s]} setSlot={setSlot(s)} />)}\n      </Stack>\n    </CardLight>\n    <Suspense fallback={<Skeleton variant='rectangular' width='100%' height={200} />}>\n      <ArtifactSetsEditor artSet={artifactData.sets} setArtSet={setArtSet} />\n    </Suspense>\n  </Stack>\n}\nfunction ArtifactMainLevelSlot({ slotKey, slot, setSlot: setSlotProp }: { slotKey: SlotKey, slot: ICharTCArtifactSlot, setSlot: (s: ICharTCArtifactSlot) => void }) {\n  const { level, statKey, rarity } = slot\n  const keys = Artifact.slotMainStats(slotKey)\n  const setSlot = useCallback((action: Partial<ICharTCArtifactSlot>) => {\n    setSlotProp({ ...slot, ...action })\n  }, [slot, setSlotProp])\n  const setRarity = useCallback(\n    (r: ArtifactRarity) => {\n      const mLvl = maxArtifactLevel[r] ?? 0\n      if (level > mLvl) setSlot({ rarity: r, level: mLvl })\n      else setSlot({ rarity: r })\n    }, [level, setSlot])\n\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n    <FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"5em\", flexGrow: 1, display: \"flex\" }}>\n      {keys.length === 1 ?\n        <Box p={1} justifyContent=\"center\" alignItems=\"center\" width=\"100%\" display=\"flex\" gap={1}>{StatIcon[keys[0]]}{KeyMap.getStr(keys[0])}</Box> :\n        <DropdownButton sx={{ px: 0 }} fullWidth title={<StatWithUnit statKey={statKey} />} color={KeyMap.getVariant(statKey) ?? \"success\"}>\n          {keys.map(msk =>\n            <MenuItem key={msk} disabled={statKey === msk} onClick={() => setSlot({ statKey: msk })}>\n              <StatColoredWithUnit statKey={msk} />\n            </MenuItem>)}\n        </DropdownButton>}\n    </CardDark>\n    <DropdownButton sx={{ px: 0 }} title={<span>{rarity} <FontAwesomeIcon icon={faStar} /></span>} >\n      {[5, 4, 3].map(r =>\n        <MenuItem key={r} disabled={rarity === r} onClick={() => setRarity(r as ArtifactRarity)}>\n          <span>{r} <FontAwesomeIcon icon={faStar} /></span>\n        </MenuItem>)}\n    </DropdownButton>\n    <CustomNumberInput startAdornment=\"+\" value={level} color={Artifact.levelVariant(level)} onChange={l => l !== undefined && setSlot({ level: l })} sx={{ borderRadius: 1, pl: 1, my: 0, height: \"100%\" }} inputProps={{ sx: { pl: 0.5, width: \"2em\" }, max: 20, min: 0 }} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"4em\" }}>\n      <Box p={1} textAlign=\"center\">{`${cacheValueString(Artifact.mainStatValue(statKey, rarity, level), KeyMap.unit(statKey))}${KeyMap.unit(statKey)}`}</Box>\n    </CardDark>\n  </Box>\n}\n\nfunction ArtifactSetsEditor({ artSet, setArtSet }: { artSet: ISet, setArtSet(artSet: ISet) }) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const setSet = useCallback((setKey: ArtifactSetKey | \"\") => {\n    if (!setKey || !artifactSheets) return\n    setArtSet({ ...artSet, [setKey]: parseInt(Object.keys(artifactSheets(setKey).setEffects)[0]) })\n  }, [artSet, setArtSet, artifactSheets])\n\n  const setValue = useCallback((setKey: ArtifactSetKey) => (value: 1 | 2 | 4) => setArtSet({ ...artSet, [setKey]: value }), [artSet, setArtSet])\n  const deleteValue = useCallback((setKey: ArtifactSetKey) => () => {\n    const { [setKey]: _, ...rest } = artSet\n    setArtSet({ ...rest })\n  }, [artSet, setArtSet])\n\n  const remaining = 5 - Object.values(artSet).reduce((a, b) => a + b, 0)\n\n  return <Stack spacing={1} sx={{ flexGrow: 1 }}>\n    {Object.entries(artSet).map(([setKey, value]) => <ArtifactSetEditor key={setKey} setKey={setKey} value={value} setValue={setValue(setKey)} deleteValue={deleteValue(setKey)} remaining={remaining} />)}\n    <CardLight sx={{ flexGrow: 1 }}>\n      <ArtifactSetSingleAutocomplete\n        showDefault\n        disableClearable\n        size=\"small\"\n        artSetKey={\"\"}\n        setArtSetKey={setSet}\n        sx={(theme) => ({\n          flexGrow: 1,\n          \".MuiFilledInput-root\": {\n            borderBottomRightRadius: theme.shape.borderRadius,\n            borderBottomLeftRadius: theme.shape.borderRadius\n          }\n        })}\n        defaultText={\"New Artifact Set\"}\n        disable={(setKey) => Object.keys(artSet).includes(setKey) || !artifactSheets?.(setKey) || Object.keys(artifactSheets(setKey).setEffects).every(n => parseInt(n) > remaining)}\n      />\n    </CardLight>\n\n  </Stack>\n}\nfunction ArtifactSetEditor({ setKey, value, setValue, deleteValue, remaining }: { setKey: ArtifactSetKey, value: 1 | 2 | 4, setValue: (v: 1 | 2 | 4) => void, deleteValue: () => void, remaining: number }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (value < 4 || !artifactSheet) return []\n    return Object.keys(artifactSheet.setEffects).filter(setNumKey => artifactSheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [artifactSheet, value])\n\n  if (!artifactSheet) return null\n  return <CardLight>\n    <Box display=\"flex\">\n      <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={value}>\n        <Box flexGrow={1} p={1} display=\"flex\" gap={1} alignItems=\"center\">\n          <ImgIcon size={2} sx={{ m: -1 }} src={artifactSheet.defIconSrc} />\n          <Box >{artifactSheet.setName}</Box>\n          <Info />\n        </Box>\n      </ArtifactSetTooltip>\n      <ButtonGroup>\n        <DropdownButton size=\"small\" title={<Box whiteSpace=\"nowrap\">{value}-set</Box>}>\n          {Object.keys(artifactSheet.setEffects).map(setKey => parseInt(setKey)).map(setKey =>\n            <MenuItem key={setKey} disabled={value === setKey || setKey > (remaining + value)} onClick={() => setValue(setKey as 1 | 2 | 4)}>{setKey}-set</MenuItem>\n          )}\n        </DropdownButton>\n        <Button color=\"error\" size=\"small\" onClick={deleteValue}>\n          <DeleteForever />\n        </Button>\n      </ButtonGroup>\n    </Box>\n    {!!set4CondNums.length && <Stack spacing={1} sx={{ p: 1 }}>\n      {set4CondNums.map(setNumKey =>\n        <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n      )}\n    </Stack>}\n  </CardLight>\n}\nfunction ArtifactSubCard({ substats, setSubstats, substatsType, setSubstatsType, mainStatKeys }: { substats: Record<SubstatKey, number>, setSubstats: (substats: Record<SubstatKey, number>) => void, substatsType: SubstatType, setSubstatsType: (t: SubstatType) => void, mainStatKeys: MainStatKey[] }) {\n  const setValue = useCallback((key: SubstatKey) => (v: number) => setSubstats({ ...substats, [key]: v }), [substats, setSubstats])\n  const { t } = useTranslation(\"page_character\")\n  const rv = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k)), 0) * 100\n  const rolls = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k, undefined, substatsType)), 0)\n  return <CardLight sx={{ p: 1, height: \"100%\" }}>\n    <Box sx={{ mb: 1, display: \"flex\", gap: 1 }}>\n      <DropdownButton fullWidth title={t(`tabTheorycraft.substatType.${substatsType}`)}>\n        {substatType.map(st => <MenuItem key={st} disabled={substatsType === st} onClick={() => setSubstatsType(st)}>{t(`tabTheorycraft.substatType.${st}`)}</MenuItem>)}\n      </DropdownButton>\n      <BootstrapTooltip title={<Typography>{t`tabTheorycraft.maxTotalRolls`}</Typography>} placement=\"top\">\n        <CardDark sx={{ textAlign: \"center\", py: 0.5, px: 1, minWidth: \"15em\", whiteSpace: \"nowrap\", display: \"flex\", gap: 2, justifyContent: \"flex-end\", alignItems: \"center\" }}>\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >Rolls: <strong>{rolls.toFixed(0)}</strong></ColorText>\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\n        </CardDark>\n      </BootstrapTooltip>\n    </Box>\n    <Stack spacing={1}>\n      {Object.entries(substats).map(([k, v]) => <ArtifactSubstatEditor key={k} statKey={k} value={v} setValue={setValue(k)} substatsType={substatsType} mainStatKeys={mainStatKeys} />)}\n    </Stack>\n  </CardLight>\n}\nfunction ArtifactSubstatEditor({ statKey, value, setValue, substatsType, mainStatKeys }: { statKey: SubstatKey, value: number, setValue: (v: number) => void, substatsType: SubstatType, mainStatKeys: MainStatKey[] }) {\n  const { t } = useTranslation(\"page_character\")\n  const substatValue = Artifact.substatValue(statKey, 5, substatsType)\n  const [rolls, setRolls] = useState(() => value / substatValue)\n  useEffect(() => setRolls(value / substatValue), [value, substatValue])\n\n  const unit = KeyMap.unit(statKey)\n  const displayValue = rolls * substatValue\n\n  const rv = (rolls * substatValue) / Artifact.substatValue(statKey) * 100\n  const numMains = mainStatKeys.reduce((t, ms) => t + (ms === statKey ? 1 : 0), 0)\n  const maxRolls = (5 - numMains) * 6\n  // 0.0001 to nudge float comparasion\n  const invalid = (rolls - 0.0001) > maxRolls\n  const setRValue = useCallback((r: number) => setValue(r * substatValue), [setValue, substatValue])\n\n  return <Stack spacing={0.5}>\n    <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n      <CardDark sx={{ p: 0.5, minWidth: \"11em\", flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        {StatIcon[statKey]}{KeyMap.getStr(statKey)}{KeyMap.unit(statKey)}\n      </CardDark>\n      <BootstrapTooltip title={<Typography>{t(numMains ? `tabTheorycraft.maxRollsMain` : `tabTheorycraft.maxRolls`, { value: maxRolls })}</Typography>} placement=\"top\">\n        <CardDark sx={{ textAlign: \"center\", p: 0.5, minWidth: \"8em\" }}>\n          <ColorText color={invalid ? \"warning\" : undefined}>RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\n        </CardDark>\n      </BootstrapTooltip>\n    </Box>\n    <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n      <CustomNumberInput\n        color={displayValue ? \"success\" : \"primary\"}\n        float={KeyMap.unit(statKey) === \"%\"}\n        endAdornment={KeyMap.unit(statKey) || <Box width=\"1em\" component=\"span\" />}\n        value={parseFloat(displayValue.toFixed(2))}\n        onChange={v => v !== undefined && setValue(v)}\n        sx={{ borderRadius: 1, px: 1, height: \"100%\", width: \"6em\" }}\n        inputProps={{ sx: { textAlign: \"right\" }, min: 0 }} />\n      <CardDark sx={{ px: 2, flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Slider\n          size=\"small\"\n          value={rolls}\n          max={maxRolls}\n          min={0}\n          step={1}\n          marks\n          onChange={(e, v) => setRolls(v as number)}\n          onChangeCommitted={(e, v) => setRValue(v as number)}\n        />\n      </CardDark>\n      <CustomNumberInput\n        color={value ? (invalid ? \"warning\" : \"success\") : \"primary\"}\n        float\n        startAdornment={<Box sx={{ whiteSpace: \"nowrap\", width: \"7em\", display: \"flex\", justifyContent: \"space-between\" }}><span>{cacheValueString(substatValue, unit)}{unit}</span><span>x</span></Box>}\n        value={parseFloat(rolls.toFixed(2))}\n        onChange={v => v !== undefined && setValue(v * substatValue)}\n        sx={{ borderRadius: 1, px: 1, my: 0, height: \"100%\", width: \"7em\" }}\n        inputProps={{ sx: { textAlign: \"right\", pr: 0.5, }, min: 0, step: 1 }} />\n    </Box>\n  </Stack>\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { CharacterKey, WeaponKey } from \"../../../../Types/consts\"\n\nexport default function useCharTC(characterKey: CharacterKey, defWeapon: WeaponKey) {\n  const { database } = useContext(DatabaseContext)\n  const [charTC, setCharTC] = useState(() => database.charTCs.getWithInit(characterKey, defWeapon))\n  useEffect(() => setCharTC(database.charTCs.getWithInit(characterKey, defWeapon)), [database, characterKey, defWeapon])\n  useEffect(() =>\n    characterKey ? database.charTCs.follow(characterKey, (k, r, v) => r === \"update\" && setCharTC(v)) : undefined,\n    [characterKey, setCharTC, database])\n  return charTC\n}\n","import { MenuItem } from '@mui/material';\nimport { useContext } from 'react';\nimport ColorText from '../../Components/ColoredText';\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { stg } from '../../Data/SheetUtil';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\nimport { allElements, travelerElements, TravelerKey, TravelerToElement } from '../../Types/consts';\n\nexport default function TravelerElementSelect() {\n  const { character } = useContext(CharacterContext)\n  const { key } = character\n  const setCharacter = useCharSelectionCallback()\n  if (!(key.startsWith(\"Traveler\"))) return null\n\n  const elementKey = allElements.find(e => key.toLowerCase().includes(e))!\n\n  return <DropdownButton color={elementKey} title={<strong>{stg(`element.${elementKey}`)}</strong>}>\n    {travelerElements.map(eleKey =>\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => setCharacter(TravelerToElement(key as TravelerKey, eleKey))}>\n        <strong><ColorText color={eleKey}>{stg(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\n  </DropdownButton>\n}\n","import { Female, Male } from '@mui/icons-material';\nimport { Button } from '@mui/material';\nimport { useCallback, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DatabaseContext } from '../../Database/Database';\nimport useDBMeta from '../../ReactHooks/useDBMeta';\n\nexport default function TravelerGenderSelect() {\n  const { t } = useTranslation(\"ui\")\n  const { database } = useContext(DatabaseContext)\n  const { character } = useContext(CharacterContext)\n  const { key } = character\n  const { gender } = useDBMeta()\n  const toggleGender = useCallback(() => database.dbMeta.set({ gender: gender === \"F\" ? \"M\" : \"F\" }), [gender, database])\n  if (!(key.startsWith(\"Traveler\"))) return null\n  return <Button onClick={toggleGender} startIcon={gender === \"F\" ? <Female /> : <Male />}><strong>{t(`gender.${gender}`)}</strong>  </Button>\n}\n","import { BarChart, Calculate, FactCheck, Groups, Person, Science, TrendingUp } from '@mui/icons-material';\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\nimport { Suspense, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\nimport LevelSelect from '../../Components/LevelSelect';\nimport SqBadge from '../../Components/SqBadge';\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\nimport { ChartData, GraphContext, GraphContextObj } from '../../Context/GraphContext';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport { DatabaseContext } from '../../Database/Database';\nimport useBoolState from '../../ReactHooks/useBoolState';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport useDBMeta from '../../ReactHooks/useDBMeta';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport useTitle from '../../ReactHooks/useTitle';\nimport { CharacterKey, charKeyToCharName } from '../../Types/consts';\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\nimport CharSelectDropdown from './CharSelectDropdown';\nimport FormulaModal from './FormulaModal';\nimport StatModal from './StatModal';\nimport TabBuild from './Tabs/TabOptimize';\nimport TabOverview from './Tabs/TabOverview';\nimport TabTalent from './Tabs/TabTalent';\nimport TabTeambuffs from './Tabs/TabTeambuffs';\nimport TabTheorycraft from './Tabs/TabTheorycraft';\nimport TravelerElementSelect from './TravelerElementSelect';\nimport TravelerGenderSelect from './TravelerGenderSelect';\n\nexport default function CharacterDisplay() {\n  const navigate = useNavigate();\n  const { database } = useContext(DatabaseContext)\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !database.chars.keys.includes(characterKey as CharacterKey)\n  if (invalidKey)\n    return <Navigate to=\"/characters\" />\n\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\n    </Suspense>\n  </Box>\n}\n\ntype CharacterDisplayCardProps = {\n  characterKey: CharacterKey,\n  onClose?: () => void,\n}\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\n  const character = useCharacter(characterKey)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n  const teamData = useTeamData(characterKey)\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\"])\n\n  useTitle(useMemo(() => `${t(`charNames_gen:${charKeyToCharName(characterKey, gender)}`)} - ${t(`page_character:tabs.${tab}`)}`, [t, characterKey, gender, tab]))\n\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n      oldData: undefined,\n    }\n  }, [charUIData, teamData])\n\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\n    if (!character || !characterSheet) return undefined\n    return {\n      character,\n      characterSheet,\n      characterDispatch\n    }\n  }, [character, characterSheet, characterDispatch])\n\n  const [chartData, setChartData] = useState(undefined as ChartData | undefined)\n  const [graphBuilds, setGraphBuilds] = useState<string[][]>()\n  const graphContextValue: GraphContextObj | undefined = useMemo(() => {\n    return {\n      chartData,\n      setChartData,\n      graphBuilds,\n      setGraphBuilds\n    }\n  }, [chartData, graphBuilds])\n\n  // Clear state when switching characters\n  useEffect(() => {\n    setChartData(undefined)\n    setGraphBuilds(undefined)\n  }, [characterKey])\n\n  return <CardDark >\n    {dataContextValue && characterContextValue && graphContextValue\n      ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}><GraphContext.Provider value={graphContextValue}>\n        <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <Box display=\"flex\" >\n            <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\n              <CharSelectDropdown />\n              <TravelerElementSelect />\n              <TravelerGenderSelect />\n              <DetailStatButton />\n              <CustomMultiTargetButton />\n              <FormulasButton />\n            </Box>\n            {!!onClose && <CloseButton onClick={onClose} />}\n          </Box>\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n            {character && <LevelSelect level={character.level} ascension={character.ascension} setBoth={characterDispatch} />}\n            <HitModeToggle size=\"small\" />\n            <InfusionAuraDropdown />\n            <ReactionToggle size=\"small\" />\n          </Box>\n          <CardLight>\n            <TabNav tab={tab} />\n          </CardLight>\n          <CharacterPanel />\n          <CardLight>\n            <TabNav tab={tab} />\n          </CardLight>\n        </CardContent></FormulaDataWrapper>\n      </GraphContext.Provider></DataContext.Provider></CharacterContext.Provider>\n      : <Skeleton variant='rectangular' width='100%' height={1000} />\n    }\n  </CardDark >\n}\nfunction CharacterPanel() {\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\n    <Routes>\n      {/* Character Panel */}\n      <Route index element={<TabOverview />} />\n      <Route path=\"/talent\" element={<TabTalent />} />\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\n      <Route path=\"/optimize\" element={<TabBuild />} />\n      <Route path=\"/theorycraft\" element={<TabTheorycraft />} />\n    </Routes>\n  </Suspense>\n}\nfunction TabNav({ tab }: { tab: string }) {\n  const { t } = useTranslation(\"page_character\")\n  return <Tabs\n    value={tab}\n    variant=\"scrollable\"\n    allowScrollButtonsMobile\n    sx={{\n      \"& .MuiTab-root:hover\": {\n        transition: \"background-color 0.25s ease\",\n        backgroundColor: \"rgba(255,255,255,0.1)\"\n      },\n    }}\n  >\n    <Tab sx={{ minWidth: \"20%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"theorycraft\" label={t(\"tabs.theorycraft\")} icon={<Science />} component={RouterLink} to=\"theorycraft\" />\n  </Tabs>\n}\n\n\nfunction DetailStatButton() {\n  const { t } = useTranslation(\"page_character\")\n  const [open, onOpen, onClose] = useBoolState()\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const bStatsNum = Object.keys(bonusStats).length\n  return <>\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>\n      {t`addStats.title`}{!!bStatsNum && <SqBadge sx={{ ml: 1 }} color=\"success\" >{bStatsNum}</SqBadge>}\n    </Button>\n    <StatModal open={open} onClose={onClose} />\n  </>\n}\nfunction FormulasButton() {\n  const { onModalOpen } = useContext(FormulaDataContext)\n  return <>\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\n    <FormulaModal />\n  </>\n}\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../Assets/Assets\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport { LocationAutocomplete } from \"../Components/Character/LocationAutocomplete\"\nimport LocationName from \"../Components/Character/LocationName\"\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { StarsDisplay } from \"../Components/StarDisplay\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport { nodeVStr } from \"../Formula/uiData\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { LocationKey } from \"../Types/consts\"\n\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\n  const { database } = useContext(DatabaseContext)\n  const databaseWeapon = useWeapon(weaponId)\n  const weapon = databaseWeapon\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\n\n  const filter = useCallback((cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType, [weaponSheet])\n\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\n  const setLocation = useCallback((k: LocationKey) => weaponId && database.weapons.set(weaponId, { location: k }), [database, weaponId])\n\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n\n  if (!weapon || !weaponSheet || !UIData) return null;\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\n  const img = weaponSheet.getImg(ascension)\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\n            {lock ? <Lock /> : <LockOpen />}\n          </IconButton>}\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\n            </Box>\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n          </Box>\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\n            <Box\n              component=\"img\"\n              src={img ?? \"\"}\n              width=\"auto\"\n              height=\"100%\"\n              sx={{ float: \"right\" }}\n            />\n          </Box>\n        </Box>\n        <CardContent>\n          {stats.map(node => {\n            if (!node.info.name) return null\n            return <Box key={JSON.stringify(node.info)} sx={{ display: \"flex\" }}>\n              <Typography flexGrow={1}>{node.info.icon} {node.info.name}</Typography>\n              <Typography>{nodeVStr(node)}</Typography>\n            </Box>\n          })}\n        </CardContent>\n      </ConditionalWrapper>\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Box sx={{ flexGrow: 1 }}>\n          {canEquip\n            ? <LocationAutocomplete location={location} setLocation={setLocation} filter={filter} autoCompleteProps={{ getOptionDisabled: t => !t.key, disableClearable: true }} />\n            : <LocationName location={location} />}\n        </Box>\n        <ButtonGroup sx={{ height: \"100%\" }}>\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\n            <Button color=\"info\" onClick={() => onEdit(id)} >\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n          </Button>}\n          {extraButtons}\n        </ButtonGroup>\n      </Box>\n    </CardLight>\n  </Suspense>\n}\n"],"names":["MenuItemWithImage","value","image","text","theme","isSelected","addlElement","props","MenuItem","ListItemIcon","ListItemText","primaryTypographyProps","style","fontWeight","typography","fontWeightMedium","fontWeightRegular","ArtifactMultiAutocomplete","allArtifactKeysWithGrouper","selectedArtifactKeys","setArtifactKeys","getName","getImage","label","useTheme","options","useMemo","map","key","grouper","Autocomplete","autoHighlight","multiple","disableCloseOnSelect","onChange","handleChange","_","v","getOptionLabel","option","isOptionEqualToValue","renderInput","params","TextField","variant","InputLabelProps","color","palette","primary","length","type","renderOption","KeyMap","includes","renderTags","selected","getTagProps","index","element","allElementsWithPhy","ele","undefined","Chip","icon","ArtifactSetMultiAutocomplete","artSetKeys","setArtSetKeys","artifactSheets","usePromise","ArtifactSheet","t","useTranslation","allArtifactSetsAndRarities","Object","entries","flatMap","rarity","set","sort","sortByRarityAndName","defIcon","groupBy","toString","renderGroup","group","List","component","Box","ListSubheader","sx","top","stars","children","ArtifactMainStatMultiAutocomplete","mainStatKeys","setMainStatKeys","allMainStatKeys","StatIcon","ArtifactSubstatMultiAutocomplete","substatKeys","setSubstatKeys","allSubstatKeys","ArtifactSingleAutocomplete","selectedArtifactKey","setArtifactKey","disable","showDefault","defaultText","defaultIcon","concat","clearIcon","event","newValue","reason","getOptionDisabled","startAdornment","hasValue","ArtifactSetSingleAutocomplete","artSetKey","setArtSetKey","a","b","aName","i18n","bName","ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","TypeError","l","h","useEffect","width","display","alignItems","bgcolor","val","clamp","px","pl","inputProps","textAlign","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","ConditionalSelector","conditional","keys","states","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","Divider","st","ButtonGroup","orientation","disableElevation","isElement","disp","stateName","badgeColor","badgeText","ml","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","description","displayTitle","InfoTooltip","Typography","LevelSelect","level","ascension","useLow","ascensionMaxLevels","ascensionMaxLevelLow","ascensionMaxLevel","setLevel","maxLevelLow","maxLevel","findIndex","ascenML","setAscension","lowerAscension","contentDark","main","height","whiteSpace","ambiguousLevelLow","ambiguousLevel","milestoneLevelsLow","milestoneLevels","lv","as","RefinementDropdown","refinement","setRefinement","allRefinement","r","DisabledButton","styled","backgroundColor","secondary","TextButton","GraphContext","createContext","CharacterSelectionModal","React","CharSelectDropdown","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","Suspense","fallback","show","onHide","onSelect","ThumbSide","src","thumbImgSide","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","open","onClose","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Skeleton","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","database","DatabaseContext","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","nodeVStr","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","CustomNumberInput","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","enemyOverride","flexWrap","EnemyResText","justifyContent","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","bsProps","xs","md","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","Grid","container","spacing","item","href","target","rel","contentLight","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","lg","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","JSON","stringify","specialNode","charEle","elementKey","isMelee","otherStatReadNodes","n","miscStatReadNodes","StatDisplayCard","py","OptimizationTargetContext","filterFeasiblePerm","artSetPerm","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","some","x","newArts","newNodes","pruneExclusion","maxValues","mapFormulas","f","operation","operands","pass","fail","thres","threshold","forceRename","affineNodes","Set","topLevelAffine","visit","isAffine","add","forEach","op","has","dynKeys","forEachNodes","nonConst","assertUnreachable","base","nextDynKey","affine","affineMap","Map","customRead","accu","reaffineArt","stat","constantFold","dyn","objectMap","constant","fromEntries","result","objectKeyMap","allSlotKeys","slot","id","offsets","baseValue","progress","allowRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","art","otherBetterEqual","otherMaybeBetter","otherBetter","canSwitch","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","newOperands","op1","op2","j","ranges","range","reads","Error","computeMinMax","allOperations","reduce","c","sum","NaN","minMaxes","Math","mergeBuilds","builds","maxNum","slice","mergePlot","plots","scale","round","plot","build","filters","_artSets","artSets","available","kind","sets","exclusionToAllowed","populateShapes","indexOfShape","check","shape","check_free","remaining","rainbows","isolated","missing","rejected","required","allowedSet","allowedCounts","counts","push","find","groupped","used","requiredRainbows","usableRainbows","delete","replacing","allowedRainbows","shapes","noFilter","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","document","setEffectDocument","useBuildSetting","characterKey","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","useForceUpdate","dbDirty","forceUpdate","followAny","artKeysByRarity","reverse","artSlotCount","slotKey","artKeys","getNumSlots","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","allArtifactSets","fakeDataContextObj","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","className","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","large","setExclusionSet","slots","set4CondNums","setEffects","doc","opacity","defIconSrc","paddingTop","artifactSlotIcon","parseInt","tot","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","Assets","mainStatKey","substats","location","mainStatLevel","mainStatUnit","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","Artifact","LocationIcon","charKey","chars","LocationToCharacterKey","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","SubstatDisplay","numRolls","rolls","rollColor","unit","alignContent","gender","useDBMeta","CharacterSheet","marginTop","BusinessCenter","StatDisplayComponent","optimizationTarget","Masonry","sm","xl","Section","displayNsReads","nodeKey","emphasize","WeaponCardNano","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","computeUIData","dataObjForWeapon","WeaponNameTooltip","getImg","hasRefinement","WeaponStat","ArtifactSetBadges","artifacts","currentlyEquipped","setToSlots","arti","acc","curr","slotarr1","slotarr","ArtifactSetBadge","artifactSheet","numInSet","setActive","ArtifactSetTooltip","BuildDisplayItem","compareBuild","extraButtonsRight","extraButtonsLeft","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","aid","charKeyToLocCharKey","weapons","statProviderContext","dataContext_","artifactIdsBySlot","artiId","weaponNano","artNanos","oldId","newId","CompareArtifactModal","BuildHeader","Checkroom","onEquip","containerProps","minWidth","ArtifactCard","canExclude","canEquip","editorProps","disableSet","disableSlot","ChevronRight","fontSize","useBuildResult","buildResult","setBuildResult","buildResultDispatch","CustomDot","cx","cy","payload","selectedPoint","radiusSelected","radiusUnselected","colorSelected","colorUnselected","y","CustomShape","fill","stroke","points","CustomTooltip","xLabel","xUnit","yLabel","yUnit","setSelectedPoint","addBuildToList","graphBuilds","tooltipProps","canAddBuild","artiIds","artifactIds","artifactsBySlot","artiObj","clickAwayHandler","active","ClickAwayListener","onClickAway","stopPropagation","direction","ArtifactCardPico","artifactObj","valueString","EnhancedPoint","trueY","highlighted","this","ChartCard","plotBase","setPlotBase","showTooltip","chartData","setGraphBuilds","showDownload","setshowDownload","showMin","setshowMin","setSliderLow","setSliderHigh","_e","displayData","downloadData","sliderMin","sliderMax","currentBuild","objectKeyValueMap","highlightedBuildsSlotMap","convertArtiIdsToArtiSlotMap","enhancedDatum","datumSlotMap","highlightedSlotMap","minimumData","point","last","pop","allData","plotBaseNode","objPathValue","getDisplay","buttonText","OptimizationTargetSelector","setTarget","Download","DataDisplay","Chart","plotNode","valueNode","Slider","valueLabelFormat","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","optTargetColor","highlightedColor","currentColor","lineColor","chartOnClick","chartX","chartY","getNearestPoint","clickedX","clickedY","nearestDomPtData","Array","from","querySelectorAll","domPtA","domPtB","dataset","aChartX","aChartY","aDistance","sqrt","bChartX","bChartY","d","xValue","yValue","xLabelValue","getLabelFromNode","yLabelValue","ResponsiveContainer","ComposedChart","cursor","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","tickFormatter","Label","dy","YAxis","allowDecimals","angle","dx","Tooltip","wrapperStyle","Legend","Line","connectNulls","strokeWidth","isAnimationActive","dot","activeDot","Scatter","partialArtiSlotMap","textSuffix","artifactsSlotsToSelectMainStats","MainStatSelectionCard","MainStatSelectionCardFactory","mainStatKeySlotKey","mainStatKeySlotKey_","useMemoEq","arrayEq","numSel","mt","MainStatSelectionCardInnerFactoryAbstractBuilderMethod","OptimizationTargetEditorList","oldPath","oldIndex","statFilters_","oldPathStr","oldFilterArr","pathStr","filterArr","splice","delTarget","setTargetValue","setTargetDisabled","settings","setting","OptimizationTargetEditorItem","parse","setValue","setDisabled","buttonStyle","buildConstraintNode","isPercent","showEmptyTargets","DeleteForever","StatFilterCard","UseEquipped","useEquippedArts","useBoolState","displayOptimize","tempEquipmentPriority","equipmentPriority","setTO","to","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","char","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","dynamic","setReadNodeKeys","dynamicData","compactArtifacts","allowPartial","flower","plume","goblet","circlet","sands","mainStatVal","endsWith","substat","accurateValue","factory","eq","next","TabBuild","compareData","setChartData","buildStatus","setBuildStatus","setArtsDirty","threads","defThreads","setDisplayOptimize","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","maxBuildsToShow","buildDate","teamData","useTeamData","optimizationTargetNode","isSM","useMediaQueryUp","cancelToken","generateBuilds","getThreshold","fetchContinueWork","fetchPruningWork","fetchRequestWork","requestFilters","command","unprunedFilters","done","minCount","minFilterCount","buildValues","cantTakeList","ek","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","unoptimizedOptimizationTargetNode","targetNode","valueFilter","filterNode","cancelled","Promise","unoptimizedNodes","setPerms","plotBaseNumNode","prepruneArts","optimize","maxRequestFilterInFlight","Symbol","iterator","idleWorkers","splittingWorkers","workers","finalizedList","worker","Worker","URL","setup","maxBuilds","postMessage","countCommand","finalize","finalized","onmessage","source","terminate","pruned","prepruned","console","log","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","Date","targetSelector","clownEmoji","CharacterCard","selector0","maxBuildsToShowList","selector1","selector","TrendingUp","card","SolidToggleButtonGroup","exclusive","ToggleButton","getLabel0","getLabel1","bl","BuildList","getLabel","setBuilds","ccc","Provider","Link","RouterLink","deleteBuild","builds_","DataContextWrapper","BuildItemWrapper","join","useLocation","navigate","useNavigate","toTC","paths","pathname","Science","dirty","setDirty","buildsArts","providerValue","CompareBuildButton","artId","onShow","CompareContent","arrow","Difference","newArt","artmap","dataProviderValue","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","extraButtons","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","weaponSheets","setRarity","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","weaponType","weaponFilterConfigs","sortFunction","weaponSortMap","weaponSortConfigs","star","autoFocus","InputProps","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","rvFilter","useCharMeta","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","setRVFilter","charMeta","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","constellation","tlvl","auto","skill","burst","tBoost","favorite","left","colored","Favorite","FavoriteBorder","right","getLevelString","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","teamCount","titleTypographyProps","resonanceSheets","res","desc","activeCharacterKey","teamMateKey","onClickHandler","setTeammate","dataBundle","teammateCharacterContext","teamConditional","teamMateDataContext","TeammateAutocomplete","setChar","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","sts","autoCompleteProps","characterSheets","toText","startsWith","charKeyToCharName","toImg","PersonAdd","pr","isFavorite","onDisable","localeCompare","GeneralAutocomplete","valueKey","clearKey","WeaponSelectionModal","TabTheorycraft","useCharTC","defWeapon","charTCs","getWithInit","charTC","setCharTC","defaultInitialWeaponKey","setData","resetData","initCharTC","setWeapon","copyFrom","eWeapon","newData","artifact","stats","locBuild","copyFromEquipped","lock","setArtifact","data_","setSubstatsType","setSubstats","deferredData","overriderArtData","overrideWeapon","charUIData","dataContextValue","dataContextValueWithOld","CopyAll","Refresh","WeaponEditorCard","ArtifactMainLevelCard","artifactData","setArtifactData","ArtifactSubCard","substatsType","weaponUIData","weaponTypeFilter","flexshrink","setSlot","artifactData_","setArtSet","ArtifactMainLevelSlot","ArtifactSetsEditor","setSlotProp","mLvl","maxArtifactLevel","FontAwesomeSvgIcon","slotIconSVG","msk","faStar","my","setSet","deleteValue","rest","ArtifactSetEditor","disableClearable","setName","Info","rv","substatType","ArtifactSubstatEditor","substatValue","setRolls","displayValue","numMains","ms","maxRolls","invalid","setRValue","parseFloat","TravelerElementSelect","allElements","toLowerCase","stg","travelerElements","TravelerToElement","TravelerGenderSelect","toggleGender","dbMeta","Female","Male","CharacterDisplay","useParams","CharacterDisplayCard","useMatch","end","tab","useTitle","characterContextValue","graphContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","bStatsNum","BarChart","onModalOpen","Calculate","onDelete","cs","falseWrapperFunc","setLocation","falseWrapper","noWrap","faEdit","faTrashAlt"],"sourceRoot":""}